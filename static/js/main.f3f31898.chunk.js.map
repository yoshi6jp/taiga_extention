{"version":3,"sources":["components/Tomato.module.css","components/UserStory.module.css","components/task/TaskTimerButton.module.css","components/task/UserTasks.module.css","components/Controller.module.css","components/common/ToggleNumberInput.module.css","tomato.png","app/storage.ts","features/setting/settingSlice.ts","features/project/projectSlice.ts","features/userStory/userStorySlice.ts","features/milestone/milestoneSlice.ts","features/common/commonSlice.ts","app/rootReducer.ts","app/actions.ts","util/fetch.ts","features/project/projectEpic.ts","features/userStory/userStoryEpic.ts","app/rootEpic.ts","app/store.ts","actions.ts","util/timer.ts","store.ts","reducer.ts","util/useSideEffector.ts","util/toastr.tsx","sideEffectors/syncPomodoro.ts","AppDb.ts","util/firebase.ts","sideEffectors/dellFBTimer.ts","sideEffectors/index.ts","sideEffectors/fetchProject.ts","sideEffectors/fetchMilestones.ts","sideEffectors/fetchTasks.ts","sideEffectors/fetchTaskStatuses.ts","sideEffectors/fetchCustomAttrs.ts","sideEffectors/fetchCustomValueMap.ts","sideEffectors/fetchUser.ts","sideEffectors/patchCustomValue.ts","sideEffectors/signIn.ts","sideEffectors/patchTask.ts","sideEffectors/signOut.ts","sideEffectors/setAuthToken.ts","sideEffectors/setUrl.ts","sideEffectors/setPid.ts","sideEffectors/setMid.ts","sideEffectors/setCustomEid.ts","sideEffectors/setCustomRid.ts","sideEffectors/syncBizDays.ts","sideEffectors/syncRejectTaskStatusIds.ts","sideEffectors/addPomodoro.ts","sideEffectors/calcPomodoroTotal.ts","sideEffectors/loadPomodoroTotals.ts","sideEffectors/syncTaskId.ts","sideEffectors/setTimelineCloseTask.ts","sideEffectors/addFBTimer.ts","sideEffectors/setTimerId.ts","init.ts","Provider.tsx","util/handler.ts","components/common/LinearLoader.tsx","components/ProjectSelector.tsx","components/MilestoneSelector.tsx","components/CustomValuesSelector.tsx","components/DaysSelector.tsx","components/TaskStatusSelector.tsx","components/InputGroupSpinner.tsx","components/TimelimitCloseTask.tsx","components/Controller.tsx","components/UpdateButton.tsx","components/SignInForm.tsx","components/task/UserTasks.tsx","components/common/ToggleNumberInput.tsx","tomato.svg","components/Tomato.tsx","components/task/TaskTimerButton.tsx","components/common/InputGroupDisplayNumber.tsx","components/UserStory.tsx","components/UnEstimatedTasks.tsx","components/NotAssignedTasks.tsx","features/chart/ChartTypeSelector.tsx","components/chart/BurnUp.tsx","components/chart/BurnDown.tsx","components/chart/Chart.tsx","components/OverView.tsx","components/PersonalTasks.tsx","components/PersonalInfo.tsx","components/PersonalPage.tsx","components/PomodoroHeatmap.tsx","components/Pomodoro.tsx","util/notify.ts","features/task/util.ts","features/user/AvatarSquare.tsx","features/page/BoardPage.tsx","app/BridgeEffect.tsx","index.tsx","App.tsx","app/SideEffect.tsx","app/initialize.ts","components/Pomodoro.module.css"],"names":["module","exports","StorageKey","settingActions","setUrl","createAction","settingReducer","createReducer","url","pid","mid","custom_eid","custom_rid","builder","addCase","state","payload","settingSelectors","setting","useSettingSelector","useSelector","projectActions","fetchList","setList","projectReducer","list","loading","current","projectSelectors","project","useProjectSelector","userStoryActions","addTag","removeTag","userStoryReducer","userStorySelectors","userStory","useUserStorySelector","milestoneActions","setMid","milestoneReducer","String","milestoneSelectors","milestone","useMilestoneSelector","commonActions","epicDone","updateData","commonReducer","updatedTime","Date","now","commonSelectors","common","useCommonSelector","rootReducer","combineReducers","actions","fetchData","path","config","fromFetch","replace","baseUrl","pipe","mergeMap","res","json","projectEpic","action$","state$","ofType","switchMap","value","map","data","catchError","e","console","log","of","userStoryEpic","action","type","rootEpic","combineEpics","epicMiddleware","createEpicMiddleware","store","configureStore","reducer","middleware","getDefaultMiddleware","run","ActionTypes","_getFromStorage","key","localStorage","getItem","getFromStorage","TimerState","TimerMode","TimerDurationMin","FOCUS","SHORT","LONG","timer","tick","STOPPED","mode","duration","checkpointStartAt","NaN","checkpointElapsed","expireTimeout","tickInterval","tickOffsetTimeout","restoreExpired","estimateCompletedAt","restoreStorage","event","listener","this","isStopped","setExpireTimeout","setTickInterval","RUNNING","emit","status","saveStorage","clearExpireTimeout","clearTickInterval","isRunning","periodElapsed","PAUSED","isPaused","remaining","stop","start","_","defer","seconds","setTimeout","clearTimeout","adjusted","limit","setSecTickInterval","offset","setInterval","clearInterval","setItem","STATE","MODE","CHECKPOINT_START_AT","Number","isNaN","CHECKPOINT_ELAPSED","val","lsState","lsMode","lsCpStartAt","lsCpElapsed","includes","values","isValidMode","changeMode","cpElapsed","cpStartAt","Math","max","elapsed","EventEmitter","getFromStorageWithSubkey","subkey","setToStorage","item","setToStorageWithSubkey","initialState","token","timer_id","auth_token","auth_error","username","password","user","custom_attrs","custom_attr_e","custom_attr_r","biz_days","milestones","tasks","task_id","task","user_tasks","task_statuses","active_task_statuses","custom_value_map","WeakMap","reject_task_status_ids","updated_time","isOpen","pomodoro_date","pomodoro_number","pomodoro_used_number","loaded","pomodoro_daily_totals","pomodoro_state","pomodoro_mode","timelimit_close_task","in_progress_task_status_id","pomodoro_live_counts","SET_TOKEN","SET_TIMER_ID","SET_URL","SET_PID","SET_PROJECT","SET_MID","SET_MILESTONES","SET_MILESTONE","SET_CUSTOM_EID","SET_CUSTOM_ATTRS","SET_CUSTOM_ATTR_E","SET_CUSTOM_ATTR_R","SET_CUSTOM_RID","SET_BIZ_DAYS","ADD_BIZ_DAY","biz_day","chain","uniq","sort","REMOVE_BIZ_DAY","reject","SET_TASKS","SET_TASK_ID","RESET_TASK_ID","SET_TASK","SET_USER_TASKS","SET_TASK_STATUSES","SET_ACTIVE_TASK_STATUSES","SET_CUSTOM_VALUE_MAP","SET_USER","RESET_USER","SET_REJECT_TASK_STATUS_IDS","ADD_REJECT_TASK_STATUS_ID","reject_task_status_id","compact","REMOVE_REJECT_TASK_STATUS_ID","OPEN_CONTROLLER","CLOSE_CONTROLLER","UPDATE_DATA","SIGN_IN","SET_AUTH_TOKEN","SET_AUTH_ERROR","SIGN_OUT","ADD_POMODORO","USE_POMODORO","used_number","RESET_POMODORO","RESTORE_POMODORO","SET_POMODORO_TOTALS","LOADED","SET_POMODORO_STATE","SET_POMODORO_MODE","SET_TIMELIMIT_CLOSE_TASK","SET_IN_PROGRESS_TASK_STATUS_ID","task_status_id","SET_POMODORO_LIVE_COUNT","dispatchSideEffector","dispatch","sideEffector","dispatchSECaller","MessageWithIcon","icon","message","className","Notify","title","body","src","style","width","height","alt","toastr","toast","success","faCheck","error","faCheckCircle","syncPomodoro","dispatchm","POMODORO_DATE","POMODORO_NUMBER","POMODORO_USED_NUMBER","db","items","totals","version","stores","table","Dexie","dotenv","process","apiKey","REACT_APP_apiKey","VapidKey","REACT_APP_VapidKey","firebaseConfig","authDomain","REACT_APP_authDomain","databaseURL","REACT_APP_databaseURL","projectId","REACT_APP_projectId","storageBucket","REACT_APP_storageBucket","messagingSenderId","REACT_APP_messagingSenderId","appId","REACT_APP_appId","firebase","initializeApp","_messaging","messaging","navigator","serviceWorker","register","then","registration","get","useServiceWorker","usePublicVapidKey","onTokenRefresh","a","async","getToken","Timers","firestore","collection","requestPermission","catch","err","addTimer","add","click_action","window","location","href","id","delFBTimer","DEL_FB_TIMER","doc","delete","axios","postData","post","patchData","patch","errToastr","response","_error_message","rootSideEffector","FETCH_PROJECT","fetchProject","FETCH_MILESTONES","params","fetchMilestones","FETCH_TASKS","startM","moment","headers","is_closed","finished_date","diff","fetchTasks","FETCH_TASK_STATUSES","fetchTaskStatuses","FETCH_CUSTOM_ATTRS","fetchCustomAttrs","FETCH_CUSTOM_VALUE_MAP","length","Promise","all","custom_attr_val","fetchCustomValueMap","FETCH_USER","uid","fetchUser","PATCH_CUSTOM_VALUE","find","has","custom_value","attributes_values","meta","update_status","PATCH_TASK","use_pomodoro","patchCustomValue","USERNAME","PASSWORD","signIn","patchTask","removeItem","defaults","setAuthToken","URL","PID","MID","CUSTOM_EID","CUSTOM_RID","setPid","beforeMid","BIZ_DAYS","split","TIMELIMIT_CLOSE_TASK","setCustomEid","setCustomRid","dispathc","join","syncBizDays","REJECT_TASK_STATUS_IDS","syncRejectTaskStatusIds","completedAt","pure","dateKey","format","put","CALC_POMODORO_TOTAL","addPomodoro","query","totalDoc","where","toArray","pureValue","filter","dayOfWeek","day","date","toDate","LOAD_POMODORO_TOTALS","calcPomodoroTotal","loadPomodoroTotals","TASK_ID","syncTaskId","customize","setTimelineCloseTask","ADD_FB_TIMER","addFBTimer","TIMER_ID","setTimerId","init","syncStorage","getCustomAttr","RootContext","createContext","Provider","children","dispatchSE","useCallback","stateStore","useMemo","getter","setter","newState","stateStoreFactory","useSideEffector","useReducer","useEffect","orderBy","order","assigned_to","sortBy","firstDay","local","startOf","task_status","slug","Object","forEach","onSnapshot","docs","size","preventDefault","stopPropagation","LinearLoader","progress","buffer","ProjectSelector","projects","useContext","handleChange","target","InputGroup","InputGroupAddon","addonType","isEmpty","Input","onChange","name","MilestoneSelector","useDispatch","xdispatch","CustomValuesSelector","dayNameFromIdx","idx","getDefaultBizDays","biz","isWeekDay","weekClassName","DayItem","checked","isPlanning","eleId","classNames","FormGroup","check","inline","Label","disabled","isWeekendDay","UncontrolledTooltip","indexOf","dayName","DaysTable","useState","setItems","weekdays","setWeekdays","estimated_start","daysInSprint","estimated_finish","times","i","clone","getDays","weeks","chunk","Table","bordered","days","DaysSelector","Card","CardHeader","StatusItem","defaultChecked","TaskStatusSelector","CardBody","InputGroupSpinner","InputGroupText","faSpinner","TimelimitCloseTask","datetime","setDatetime","isFresh","setIsFresh","handleSubmit","Form","onSubmit","defaultValue","Button","ToggleIcon","rotation","undefined","faChevronCircleRight","Controller","stateUrl","handleUrl","toggle","taskboardUrl","project_extra_info","getTaskboardUrl","spName","range","head","last","getRange","styles","header","onClick","Badge","color","pill","rel","faExternalLinkAlt","Collapse","placeholder","UpdateButton","faSyncAlt","SignInForm","sign_in_username","setUsername","setPassword","setLoading","handleUsername","handlePassword","handleSignOut","faUser","faSignOutAlt","onInput","invalid","faKey","Spinner","faSignInAlt","barStyles","getTasksByUser","groupBy","AvatarSquare","props","random","square","getCustomVal","sum","getSumCustomVal","getSumCustomValClosed","getCustomValVersion","custon_value_map","isCustomValValid","r","isCustomValInvalid","NameAndWorkLoad","total","imgSrc","faGrinBeam","faGrinBeamSweat","faDizzy","tblCls","Medal","isNumber","abs","getGrade","grade","num","faMedal","TaskProgress","eid","reverse","label","allSum","Progress","multi","bar","UserRow","sums","isPast","hpd","customTotal","setTotal","sumItem","margedTotal","totalStr","photo","custom_input_td","bsSize","step","to","closed","UserTasks","members","setHpd","activeLen","taskSumByUser","rid","mapValues","reduce","result","getTaskSumByUser","notAssignedSum","endOf","tasksByUser","sortedMembers","member","Navbar","light","faTimes","faEquals","faGhost","ToggleNumberInput","onEditable","onValueChange","valid","submitting","disabledMessage","setChecked","setVal","running","setRunning","evt","currentTarget","handleVal","input_group","faHandPointRight","min","faCloudUploadAlt","readOnly","faEdit","_extends","assign","arguments","source","prototype","hasOwnProperty","call","apply","_objectWithoutProperties","excluded","sourceKeys","keys","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","TomatoState","createElement","fill","d","_ref","svgRef","x","y","viewBox","xmlSpace","ref","ForwardRef","forwardRef","Tomato","bl","br","fresh","FRESH","stale","STALE","TaskTimerButton","handleStart","resume","handlePause","pause","btn","faPause","faPlay","InputGroupDisplayNumber","convToTasksByUserStory","user_story","user_story_extra_info","every","needAuthMsg","UserStoryLink","usName","subject","TaskLink","taskName","Grade","display_medal","medal","TaskStatusItem","onSelect","handleClick","DropdownItem","handleSelect","UncontrolledDropdown","DropdownToggle","caret","status_extra_info","DropdownMenu","UserItem","TaskUserSelector","NotAssignedButton","faUserTimes","EstimateInput","unEstimated","ResultInput","setIsOpen","set_used_number","editable","setEditable","setSubmitting","handleToggle","handlePluse","handleMinus","handleReset","handleEditable","handleValueChange","handleUsePomodoro","elId","usableNumber","submittable","isMax","Popover","placement","trigger","PopoverHeader","PopoverBody","ButtonGroup","faPlus","faMinus","faEraser","TaskItem","inactive","Row","Col","UserStoryWithEstimate","UserStoryWithTaskUser","Tag","UserStory","tags","xs","md","UnEstimatedTasks","userStories","NotAssignedTasks","ChartTypeItem","faLevelDownAlt","faLevelUpAlt","ChartTypeDropdownItem","ChartTypeSelector","UncontrolledButtonDropdown","BurnUpChart","setData","chartSize","days_len","allTaskVal","ideal","getTaskCreated","completed","getTaskFinished","actual","formatter","toFixed","upperFirst","dataKey","stroke","strokeDasharray","BurnDownChart","getTaskCreatedToday","stackId","created_date","Chart","chartType","setChartType","tag","Link","faChalkboard","OverView","PersonalTasks","usList","userStoryMap","Map","us","first","some","CardFooter","PersonalInfo","PersonalPage","useParams","history","useHistory","handleGoBack","goBack","faArrowCircleLeft","Alert","PomodoroHeatmap","maxVal","maxBy","classForValue","ceil","tooltipDataAttrs","startDate","subtract","showWeekdayLabels","favico","require","secToMin","TimerIcon","short_break_icon","faCoffee","long_break_icon","faCookie","TimerItem","clickToClose","closeFn","clickToWaitClose","clickToChangeFocus","Pomodoro","isOpenDropdown","setIsOpenDropdown","setRemaining","setState","setMode","setProgress","unit","setUnit","toggleDropdown","prev","setRemainingAndUnit","toValueAndUnit","handleState","handleMode","handleTick","handleExpire","option","onDblclick","clickCount","closeTimer","Notification","permission","notification","sec","close","onclick","notify","tomatoIcon","handleRetry","handleRemove","handleAddFBTimer","handleDelFBTimer","on","removeAllListeners","today","bgColor","textColor","animation","badge","reset","taskTitle","taskSubject","truncate","displayLive","top","options","primary","button_group","InputGroupButtonDropdown","fix_w","faRedo","chip_set","faTasks","onRemove","trailingIcon","live","faUserFriends","entries","BoardItem","sm","lg","BoardPage","tasksByUid","sortedTasks","Breadcrumb","BreadcrumbItem","faHome","active","BridgeEffect","ReactDOM","render","exact","component","document","getElementById"],"mappings":"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","file":"static/js/main.f3f31898.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"fresh\":\"Tomato_fresh__2s5Ye\",\"stale\":\"Tomato_stale__3bjHh\",\"bl\":\"Tomato_bl__2-LRw\",\"br\":\"Tomato_br__2_ZQQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"UserStory_header__3lGFX\",\"display_medal\":\"UserStory_display_medal__3t53K\",\"medal\":\"UserStory_medal__2Zi1f\",\"is_closed\":\"UserStory_is_closed__2ABQp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"TaskTimerButton_btn__3yv2h\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"gold\":\"UserTasks_gold__3HGjY\",\"silver\":\"UserTasks_silver__1pI-2\",\"bronze\":\"UserTasks_bronze__3Y2bu\",\"custom_input_td\":\"UserTasks_custom_input_td__2hLT8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Controller_header__33lvE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input_group\":\"ToggleNumberInput_input_group__1wkB8\"};","module.exports = __webpack_public_path__ + \"static/media/tomato.c392a271.png\";","// import _ from \"lodash\";\n\nimport { store } from \"./store\";\nimport { settingActions } from \"../features/setting/settingSlice\";\nimport { milestoneActions } from \"../features/milestone/milestoneSlice\";\nexport enum StorageKey {\n  URL = \"taiga_url\",\n  TIMER_ID = \"taiga_timer_id\",\n  PID = \"taiga_pid\",\n  MID = \"taiga_mid\",\n  TASK_ID = \"taiga_task_id\",\n  CUSTOM_EID = \"taiga_custom_eid\",\n  CUSTOM_RID = \"taiga_custom_rid\",\n  BIZ_DAYS = \"taiga_biz_days\",\n  REJECT_TASK_STATUS_IDS = \"reject_task_status_ids\",\n  USERNAME = \"taiga_username\",\n  PASSWORD = \"taiga_password\",\n  POMODORO_DATE = \"taiga_pomodoro_date\",\n  POMODORO_NUMBER = \"taiga_pomodoro_number\",\n  POMODORO_USED_NUMBER = \"taiga_pomodoro_used_number\",\n  TIMELIMIT_CLOSE_TASK = \"taiga_timelimit_close_task\"\n}\n\nconst _getFromStorage = (key: string) => localStorage.getItem(key) || \"\";\nexport const getFromStorage = (key: StorageKey) => _getFromStorage(key);\nexport const getFromStorageWithSubkey = (key: StorageKey, subkey: string) =>\n  subkey ? _getFromStorage(`${subkey}/${key}`) : \"\";\n\nexport const setToStorage = (key: string, item: string) => {\n  localStorage.setItem(key, item);\n};\nexport const setToStorageWithSubkey = (\n  key: StorageKey,\n  subkey: string,\n  item: string\n) => (subkey ? setToStorage(`${subkey}/${key}`, item) : null);\nexport const syncStorage = () => {\n  const { dispatch } = store\n  const url = getFromStorage(StorageKey.URL);\n  // const timer_id = getFromStorage(StorageKey.TIMER_ID);\n  // const pid = getFromStorage(StorageKey.PID);\n  const mid = getFromStorage(StorageKey.MID);\n  // const custom_eid = getFromStorageWithSubkey(StorageKey.CUSTOM_EID, pid);\n  // const custom_rid = getFromStorageWithSubkey(StorageKey.CUSTOM_RID, pid);\n  // const biz_days = _.compact(\n  //   getFromStorageWithSubkey(StorageKey.BIZ_DAYS, mid).split(\",\")\n  // ).sort();\n  // const reject_task_status_ids = _.compact(\n  //   getFromStorageWithSubkey(StorageKey.REJECT_TASK_STATUS_IDS, pid).split(\",\")\n  // );\n\n  // const isOpen = !(url && pid && mid && custom_eid && custom_rid);\n\n  // const pomodoro_date = getFromStorage(StorageKey.POMODORO_DATE);\n  // const pomodoro_number = Number(\n  //   getFromStorage(StorageKey.POMODORO_NUMBER) || \"0\"\n  // );\n  // const pomodoro_used_number = Number(\n  //   getFromStorage(StorageKey.POMODORO_USED_NUMBER) || \"0\"\n  // );\n  // const task_id = getFromStorage(StorageKey.TASK_ID);\n  // timer_id &&\n  //   dispatch({ type: ActionTypes.SET_TIMER_ID, payload: { timer_id } });\n  // url && dispatch({ type: ActionTypes.SET_URL, payload: { url } });\n  url && dispatch(settingActions.setUrl(url))\n  // pid && dispatch({ type: ActionTypes.SET_PID, payload: { pid } });\n  // mid && dispatch({ type: ActionTypes.SET_MID, payload: { mid } });\n  mid && dispatch(milestoneActions.setMid(mid))\n  // custom_eid &&\n  //   dispatch({ type: ActionTypes.SET_CUSTOM_EID, payload: { custom_eid } });\n  // custom_rid &&\n  //   dispatch({ type: ActionTypes.SET_CUSTOM_RID, payload: { custom_rid } });\n  // biz_days.length &&\n  //   dispatch({ type: ActionTypes.SET_BIZ_DAYS, payload: { biz_days } });\n  // reject_task_status_ids.length &&\n  //   dispatch({\n  //     type: ActionTypes.SET_REJECT_TASK_STATUS_IDS,\n  //     payload: { reject_task_status_ids }\n  //   });\n\n  // task_id && dispatch({ type: ActionTypes.SET_TASK_ID, payload: { task_id } });\n  // isOpen && dispatch({ type: ActionTypes.OPEN_CONTROLLER });\n  // pomodoro_date &&\n  //   dispatch({\n  //     type: ActionTypes.RESTORE_POMODORO,\n  //     payload: { pomodoro_date, pomodoro_number, pomodoro_used_number }\n  //   });\n  // dispatch({ type: ActionTypes.LOADED });\n  // dispatch({ type: ActionTypes.LOAD_POMODORO_TOTALS });\n}","import {\n  createAction,\n  createReducer,\n} from \"@reduxjs/toolkit\";\nimport { useSelector } from \"react-redux\";\nimport { RootState } from '../../app/store'\ninterface State {\n  url: string;\n  pid: string;\n  mid: string;\n  custom_eid: string;\n  custom_rid: string;\n}\nconst initialState: State = {\n  url: \"\",\n  pid: \"\",\n  mid: \"\",\n  custom_eid: \"\",\n  custom_rid: \"\"\n}\nexport const settingActions = {\n  setUrl: createAction<string, \"/setting/setUrl\">(\"/setting/setUrl\")\n}\nexport const settingReducer = createReducer(initialState, builder => builder\n  .addCase(settingActions.setUrl, (state, { payload: url }) => ({\n    ...state, url\n  })))\nexport type SettingActionTypes = ReturnType<typeof settingActions.setUrl>\nexport const settingSelectors = {\n  urlSelector: (state: RootState) => state.setting.url\n}\n\nexport const useSettingSelector = {\n  useUrl: () => useSelector(settingSelectors.urlSelector)\n}\n","import {\n  createReducer,\n  createAction\n} from \"@reduxjs/toolkit\";\nimport { useSelector } from \"react-redux\";\nimport { RootState } from \"../../app/store\"\nimport { IUser } from \"../user/userSlice\";\nexport interface IProject {\n  id: number;\n  name: string;\n  members: IUser[];\n}\nexport interface IProjectExtraInfo {\n  id: number;\n  name: string;\n  slug: string;\n}\ninterface State {\n  list: IProject[];\n  loading: boolean;\n  current: IProject | null;\n}\nconst initialState: State = {\n  list: [],\n  loading: false,\n  current: null\n}\nexport const projectActions = {\n  fetchList: createAction<void, \"/project/fetchList\">(\"/project/fetchList\"),\n  setList: createAction<IProject[], \"/project/setList\">(\"/project/setList\")\n}\nexport const projectReducer = createReducer(initialState, builder => builder\n  .addCase(projectActions.fetchList, (state) => ({\n    ...state, loading: true\n  }))\n  .addCase(projectActions.setList, (state, { payload: list }) => ({\n    ...state, list, loading: false\n  }))\n)\n\nexport type ProjectActionTypes = ReturnType<typeof projectActions.fetchList> | ReturnType<typeof projectActions.setList>\nexport const projectSelectors = {\n  listSelector: (state: RootState) => state.project.list\n}\n\nexport const useProjectSelector = {\n  useList: () => useSelector(projectSelectors.listSelector)\n}","import { createReducer, createAction } from \"@reduxjs/toolkit\";\nimport { useSelector } from \"react-redux\";\nimport { RootState } from \"../../app/store\";\nexport interface IUserStoryExtraInfo {\n  id: number;\n  subject: string;\n  epics: any;\n  ref: number;\n}\ntype ITag = [string, string | null]\nexport interface IUserStory {\n  id: number;\n  subject: string;\n  tags: ITag[];\n}\ninterface State {\n  list: IUserStory[];\n  loading: boolean;\n}\nconst initialState: State = {\n  list: [],\n  loading: false\n}\nexport const userStoryActions = {\n  fetchList: createAction<{ milestone: number }, \"/userStory/fetchList\">(\"/userStory/fetchList\"),\n  setList: createAction<IUserStory[], \"/userStory/setList\">(\"/userStory/setList\"),\n  addTag: createAction<{ milestone: number, tag: string }, \"/userStory/addTag\">(\"/userStory/addTag\"),\n  removeTag: createAction<{ milestone: number, tag: string }, \"/userStory/removeTag\">(\"/userStory/removeTag\"),\n}\nexport const userStoryReducer = createReducer(initialState, builder => builder\n  .addCase(userStoryActions.fetchList, (state) => ({\n    ...state, loading: true\n  }))\n  .addCase(userStoryActions.setList, (state, { payload: list }) => ({\n    ...state, loading: false, list\n  }))\n)\nexport type UserStoryActionTypes = ReturnType<typeof userStoryActions.fetchList> | ReturnType<typeof userStoryActions.setList> | ReturnType<typeof userStoryActions.addTag> | ReturnType<typeof userStoryActions.removeTag>\nconst userStorySelectors = {\n  listSelector: (state: RootState) => state.userStory.list\n}\nexport const useUserStorySelector = {\n  useList: () => useSelector(userStorySelectors.listSelector)\n}\n\n\n","import { createReducer, createAction } from \"@reduxjs/toolkit\";\nimport { RootState } from \"../../app/store\";\nimport { useSelector } from \"react-redux\";\ninterface State {\n  mid: string;\n}\nconst initialState: State = {\n  mid: \"\"\n}\nexport const milestoneActions = {\n  setMid: createAction<string | number, \"/milestone/setMid\">(\"/milestone/setMid\")\n}\nexport const milestoneReducer = createReducer(initialState, builder => builder\n  .addCase(milestoneActions.setMid, (state, { payload: mid }) => ({\n    ...state, mid: String(mid)\n  }))\n)\nconst milestoneSelectors = {\n  midSelector: (state: RootState) => state.milestone.mid\n}\nexport const useMilestoneSelector = {\n  useMid: () => useSelector(milestoneSelectors.midSelector)\n}\n","import { createAction, createReducer } from \"@reduxjs/toolkit\";\nimport { useSelector } from \"react-redux\";\nimport { RootState } from \"../../app/store\";\ninterface State {\n  updatedTime: number;\n}\nconst initialState: State = {\n  updatedTime: 0\n}\nexport const commonActions = {\n  epicDone: createAction<void, \"/common/epicDone\">(\"/common/epicDone\"),\n  updateData: createAction<void, \"/common/updateData\">(\"/common/updateData\")\n}\nexport const commonReducer = createReducer(initialState, builder => builder\n  .addCase(commonActions.updateData, (state) => ({\n    ...state, updatedTime: Date.now()\n  }))\n)\nconst commonSelectors = {\n  updatedTimeSelector: (state: RootState) => state.common.updatedTime\n}\nexport const useCommonSelector = {\n  useUpdatedTime: () => useSelector(commonSelectors.updatedTimeSelector)\n}\nexport type CommonActionTypes = ReturnType<typeof commonActions.epicDone>\n  | ReturnType<typeof commonActions.updateData>\n","import { combineReducers } from \"@reduxjs/toolkit\";\nimport { settingReducer } from \"../features/setting/settingSlice\";\nimport { projectReducer } from \"../features/project/projectSlice\"\nimport { userStoryReducer } from \"../features/userStory/userStorySlice\";\nimport { milestoneReducer } from \"../features/milestone/milestoneSlice\";\nimport { commonReducer } from \"../features/common/commonSlice\";\n\nexport const rootReducer = combineReducers({\n  setting: settingReducer,\n  project: projectReducer,\n  userStory: userStoryReducer,\n  milestone: milestoneReducer,\n  common: commonReducer\n});\n","import { ProjectActionTypes, projectActions as project } from \"../features/project/projectSlice\";\nimport { SettingActionTypes, settingActions as setting } from '../features/setting/settingSlice'\nimport { CommonActionTypes, commonActions as common } from \"../features/common/commonSlice\"\nimport { UserStoryActionTypes, userStoryActions as userStory } from \"../features/userStory/userStorySlice\";\nexport type ActionTypes = ProjectActionTypes | SettingActionTypes | CommonActionTypes | UserStoryActionTypes\nexport const actions = {\n  common,\n  project,\n  setting,\n  userStory\n}\n","import { fromFetch } from \"rxjs/fetch\";\nimport { mergeMap } from \"rxjs/operators\";\nconst baseUrl = (url: string, path: string) => `${url.replace(/[¥/]$/, \"\")}/api/v1/${path}`;\nexport const fetchData = <T>(url: string, path: string, config?: RequestInit) => fromFetch(baseUrl(url, path), config).pipe<T>(\n  mergeMap(res => res.json())\n)","import { Epic, ofType } from \"redux-observable\";\nimport { catchError, switchMap, map } from 'rxjs/operators'\nimport { of } from \"rxjs\";\nimport { ActionTypes, actions } from \"../../app/actions\";\nimport { RootState } from \"../../app/store\";\nimport { fetchData } from \"../../util/fetch\";\nimport { IProject } from \"./projectSlice\";\nimport { commonActions } from \"../common/commonSlice\"\n\nconst fetchListEpic: Epic<ActionTypes, ActionTypes, RootState> = (action$, state$) => action$.pipe(\n  ofType(\"/project/fetchList\"),\n  switchMap(() => {\n    const { url } = state$.value.setting\n    return fetchData<IProject[]>(url, \"projects\")\n  }),\n  map(data => actions.project.setList(data)),\n  catchError(e => {\n    console.log(\"err\", e)\n    return of(commonActions.epicDone())\n  })\n)\nexport const projectEpic = [\n  fetchListEpic\n]","import { Epic, ofType } from \"redux-observable\";\nimport { catchError, switchMap, map } from \"rxjs/operators\";\nimport { of } from \"rxjs\";\nimport { ActionTypes, actions } from \"../../app/actions\";\nimport { RootState } from \"../../app/store\";\nimport { fetchData } from \"../../util/fetch\";\nimport { IUserStory } from \"./userStorySlice\";\nimport { commonActions } from \"../common/commonSlice\"\n\nconst fetchListEpic: Epic<ActionTypes, ActionTypes, RootState> = (action$, state$) => action$.pipe(\n  ofType(\"/userStory/fetchList\"),\n  switchMap((action) => {\n    const { url } = state$.value.setting\n    if (action.type === \"/userStory/fetchList\") {\n      const { milestone } = action.payload\n      return fetchData<IUserStory[]>(url, `userstories?milestone=${milestone}`)\n    } else {\n      return []\n    }\n  }),\n  map(data => actions.userStory.setList(data)),\n  catchError(e => {\n    console.log(\"err\", e)\n    return of(commonActions.epicDone())\n  })\n)\nexport const userStoryEpic = [\n  fetchListEpic\n]","import { combineEpics } from \"redux-observable\";\nimport { projectEpic } from \"../features/project/projectEpic\";\nimport { userStoryEpic } from \"../features/userStory/userStoryEpic\";\nexport const rootEpic = combineEpics(...projectEpic, ...userStoryEpic)\n","import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\nimport { createEpicMiddleware } from \"redux-observable\";\nimport { rootReducer } from \"./rootReducer\";\nimport { rootEpic } from \"./rootEpic\";\nimport { ActionTypes } from \"./actions\"\n\nexport type RootState = ReturnType<typeof rootReducer>\nconst epicMiddleware = createEpicMiddleware<ActionTypes, ActionTypes, RootState>()\nexport const store = configureStore({\n  reducer: rootReducer,\n  middleware: [...getDefaultMiddleware(), epicMiddleware]\n})\nepicMiddleware.run(rootEpic)\nexport type AppDispatch = typeof store.dispatch","import {\n  IProject,\n  IMilestone,\n  ICustomAttr,\n  ITask,\n  ICustomValueMap,\n  ITaskStatus,\n  IUser\n} from \"./store\";\nimport { IPomodoroHistory, IDailyTotal } from \"./AppDb\";\nimport { TimerState, TimerMode } from \"./util/timer\";\n\nexport enum ActionTypes {\n  SET_TOKEN = \"SET_TOKEN\",\n  SET_TIMER_ID = \"SET_TIMER_ID\",\n  ADD_FB_TIMER = \"ADD_FB_TIMER\",\n  DEL_FB_TIMER = \"DEL_FB_TIMER\",\n  SET_URL = \"SET_URL\",\n  SIGN_IN = \"SIGN_IN\",\n  SET_AUTH_TOKEN = \"SET_AUTH_TOKEN\",\n  SET_AUTH_ERROR = \"SET_AUTH_ERROR\",\n  SIGN_OUT = \"SIGN_OUT\",\n  SET_PID = \"SET_PID\",\n  FETCH_PROJECT = \"FETCH_PROJECT\",\n  SET_PROJECT = \"SET_PROJECT\",\n  FETCH_MILESTONES = \"FETCH_MILESTONES\",\n  SET_MID = \"SET_MID\",\n  SET_MILESTONES = \"SET_MILESTONES\",\n  SET_MILESTONE = \"SET_MILESTONE\",\n  SET_CUSTOM_EID = \"SET_CUSTOM_EID\",\n  SET_CUSTOM_RID = \"SET_CUSTOM_RID\",\n  FETCH_CUSTOM_ATTRS = \"FETCH_CUSTOM_ATTRS\",\n  SET_CUSTOM_ATTRS = \"SET_CUSTOM_ATTRS\",\n  SET_CUSTOM_ATTR_E = \"SET_CUSTOM_ATTR_E\",\n  SET_CUSTOM_ATTR_R = \"SET_CUSTOM_ATTR_R\",\n  SET_BIZ_DAYS = \"SET_BIZ_DAYS\",\n  ADD_BIZ_DAY = \"ADD_BIZ_DAY\",\n  REMOVE_BIZ_DAY = \"REMOVE_BIZ_DAY\",\n  FETCH_TASKS = \"FETCH_TASKS\",\n  SET_TASKS = \"SET_TASKS\",\n  SET_TASK_ID = \"SET_TASK_ID\",\n  RESET_TASK_ID = \"RESET_TASK_ID\",\n  SET_TASK = \"SET_TASK\",\n  SET_USER_TASKS = \"SET_USER_TASKS\",\n  PATCH_TASK = \"PATCH_TASK\",\n  FETCH_TASK_STATUSES = \"FETCH_TASK_STATUSES\",\n  SET_TASK_STATUSES = \"SET_TASK_STATUSES\",\n  SET_ACTIVE_TASK_STATUSES = \"SET_ACTIVE_TASK_STATUSES\",\n  FETCH_CUSTOM_VALUE_MAP = \"FETCH_CUSTOM_VALUE_MAP\",\n  SET_CUSTOM_VALUE_MAP = \"SET_CUSTOM_VALUE_MAP\",\n  PATCH_CUSTOM_VALUE = \"PATCH_CUSTOM_VALUE\",\n  FETCH_USER = \"FETCH_USER\",\n  SET_USER = \"SET_USER\",\n  RESET_USER = \"RESET_USER\",\n  SET_REJECT_TASK_STATUS_IDS = \"SET_REJECT_TASK_STATUS_IDS\",\n  ADD_REJECT_TASK_STATUS_ID = \"ADD_REJECT_TASK_STATUS_ID\",\n  REMOVE_REJECT_TASK_STATUS_ID = \"REMOVE_REJECT_TASK_STATUS_ID\",\n  OPEN_CONTROLLER = \"OPEN_CONTROLLER\",\n  CLOSE_CONTROLLER = \"CLOSE_CONTROLLER\",\n  UPDATE_DATA = \"UPDATE_DATA\",\n  ADD_POMODORO = \"ADD_POMODORO\",\n  USE_POMODORO = \"USE_POMODORO\",\n  RESET_POMODORO = \"RESET_POMODORO\",\n  RESTORE_POMODORO = \"RESTORE_POMODORO\",\n  CALC_POMODORO_TOTAL = \"CALC_POMODORO_TOTAL\",\n  LOAD_POMODORO_TOTALS = \"LOAD_POMODORO_TOTALS\",\n  SET_POMODORO_TOTALS = \"SET_POMODORO_TOTALS\",\n  LOADED = \"LOADED\",\n  SET_POMODORO_STATE = \"SET_POMODORO_STATE\",\n  SET_POMODORO_MODE = \"SET_POMODORO_MODE\",\n  SET_TIMELIMIT_CLOSE_TASK = \"SET_TIMELIMIT_CLOSE_TASK\",\n  SET_IN_PROGRESS_TASK_STATUS_ID = \"SET_IN_PROGRESS_TASK_STATUS_ID\",\n  SET_POMODORO_LIVE_COUNT = \"SET_POMODORO_LIVE_COUNT\"\n}\n\nexport interface IAction {\n  type: ActionTypes;\n  payload?: any;\n  meta?: { [key: string]: any };\n}\nexport interface SET_TOKEN extends IAction {\n  type: ActionTypes.SET_TOKEN;\n  payload: { token: string | null };\n}\nexport interface SET_TIMER_ID extends IAction {\n  type: ActionTypes.SET_TIMER_ID;\n  payload: { timer_id: string | null };\n}\nexport interface ADD_FB_TIMER extends IAction {\n  type: ActionTypes.ADD_FB_TIMER;\n  payload: { title: string; body: string; remaining: number };\n}\nexport interface DEL_FB_TIMER extends IAction {\n  type: ActionTypes.DEL_FB_TIMER;\n}\nexport interface SET_URL extends IAction {\n  type: ActionTypes.SET_URL;\n  payload: { url: string };\n}\nexport interface SIGN_IN extends IAction {\n  type: ActionTypes.SIGN_IN;\n  payload: { username: string; password: string };\n}\nexport interface SET_AUTH_TOKEN extends IAction {\n  type: ActionTypes.SET_AUTH_TOKEN;\n  payload: { auth_token: string };\n}\nexport interface SET_AUTH_ERROR extends IAction {\n  type: ActionTypes.SET_AUTH_ERROR;\n}\nexport interface SIGN_OUT extends IAction {\n  type: ActionTypes.SIGN_OUT;\n}\n// export interface FETCH_PROJECTS extends IAction {\n//   type: ActionTypes.FETCH_PROJECTS;\n// }\n// export interface SET_PROJECTS extends IAction {\n//   type: ActionTypes.SET_PROJECTS;\n//   payload: { projects: IProject[] };\n// }\n\nexport interface SET_PID extends IAction {\n  type: ActionTypes.SET_PID;\n  payload: { pid: string };\n}\nexport interface FETCH_PROJECT extends IAction {\n  type: ActionTypes.FETCH_PROJECT;\n  payload: { pid: string };\n}\nexport interface SET_PROJECT extends IAction {\n  type: ActionTypes.SET_PROJECT;\n  payload: { project: IProject };\n}\nexport interface FETCH_MILESTONES extends IAction {\n  type: ActionTypes.FETCH_MILESTONES;\n  payload: { project: string };\n}\nexport interface SET_MILESTONES extends IAction {\n  type: ActionTypes.SET_MILESTONES;\n  payload: { milestones: IMilestone[] };\n}\n\nexport interface SET_MID extends IAction {\n  type: ActionTypes.SET_MID;\n  payload: { mid: string };\n}\nexport interface SET_MILESTONE extends IAction {\n  type: ActionTypes.SET_MILESTONE;\n  payload: { milestone: IMilestone };\n}\n\nexport interface SET_CUSTOM_EID extends IAction {\n  type: ActionTypes.SET_CUSTOM_EID;\n  payload: { custom_eid: string };\n}\n\nexport interface SET_CUSTOM_RID extends IAction {\n  type: ActionTypes.SET_CUSTOM_RID;\n  payload: { custom_rid: string };\n}\n\nexport interface FETCH_CUSTOM_ATTRS extends IAction {\n  type: ActionTypes.FETCH_CUSTOM_ATTRS;\n  payload: { project: string };\n}\nexport interface SET_CUSTOM_ATTRS extends IAction {\n  type: ActionTypes.SET_CUSTOM_ATTRS;\n  payload: { custom_attrs: ICustomAttr[] };\n}\nexport interface SET_CUSTOM_ATTR_E extends IAction {\n  type: ActionTypes.SET_CUSTOM_ATTR_E;\n  payload: { custom_attr_e: ICustomAttr };\n}\nexport interface SET_CUSTOM_ATTR_R extends IAction {\n  type: ActionTypes.SET_CUSTOM_ATTR_R;\n  payload: { custom_attr_r: ICustomAttr };\n}\nexport interface SET_BIZ_DAYS extends IAction {\n  type: ActionTypes.SET_BIZ_DAYS;\n  payload: { biz_days: string[] };\n}\n\nexport interface ADD_BIZ_DAY extends IAction {\n  type: ActionTypes.ADD_BIZ_DAY;\n  payload: { biz_day: string };\n}\n\nexport interface REMOVE_BIZ_DAY extends IAction {\n  type: ActionTypes.REMOVE_BIZ_DAY;\n  payload: { biz_day: string };\n}\n\nexport interface FETCH_TASKS extends IAction {\n  type: ActionTypes.FETCH_TASKS;\n  payload: {\n    milestone: string;\n    reject_task_status_ids: string[];\n    timelimit_close_task: string;\n  };\n}\nexport interface SET_TASKS extends IAction {\n  type: ActionTypes.SET_TASKS;\n  payload: { tasks: ITask[] };\n}\nexport interface SET_TASK_ID extends IAction {\n  type: ActionTypes.SET_TASK_ID;\n  payload: { task_id: string };\n}\nexport interface RESET_TASK_ID extends IAction {\n  type: ActionTypes.RESET_TASK_ID;\n}\n\nexport interface SET_TASK extends IAction {\n  type: ActionTypes.SET_TASK;\n  payload: { task: ITask };\n}\n\nexport interface SET_USER_TASKS extends IAction {\n  type: ActionTypes.SET_USER_TASKS;\n  payload: { user_tasks: ITask[] };\n}\n\nexport interface PATCH_TASK extends IAction {\n  type: ActionTypes.PATCH_TASK;\n  payload: { key: keyof ITask; value: ITask[keyof ITask]; id: number };\n}\nexport interface FETCH_CUSTOM_VALUE_MAP extends IAction {\n  type: ActionTypes.FETCH_CUSTOM_VALUE_MAP;\n  payload: { tasks: ITask[] };\n}\nexport interface SET_CUSTOM_VALUE_MAP extends IAction {\n  type: ActionTypes.SET_CUSTOM_VALUE_MAP;\n  payload: { custom_value_map: ICustomValueMap };\n}\nexport interface PATCH_CUSTOM_VALUE extends IAction {\n  type: ActionTypes.PATCH_CUSTOM_VALUE;\n  payload: {\n    id: string | number;\n    key: string;\n    value: string | number;\n    version: number;\n  };\n  meta?: {\n    use_pomodoro?: {\n      used_number: number;\n    };\n    update_status?: boolean;\n  };\n}\nexport interface FETCH_TASK_STATUSES extends IAction {\n  type: ActionTypes.FETCH_TASK_STATUSES;\n  payload: { project: string };\n}\nexport interface SET_TASK_STATUSES extends IAction {\n  type: ActionTypes.SET_TASK_STATUSES;\n  payload: { task_statuses: ITaskStatus[] };\n}\nexport interface SET_ACTIVE_TASK_STATUSES extends IAction {\n  type: ActionTypes.SET_ACTIVE_TASK_STATUSES;\n  payload: { active_task_statuses: ITaskStatus[] };\n}\n\nexport interface FETCH_USER extends IAction {\n  type: ActionTypes.FETCH_USER;\n  payload: { uid: string };\n}\nexport interface SET_USER extends IAction {\n  type: ActionTypes.SET_USER;\n  payload: { user: IUser };\n}\nexport interface RESET_USER extends IAction {\n  type: ActionTypes.RESET_USER;\n}\nexport interface SET_REJECT_TASK_STATUS_IDS extends IAction {\n  type: ActionTypes.SET_REJECT_TASK_STATUS_IDS;\n  payload: { reject_task_status_ids: string[] };\n}\nexport interface ADD_REJECT_TASK_STATUS_ID extends IAction {\n  type: ActionTypes.ADD_REJECT_TASK_STATUS_ID;\n  payload: { reject_task_status_id: string };\n}\n\nexport interface REMOVE_REJECT_TASK_STATUS_ID extends IAction {\n  type: ActionTypes.REMOVE_REJECT_TASK_STATUS_ID;\n  payload: { reject_task_status_id: string };\n}\n\nexport interface OPEN_CONTROLLER extends IAction {\n  type: ActionTypes.OPEN_CONTROLLER;\n}\n\nexport interface CLOSE_CONTROLLER extends IAction {\n  type: ActionTypes.CLOSE_CONTROLLER;\n}\n\nexport interface UPDATE_DATA extends IAction {\n  type: ActionTypes.UPDATE_DATA;\n}\nexport interface ADD_POMODORO extends IAction {\n  type: ActionTypes.ADD_POMODORO;\n  meta?: Pick<IPomodoroHistory, \"completedAt\" | \"duration\" | \"pure\">;\n}\nexport interface USE_POMODORO extends IAction {\n  type: ActionTypes.USE_POMODORO;\n  payload: { used_number: number };\n}\nexport interface RESET_POMODORO extends IAction {\n  type: ActionTypes.RESET_POMODORO;\n  payload: { pomodoro_date: string };\n}\nexport interface RESTORE_POMODORO extends IAction {\n  type: ActionTypes.RESTORE_POMODORO;\n  payload: {\n    pomodoro_date: string;\n    pomodoro_number: number;\n    pomodoro_used_number: number;\n  };\n}\nexport interface CALC_POMODORO_TOTAL extends IAction {\n  type: ActionTypes.CALC_POMODORO_TOTAL;\n  payload: {\n    dateKey: string;\n  };\n}\nexport interface LOAD_POMODORO_TOTALS extends IAction {\n  type: ActionTypes.LOAD_POMODORO_TOTALS;\n}\nexport interface SET_POMODORO_TOTALS extends IAction {\n  type: ActionTypes.SET_POMODORO_TOTALS;\n  payload: {\n    pomodoro_daily_totals: IDailyTotal[];\n  };\n}\nexport interface LOADED extends IAction {\n  type: ActionTypes.LOADED;\n}\nexport interface SET_POMODORO_STATE extends IAction {\n  type: ActionTypes.SET_POMODORO_STATE;\n  payload: {\n    pomodoro_state: TimerState;\n  };\n}\nexport interface SET_POMODORO_MODE extends IAction {\n  type: ActionTypes.SET_POMODORO_MODE;\n  payload: {\n    pomodoro_mode: TimerMode;\n  };\n}\nexport interface SET_TIMELIMIT_CLOSE_TASK extends IAction {\n  type: ActionTypes.SET_TIMELIMIT_CLOSE_TASK;\n  payload: {\n    timelimit_close_task: string;\n  };\n  meta?: {\n    customize: boolean;\n  };\n}\nexport interface SET_IN_PROGRESS_TASK_STATUS_ID extends IAction {\n  type: ActionTypes.SET_IN_PROGRESS_TASK_STATUS_ID;\n  payload: {\n    task_status_id: string;\n  };\n}\nexport interface SET_POMODORO_LIVE_COUNT extends IAction {\n  type: ActionTypes.SET_POMODORO_LIVE_COUNT;\n  payload: {\n    mode: TimerMode;\n    value: number;\n  };\n}\n\nexport type Actions =\n  | SET_TOKEN\n  | SET_TIMER_ID\n  | ADD_FB_TIMER\n  | DEL_FB_TIMER\n  | SET_URL\n  | SIGN_IN\n  | SET_AUTH_TOKEN\n  | SET_AUTH_ERROR\n  | SIGN_OUT\n  | SET_PID\n  | FETCH_PROJECT\n  | SET_PROJECT\n  | FETCH_MILESTONES\n  | SET_MILESTONES\n  | SET_MID\n  | SET_MILESTONE\n  | SET_CUSTOM_EID\n  | SET_CUSTOM_RID\n  | FETCH_CUSTOM_ATTRS\n  | SET_CUSTOM_ATTRS\n  | SET_CUSTOM_ATTR_E\n  | SET_CUSTOM_ATTR_R\n  | PATCH_CUSTOM_VALUE\n  | SET_BIZ_DAYS\n  | SET_BIZ_DAYS\n  | ADD_BIZ_DAY\n  | REMOVE_BIZ_DAY\n  | FETCH_TASKS\n  | SET_TASKS\n  | SET_TASK_ID\n  | RESET_TASK_ID\n  | SET_TASK\n  | SET_USER_TASKS\n  | PATCH_TASK\n  | FETCH_CUSTOM_VALUE_MAP\n  | SET_CUSTOM_VALUE_MAP\n  | FETCH_TASK_STATUSES\n  | SET_TASK_STATUSES\n  | SET_ACTIVE_TASK_STATUSES\n  | FETCH_USER\n  | SET_USER\n  | RESET_USER\n  | SET_REJECT_TASK_STATUS_IDS\n  | ADD_REJECT_TASK_STATUS_ID\n  | REMOVE_REJECT_TASK_STATUS_ID\n  | OPEN_CONTROLLER\n  | CLOSE_CONTROLLER\n  | UPDATE_DATA\n  | ADD_POMODORO\n  | USE_POMODORO\n  | RESET_POMODORO\n  | RESTORE_POMODORO\n  | CALC_POMODORO_TOTAL\n  | LOAD_POMODORO_TOTALS\n  | SET_POMODORO_TOTALS\n  | LOADED\n  | SET_POMODORO_STATE\n  | SET_POMODORO_MODE\n  | SET_TIMELIMIT_CLOSE_TASK\n  | SET_IN_PROGRESS_TASK_STATUS_ID\n  | SET_POMODORO_LIVE_COUNT;\n","import { EventEmitter } from \"events\";\nimport _ from \"lodash\";\nexport enum TimerState {\n  STOPPED = \"stopped\",\n  RUNNING = \"running\",\n  PAUSED = \"paused\"\n}\nexport enum TimerMode {\n  FOCUS = \"Focusing\",\n  SHORT = \"Short break\",\n  LONG = \"Long break\"\n}\nexport const TimerDurationMin = {\n  [TimerMode.FOCUS]: 25,\n  [TimerMode.SHORT]: 5,\n  [TimerMode.LONG]: 15\n};\nenum StorageKey {\n  STATE = \"pomodoro_state\",\n  MODE = \"pomodoro_mode\",\n  CHECKPOINT_START_AT = \"pomodoro_checkpoint_start_at\",\n  CHECKPOINT_ELAPSED = \"pomodoro_checkpoint_elapsed\"\n}\nconst isValidState = (val: string | null) =>\n  _.includes(_.values(TimerState), val);\n\nconst isValidMode = (val: string | null) =>\n  _.includes(_.values(TimerMode), val);\n\ntype TimerEvents =\n  | \"start\"\n  | \"stop\"\n  | \"pause\"\n  | \"resume\"\n  | \"expire\"\n  | \"tick\"\n  | \"change_mode\";\ninterface ITimerStatus {\n  state: TimerState;\n  duration: number;\n  elapsed: number;\n  remaining: number;\n  checkpointElapsed: number;\n  checkpointStartAt: number;\n  mode: TimerMode;\n}\nexport type TimerEventListener = (status: ITimerStatus) => void;\nclass Timer extends EventEmitter {\n  state: TimerState = TimerState.STOPPED;\n  mode: TimerMode = TimerMode.FOCUS;\n  duration: number = TimerDurationMin[TimerMode.FOCUS] * 60;\n  tick: number = 60;\n  checkpointStartAt: number = NaN;\n  checkpointElapsed: number = 0;\n  expireTimeout: NodeJS.Timeout | null = null;\n  tickInterval: NodeJS.Timeout | null = null;\n  tickOffsetTimeout: NodeJS.Timeout | null = null;\n  restoreExpired = false;\n  estimateCompletedAt: Date = new Date();\n  constructor(tick: number) {\n    super();\n    this.tick = tick;\n    this.restoreStorage();\n  }\n  get isStopped() {\n    return this.state === TimerState.STOPPED;\n  }\n  get isRunning() {\n    return this.state === TimerState.RUNNING;\n  }\n  get isPaused() {\n    return this.state === TimerState.PAUSED;\n  }\n  get remaining() {\n    return Math.max(this.duration - this.elapsed, 0);\n  }\n\n  get elapsed() {\n    let periodElapsed = 0;\n    if (this.checkpointStartAt && this.isRunning) {\n      periodElapsed = (Date.now() - this.checkpointStartAt) / 1000;\n    }\n    return this.checkpointElapsed + periodElapsed;\n  }\n  get status(): ITimerStatus {\n    return {\n      state: this.state,\n      duration: this.duration,\n      elapsed: this.elapsed,\n      remaining: this.remaining,\n      checkpointElapsed: this.checkpointElapsed,\n      checkpointStartAt: this.checkpointStartAt,\n      mode: this.mode\n    };\n  }\n  on(event: TimerEvents, listener: TimerEventListener) {\n    return super.on(event, listener);\n  }\n  once(event: TimerEvents, listener: TimerEventListener) {\n    return super.once(event, listener);\n  }\n  start() {\n    if (!this.isStopped) {\n      return;\n    }\n    this.setExpireTimeout(this.duration);\n    this.setTickInterval(this.tick);\n\n    this.state = TimerState.RUNNING;\n    this.checkpointStartAt = Date.now();\n    this.checkpointElapsed = 0;\n\n    this.emit(\"start\", this.status);\n\n    this.saveStorage();\n  }\n  stop() {\n    if (this.isStopped) {\n      return;\n    }\n    this.clearExpireTimeout();\n    this.clearTickInterval();\n\n    this.checkpointStartAt = NaN;\n    this.checkpointElapsed = 0;\n\n    this.state = TimerState.STOPPED;\n\n    this.emit(\"stop\", this.status);\n\n    this.saveStorage();\n  }\n  pause() {\n    if (!this.isRunning) {\n      return;\n    }\n\n    this.clearExpireTimeout();\n    this.clearTickInterval();\n\n    let periodElapsed = (Date.now() - this.checkpointStartAt) / 1000;\n    this.checkpointElapsed += periodElapsed;\n\n    this.state = TimerState.PAUSED;\n\n    this.emit(\"pause\", this.status);\n\n    this.saveStorage();\n  }\n  resume() {\n    if (!this.isPaused) {\n      return;\n    }\n    this.setExpireTimeout(this.remaining);\n    this.setTickInterval(this.tick);\n\n    this.state = TimerState.RUNNING;\n    this.checkpointStartAt = Date.now();\n\n    this.emit(\"resume\", this.status);\n\n    this.saveStorage();\n  }\n  restart() {\n    this.stop();\n    this.start();\n  }\n  changeMode(mode: TimerMode, start?: boolean) {\n    this.stop();\n    this.mode = mode;\n    this.duration = TimerDurationMin[mode] * 60;\n\n    this.emit(\"change_mode\", this.status);\n\n    this.saveStorage();\n    if (start) {\n      _.defer(() => {\n        this.start();\n      });\n    }\n  }\n  setExpireTimeout(seconds: number) {\n    this.expireTimeout = setTimeout(() => {\n      this.emit(\"expire\", this.status);\n      this.stop();\n    }, seconds * 1000);\n  }\n  clearExpireTimeout() {\n    if (this.expireTimeout) {\n      clearTimeout(this.expireTimeout);\n    }\n    this.expireTimeout = null;\n  }\n  setTickInterval(seconds: number, adjusted = false, limit = 60) {\n    const { remaining } = this.status;\n    if (remaining <= limit) {\n      this.setSecTickInterval();\n    } else {\n      const offset = remaining % seconds;\n      if (offset > 1 && !adjusted) {\n        this.tickOffsetTimeout = setTimeout(() => {\n          this.emit(\"tick\", this.status);\n          this.setTickInterval(seconds, true);\n        }, offset * 1000);\n      } else {\n        this.tickInterval = setInterval(() => {\n          const status = this.status;\n          this.emit(\"tick\", status);\n          if (status.remaining < limit) {\n            this.clearTickInterval();\n            this.setSecTickInterval();\n          }\n        }, seconds * 1000);\n      }\n    }\n  }\n  setSecTickInterval() {\n    this.tickInterval = setInterval(() => {\n      this.emit(\"tick\", this.status);\n    }, 1000);\n  }\n  clearTickInterval() {\n    if (this.tickInterval) {\n      clearInterval(this.tickInterval);\n    }\n    this.tickInterval = null;\n    if (this.tickOffsetTimeout) {\n      clearTimeout(this.tickOffsetTimeout);\n    }\n    this.tickOffsetTimeout = null;\n  }\n  saveStorage() {\n    localStorage.setItem(StorageKey.STATE, this.state);\n    localStorage.setItem(StorageKey.MODE, this.mode);\n    localStorage.setItem(\n      StorageKey.CHECKPOINT_START_AT,\n      Number.isNaN(this.checkpointStartAt) ? \"\" : String(this.checkpointStartAt)\n    );\n    localStorage.setItem(\n      StorageKey.CHECKPOINT_ELAPSED,\n      String(this.checkpointElapsed)\n    );\n  }\n  restoreStorage() {\n    const lsState = localStorage.getItem(StorageKey.STATE);\n    const lsMode = localStorage.getItem(StorageKey.MODE);\n    const lsCpStartAt = localStorage.getItem(StorageKey.CHECKPOINT_START_AT);\n    const lsCpElapsed = localStorage.getItem(StorageKey.CHECKPOINT_ELAPSED);\n    if (isValidState(lsState) && isValidMode(lsMode)) {\n      const state = lsState as TimerState;\n      const mode = lsMode as TimerMode;\n      const duration = TimerDurationMin[mode] * 60;\n      switch (state) {\n        case TimerState.STOPPED: {\n          this.changeMode(mode);\n          break;\n        }\n        case TimerState.PAUSED: {\n          const cpElapsed = Number(lsCpElapsed);\n          if (cpElapsed < duration * 1000) {\n            this.state = state;\n            this.mode = mode;\n            this.duration = duration;\n            this.checkpointElapsed = cpElapsed;\n          }\n          break;\n        }\n        case TimerState.RUNNING: {\n          const cpStartAt = Number(lsCpStartAt);\n          const cpElapsed = Number(lsCpElapsed);\n          if (cpStartAt > 0) {\n            this.mode = mode;\n            this.duration = duration;\n            const elapsedMsec = Date.now() - cpStartAt + cpElapsed * 1000;\n            if (elapsedMsec < duration * 1000) {\n              this.state = TimerState.RUNNING;\n\n              this.checkpointStartAt = cpStartAt;\n              this.checkpointElapsed = cpElapsed;\n\n              this.setExpireTimeout(this.remaining);\n              this.setTickInterval(this.tick);\n            } else {\n              this.stop();\n\n              this.estimateCompletedAt = new Date(\n                cpStartAt + (duration - cpElapsed) * 1000\n              );\n              this.restoreExpired = true;\n            }\n          }\n          break;\n        }\n      }\n    }\n  }\n}\n\nexport const timer = new Timer(60);\n","import { IDailyTotal } from \"./AppDb\";\nimport { TimerMode, TimerState } from \"./util/timer\";\nexport interface ICustomAttr {\n  id: number;\n  name: string;\n}\ninterface IPomodoroCounts {\n  [TimerMode.FOCUS]: number;\n  [TimerMode.SHORT]: number;\n  [TimerMode.LONG]: number;\n}\nexport interface IAuthToken {\n  auth_token: string;\n}\nexport interface IMilestone {\n  id: number;\n  name: string;\n  estimated_start: string;\n  estimated_finish: string;\n  slug: string;\n  project: number;\n  project_extra_info: IProjectExtraInfo;\n}\nexport interface IProjectExtraInfo {\n  id: number;\n  name: string;\n  slug: string;\n}\ninterface IStatusExtraInfo {\n  name: string;\n  is_closed: boolean;\n}\nexport interface IUserStoryExtraInfo {\n  id: number;\n  subject: string;\n  epics: any;\n  ref: number;\n}\nexport interface ITask {\n  id: number;\n  assigned_to: number | null;\n  created_date: string;\n  finished_date: string;\n  is_closed: boolean;\n  subject: string;\n  ref: number;\n  project: number;\n  project_extra_info: IProjectExtraInfo;\n  status: number;\n  status_extra_info: IStatusExtraInfo;\n  user_story: number;\n  user_story_extra_info: IUserStoryExtraInfo;\n  version: number;\n}\nexport interface ITasksByUserStory {\n  user_story: number;\n  user_story_extra_info: IUserStoryExtraInfo;\n  project_extra_info: IProjectExtraInfo;\n  tasks: ITask[];\n  is_closed: boolean;\n}\nexport interface ITaskStatus {\n  id: number;\n  color: string;\n  name: string;\n  order: number;\n  project: number;\n  is_closed: boolean;\n  slug: string;\n}\nexport interface IAttrValue { }\nexport interface ICustomValue {\n  attributes_values: {\n    [key: number]: string;\n  };\n  version: number;\n}\nexport interface IUser {\n  id: number;\n  username: string;\n  full_name: string;\n  full_name_display: string;\n  photo: string;\n}\nexport interface IProject {\n  id: number;\n  name: string;\n  members: IUser[];\n}\nexport type ICustomValueMap = WeakMap<ITask, ICustomValue>;\nexport interface IState {\n  token: string | null;\n  timer_id: string | null;\n  url: string;\n  auth_token: string;\n  auth_error: boolean;\n  username: string;\n  password: string;\n  user: IUser | null;\n  pid: string; // url\n  project: IProject;\n  mid: string; // url\n  custom_eid: string; //  pid\n  custom_rid: string; // pid\n  custom_attrs: ICustomAttr[]; // pid\n  custom_attr_e: ICustomAttr;\n  custom_attr_r: ICustomAttr;\n  biz_days: string[]; //mid\n  milestones: IMilestone[]; // pid\n  milestone: IMilestone;\n  tasks: ITask[]; //mid\n  task_id: string;\n  task: ITask | null;\n  user_tasks: ITask[];\n  task_statuses: ITaskStatus[];\n  active_task_statuses: ITaskStatus[];\n  custom_value_map: ICustomValueMap; // pid\n  reject_task_status_ids: string[]; // pid\n  updated_time: number;\n  isOpen: boolean;\n  pomodoro_number: number;\n  pomodoro_date: string;\n  pomodoro_used_number: number;\n  loaded: boolean;\n  pomodoro_daily_totals: IDailyTotal[];\n  pomodoro_state: TimerState;\n  pomodoro_mode: TimerMode;\n  timelimit_close_task: string;\n  in_progress_task_status_id: string;\n  pomodoro_live_counts: IPomodoroCounts;\n}\n\nexport enum StorageKey {\n  URL = \"taiga_url\",\n  TIMER_ID = \"taiga_timer_id\",\n  PID = \"taiga_pid\",\n  MID = \"taiga_mid\",\n  TASK_ID = \"taiga_task_id\",\n  CUSTOM_EID = \"taiga_custom_eid\",\n  CUSTOM_RID = \"taiga_custom_rid\",\n  BIZ_DAYS = \"taiga_biz_days\",\n  REJECT_TASK_STATUS_IDS = \"reject_task_status_ids\",\n  USERNAME = \"taiga_username\",\n  PASSWORD = \"taiga_password\",\n  POMODORO_DATE = \"taiga_pomodoro_date\",\n  POMODORO_NUMBER = \"taiga_pomodoro_number\",\n  POMODORO_USED_NUMBER = \"taiga_pomodoro_used_number\",\n  TIMELIMIT_CLOSE_TASK = \"taiga_timelimit_close_task\"\n}\n\nconst _getFromStorage = (key: string) => localStorage.getItem(key) || \"\";\nexport const getFromStorage = (key: StorageKey) => _getFromStorage(key);\nexport const getFromStorageWithSubkey = (key: StorageKey, subkey: string) =>\n  subkey ? _getFromStorage(`${subkey}/${key}`) : \"\";\n\nexport const setToStorage = (key: string, item: string) => {\n  localStorage.setItem(key, item);\n};\nexport const setToStorageWithSubkey = (\n  key: StorageKey,\n  subkey: string,\n  item: string\n) => (subkey ? setToStorage(`${subkey}/${key}`, item) : null);\n\nexport const initialState: IState = {\n  token: null,\n  timer_id: null,\n  url: \"\",\n  auth_token: \"\",\n  auth_error: false,\n  username: \"\",\n  password: \"\",\n  user: null,\n  pid: \"\",\n  project: {} as IProject,\n  mid: \"\",\n  custom_eid: \"\",\n  custom_rid: \"\",\n  custom_attrs: [],\n  custom_attr_e: {} as ICustomAttr,\n  custom_attr_r: {} as ICustomAttr,\n  biz_days: [],\n  milestones: [],\n  milestone: {} as IMilestone,\n  tasks: [],\n  task_id: \"\",\n  task: null,\n  user_tasks: [],\n  task_statuses: [],\n  active_task_statuses: [],\n  custom_value_map: new WeakMap(),\n  reject_task_status_ids: [],\n  updated_time: 0,\n  isOpen: false,\n  pomodoro_date: \"\",\n  pomodoro_number: 0,\n  pomodoro_used_number: 0,\n  loaded: false,\n  pomodoro_daily_totals: [],\n  pomodoro_state: TimerState.STOPPED,\n  pomodoro_mode: TimerMode.FOCUS,\n  timelimit_close_task: \"\",\n  in_progress_task_status_id: \"\",\n  pomodoro_live_counts: {\n    [TimerMode.FOCUS]: 0,\n    [TimerMode.SHORT]: 0,\n    [TimerMode.LONG]: 0\n  }\n};\n","import _ from \"lodash\";\nimport { initialState, IProject, ICustomValueMap, IMilestone } from \"./store\";\nimport { ActionTypes, Actions } from \"./actions\";\nexport const reducer = (state = initialState, action: Actions) => {\n  switch (action.type) {\n    case ActionTypes.SET_TOKEN: {\n      const { token } = action.payload;\n      return { ...state, token };\n    }\n    case ActionTypes.SET_TIMER_ID: {\n      const { timer_id } = action.payload;\n      return { ...state, timer_id };\n    }\n    case ActionTypes.SET_URL: {\n      const { url } = action.payload;\n      return { ...state, url };\n    }\n    case ActionTypes.SET_PID: {\n      const { pid } = action.payload;\n      return {\n        ...state,\n        pid,\n        project: {} as IProject,\n        mid: \"\",\n        biz_days: [],\n        custom_attrs: [],\n        milestones: [],\n        custom_value_map: new WeakMap() as ICustomValueMap\n      };\n    }\n    case ActionTypes.SET_PROJECT: {\n      const { project } = action.payload;\n      return {\n        ...state,\n        project\n      };\n    }\n    case ActionTypes.SET_MID: {\n      const { mid } = action.payload;\n      return {\n        ...state,\n        mid,\n        milestone: {} as IMilestone,\n        tasks: []\n      };\n    }\n    case ActionTypes.SET_MILESTONES: {\n      const { milestones } = action.payload;\n      return { ...state, milestones };\n    }\n    case ActionTypes.SET_MILESTONE: {\n      const { milestone } = action.payload;\n      return { ...state, milestone };\n    }\n    case ActionTypes.SET_CUSTOM_EID: {\n      const { custom_eid } = action.payload;\n      return { ...state, custom_eid };\n    }\n    case ActionTypes.SET_CUSTOM_ATTRS: {\n      const { custom_attrs } = action.payload;\n      return { ...state, custom_attrs };\n    }\n    case ActionTypes.SET_CUSTOM_ATTR_E: {\n      const { custom_attr_e } = action.payload;\n      return { ...state, custom_attr_e };\n    }\n    case ActionTypes.SET_CUSTOM_ATTR_R: {\n      const { custom_attr_r } = action.payload;\n      return { ...state, custom_attr_r };\n    }\n    case ActionTypes.SET_CUSTOM_RID: {\n      const { custom_rid } = action.payload;\n      return { ...state, custom_rid };\n    }\n    case ActionTypes.SET_BIZ_DAYS: {\n      const { biz_days } = action.payload;\n      return { ...state, biz_days };\n    }\n    case ActionTypes.ADD_BIZ_DAY: {\n      const { biz_day } = action.payload;\n      const biz_days = _.chain([...state.biz_days, biz_day])\n        .uniq()\n        .sort()\n        .value();\n      return { ...state, biz_days };\n    }\n    case ActionTypes.REMOVE_BIZ_DAY: {\n      const { biz_day } = action.payload;\n      const biz_days = _.reject([...state.biz_days], item => item === biz_day);\n      return { ...state, biz_days };\n    }\n    case ActionTypes.SET_TASKS: {\n      const { tasks } = action.payload;\n      return { ...state, tasks };\n    }\n    case ActionTypes.SET_TASK_ID: {\n      const { task_id } = action.payload;\n      return { ...state, task_id, task: null };\n    }\n    case ActionTypes.RESET_TASK_ID: {\n      return { ...state, task_id: \"\", task: null };\n    }\n    case ActionTypes.SET_TASK: {\n      const { task } = action.payload;\n      return { ...state, task };\n    }\n    case ActionTypes.SET_USER_TASKS: {\n      const { user_tasks } = action.payload;\n      return { ...state, user_tasks };\n    }\n    case ActionTypes.SET_TASK_STATUSES: {\n      const { task_statuses } = action.payload;\n      return { ...state, task_statuses };\n    }\n    case ActionTypes.SET_ACTIVE_TASK_STATUSES: {\n      const { active_task_statuses } = action.payload;\n      return { ...state, active_task_statuses };\n    }\n    case ActionTypes.SET_CUSTOM_VALUE_MAP: {\n      const { custom_value_map } = action.payload;\n      return { ...state, custom_value_map };\n    }\n    case ActionTypes.SET_USER: {\n      const { user } = action.payload;\n      return { ...state, user };\n    }\n    case ActionTypes.RESET_USER: {\n      return { ...state, user: null, user_tasks: [] };\n    }\n    case ActionTypes.SET_REJECT_TASK_STATUS_IDS: {\n      const { reject_task_status_ids } = action.payload;\n      return { ...state, reject_task_status_ids };\n    }\n    case ActionTypes.ADD_REJECT_TASK_STATUS_ID: {\n      const { reject_task_status_id } = action.payload;\n      const reject_task_status_ids = _.chain([\n        ...state.reject_task_status_ids,\n        reject_task_status_id\n      ])\n        .compact()\n        .uniq()\n        .value();\n      return { ...state, reject_task_status_ids };\n    }\n    case ActionTypes.REMOVE_REJECT_TASK_STATUS_ID: {\n      const { reject_task_status_id } = action.payload;\n      const reject_task_status_ids = _.reject(\n        [...state.reject_task_status_ids],\n        item => item === reject_task_status_id\n      );\n      return { ...state, reject_task_status_ids };\n    }\n    case ActionTypes.OPEN_CONTROLLER: {\n      return { ...state, isOpen: true };\n    }\n    case ActionTypes.CLOSE_CONTROLLER: {\n      return { ...state, isOpen: false };\n    }\n    case ActionTypes.UPDATE_DATA: {\n      return { ...state, updated_time: Date.now() };\n    }\n    case ActionTypes.SIGN_IN: {\n      const { username, password } = action.payload;\n      return { ...state, username, password, auth_error: false };\n    }\n    case ActionTypes.SET_AUTH_TOKEN: {\n      const { auth_token } = action.payload;\n      return { ...state, auth_token };\n    }\n    case ActionTypes.SET_AUTH_ERROR: {\n      return { ...state, auth_error: true };\n    }\n    case ActionTypes.SIGN_OUT: {\n      return { ...state, auth_token: \"\", username: \"\", password: \"\" };\n    }\n    case ActionTypes.ADD_POMODORO: {\n      const pomodoro_number = state.pomodoro_number + 1;\n      return {\n        ...state,\n        pomodoro_number\n      };\n    }\n    case ActionTypes.USE_POMODORO: {\n      const { used_number } = action.payload;\n      const pomodoro_used_number = Math.max(\n        0,\n        state.pomodoro_used_number + used_number\n      );\n      return {\n        ...state,\n        pomodoro_used_number\n      };\n    }\n    case ActionTypes.RESET_POMODORO: {\n      const { pomodoro_date } = action.payload;\n      return {\n        ...state,\n        pomodoro_number: 0,\n        pomodoro_used_number: 0,\n        pomodoro_date\n      };\n    }\n    case ActionTypes.RESTORE_POMODORO: {\n      const {\n        pomodoro_date,\n        pomodoro_number,\n        pomodoro_used_number\n      } = action.payload;\n      return {\n        ...state,\n        pomodoro_date,\n        pomodoro_number,\n        pomodoro_used_number\n      };\n    }\n    case ActionTypes.SET_POMODORO_TOTALS: {\n      const { pomodoro_daily_totals } = action.payload;\n      return {\n        ...state,\n        pomodoro_daily_totals\n      };\n    }\n    case ActionTypes.LOADED: {\n      return {\n        ...state,\n        loaded: true\n      };\n    }\n    case ActionTypes.SET_POMODORO_STATE: {\n      const { pomodoro_state } = action.payload;\n      return {\n        ...state,\n        pomodoro_state\n      };\n    }\n\n    case ActionTypes.SET_POMODORO_MODE: {\n      const { pomodoro_mode } = action.payload;\n      return {\n        ...state,\n        pomodoro_mode\n      };\n    }\n    case ActionTypes.SET_TIMELIMIT_CLOSE_TASK: {\n      const { timelimit_close_task } = action.payload;\n      return {\n        ...state,\n        timelimit_close_task\n      };\n    }\n    case ActionTypes.SET_IN_PROGRESS_TASK_STATUS_ID: {\n      const { task_status_id } = action.payload;\n      return {\n        ...state,\n        in_progress_task_status_id: task_status_id\n      };\n    }\n    case ActionTypes.SET_POMODORO_LIVE_COUNT: {\n      const { mode, value } = action.payload;\n      return {\n        ...state,\n        pomodoro_live_counts: {\n          ...state.pomodoro_live_counts,\n          [mode]: value\n        }\n      };\n    }\n    default: {\n      return state;\n    }\n  }\n};\n","import { Dispatch, useCallback, useMemo } from \"react\";\n\nexport type SideEffector<S, A> = (\n  action: A,\n  dispatch: Dispatch<A>,\n  state: () => S\n) => void;\nconst stateStoreFactory = <S>() => {\n  let state: S;\n  return {\n    getter: () => state,\n    setter: (newState: S) => {\n      state = newState;\n    }\n  };\n};\nexport const useSideEffector = <S, A>(\n  [state, dispatch]: [S, Dispatch<A>],\n  sideEffector: SideEffector<S, A>\n): [S, Dispatch<A>] => {\n  let dispatchSE: Dispatch<A> | null = null;\n\n  const dispatchSECaller = useCallback(\n    (action: A) => {\n      dispatchSE && dispatchSE(action);\n    },\n    [dispatchSE]\n  );\n  const stateStore = useMemo(() => stateStoreFactory<S>(), []);\n\n  stateStore.setter(state);\n  dispatchSE = useCallback(\n    dispatchSideEffector<S, A>(\n      stateStore.getter,\n      dispatch,\n      sideEffector,\n      dispatchSECaller\n    ),\n    []\n  );\n  return [state, dispatchSE];\n};\n\nconst dispatchSideEffector = <S, A>(\n  state: () => S,\n  dispatch: Dispatch<A>,\n  sideEffector: SideEffector<S, A>,\n  dispatchSECaller: Dispatch<A>\n) => (action: A) => {\n  dispatch(action);\n  sideEffector(action, dispatchSECaller, state);\n};\n","import React from \"react\";\nimport { toast } from \"react-toastify\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faInfoCircle,\n  faCheck,\n  faCheckCircle,\n  faExclamationTriangle\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { IconProp } from \"@fortawesome/fontawesome-svg-core\";\ninterface MessageWithIconProps {\n  icon: IconProp;\n  message: string;\n}\nconst MessageWithIcon: React.FC<MessageWithIconProps> = ({ icon, message }) => {\n  return (\n    <div className=\"d-flex\">\n      <h2 className=\"mr-2\">\n        <FontAwesomeIcon icon={icon} />\n      </h2>\n      <div>{message}</div>\n    </div>\n  );\n};\ninterface NotifyProps {\n  title: string;\n  body: string;\n  icon: string;\n}\nconst Notify: React.FC<NotifyProps> = ({ title, body, icon }) => {\n  return (\n    <div className=\"d-flex\">\n      <img src={icon} style={{ width: \"48px\", height: \"48px\" }} alt=\"\" />\n      <div className=\"ml-2\">\n        <h5>{title}</h5>\n        <p>{body}</p>\n      </div>\n    </div>\n  );\n};\nexport const toastr = {\n  info: (message: string) => {\n    toast.info(<MessageWithIcon icon={faInfoCircle} message={message} />);\n  },\n  success: (message: string) => {\n    toast.success(<MessageWithIcon icon={faCheck} message={message} />);\n  },\n  warn: (message: string) => {\n    toast.warn(\n      <MessageWithIcon icon={faExclamationTriangle} message={message} />\n    );\n  },\n  error: (message: string) => {\n    toast.error(<MessageWithIcon icon={faCheckCircle} message={message} />);\n  },\n  notify: ({ title, body, icon }: NotifyProps) => {\n    toast(<Notify title={title} body={body} icon={icon} />);\n  }\n};\n","import { StorageKey, setToStorage } from \"../store\";\nimport { ISideEffector } from \".\";\nimport _ from \"lodash\";\nexport const syncPomodoro: ISideEffector = (action, dispatchm, state) => {\n  _.defer(() => {\n    const { pomodoro_date, pomodoro_number, pomodoro_used_number } = state();\n    setToStorage(StorageKey.POMODORO_DATE, pomodoro_date);\n    setToStorage(StorageKey.POMODORO_NUMBER, String(pomodoro_number));\n    setToStorage(StorageKey.POMODORO_USED_NUMBER, String(pomodoro_used_number));\n  });\n};\n","import Dexie from \"dexie\";\nexport interface IPomodoroHistory {\n  id?: number;\n  completedAt: Date;\n  duration: number;\n  pure: boolean;\n  dateKey: string;\n}\nexport interface IDailyTotal {\n  id?: number;\n  date: Date;\n  value: number;\n  pureValue: number;\n  dateKey: string;\n  dayOfWeek: number;\n}\nexport class AppDatabase extends Dexie {\n  items: Dexie.Table<IPomodoroHistory, number>;\n  totals: Dexie.Table<IDailyTotal, number>;\n  constructor() {\n    super(\"TaigaPomodoroDatabase\");\n    this.version(1).stores({\n      items: \"++id, completedAt, duration, pure, dateKey\",\n      totals: \"++id, date, value, pureValue, &dateKey, dayOfWeek\"\n    });\n    this.items = this.table(\"items\");\n    this.totals = this.table(\"totals\");\n  }\n}\nexport const db = new AppDatabase();\n","import dotenv from \"dotenv\";\nimport _ from \"lodash\";\nimport firebase from \"firebase/app\";\nimport \"firebase/messaging\";\nimport \"firebase/firestore\";\nimport { TimerMode } from \"./timer\";\ndotenv.config();\nconst {\n  REACT_APP_apiKey: apiKey,\n  REACT_APP_VapidKey: VapidKey,\n  REACT_APP_authDomain: authDomain,\n  REACT_APP_databaseURL: databaseURL,\n  REACT_APP_projectId: projectId,\n  REACT_APP_storageBucket: storageBucket,\n  REACT_APP_messagingSenderId: messagingSenderId,\n  REACT_APP_appId: appId\n} = process.env;\nconst firebaseConfig = {\n  apiKey,\n  authDomain,\n  databaseURL,\n  projectId,\n  storageBucket,\n  messagingSenderId,\n  appId\n};\nfirebase.initializeApp(firebaseConfig);\nlet _messaging: firebase.messaging.Messaging | null = null;\ntry {\n  _messaging = firebase.messaging();\n} catch (e) {\n  console.log(e);\n}\nexport const messaging = _messaging;\nlet token: string | null = null;\nif (navigator.serviceWorker && messaging) {\n  navigator.serviceWorker\n    .register(\"./firebase-messaging-sw.js\")\n    .then(registration => {\n      if (!_.get(messaging, \"registrationToUse\")) {\n        messaging.useServiceWorker(registration);\n      }\n      messaging.usePublicVapidKey(VapidKey || \"\");\n      messaging.onTokenRefresh(async () => {\n        token = await messaging.getToken();\n      });\n      messaging.getToken().then(val => {\n        token = val;\n      });\n    });\n}\nconst db = firebase.firestore();\nexport const Timers = db.collection(\"timers\");\nexport const getToken = () => token;\n\nif (messaging) {\n  messaging\n    .requestPermission()\n    .then(function() {\n      console.log(\"Notification permission granted.\");\n    })\n    .catch(function(err) {\n      console.log(\"Unable to get permission to notify.\", err);\n    });\n}\nexport const addTimer = async (\n  title: string,\n  body: string,\n  remaining: number,\n  token: string | null,\n  mode: TimerMode\n) => {\n  const { id } = await Timers.add({\n    title,\n    body,\n    remaining,\n    token,\n    icon: \"./tomato.png\",\n    click_action: window.location.href,\n    mode\n  });\n  return id;\n};\nexport const delTimer = (id: string) => {\n  Timers.doc(id).delete();\n};\n","import { delTimer } from \"../util/firebase\";\nimport { ISideEffector, ActionTypes } from \".\";\nexport const delFBTimer: ISideEffector = (action, dispatch, state) => {\n  if (action.type === ActionTypes.DEL_FB_TIMER) {\n    const { timer_id } = state();\n    if (timer_id) {\n      delTimer(timer_id);\n      dispatch({ type: ActionTypes.SET_TIMER_ID, payload: { timer_id: null } });\n    }\n  }\n};\n","import { Dispatch } from \"react\";\nimport { Actions, ActionTypes } from \"../actions\";\nimport { IState } from \"../store\";\nimport { baseUrl } from \"../Provider\";\nimport { fetchProject } from \"./fetchProject\";\nimport { fetchMilestones } from \"./fetchMilestones\";\nimport { fetchTasks } from \"./fetchTasks\";\nimport { fetchTaskStatuses } from \"./fetchTaskStatuses\";\nimport { fetchCustomAttrs } from \"./fetchCustomAttrs\";\nimport { fetchCustomValueMap } from \"./fetchCustomValueMap\";\nimport { fetchUser } from \"./fetchUser\";\nimport { patchCustomValue } from \"./patchCustomValue\";\nimport { patchTask } from \"./patchTask\";\nimport { signIn } from \"./signIn\";\nimport { signOut } from \"./signOut\";\nimport { setAuthToken } from \"./setAuthToken\";\nimport { setUrl } from \"./setUrl\";\nimport { setPid } from \"./setPid\";\nimport { setMid } from \"./setMid\";\nimport { setCustomEid } from \"./setCustomEid\";\nimport { setCustomRid } from \"./setCustomRid\";\nimport { syncBizDays } from \"./syncBizDays\";\nimport { syncRejectTaskStatusIds } from \"./syncRejectTaskStatusIds\";\nimport { syncPomodoro } from \"./syncPomodoro\";\nimport { addPomodoro } from \"./addPomodoro\";\nimport { calcPomodoroTotal } from \"./calcPomodoroTotal\";\nimport { loadPomodoroTotals } from \"./loadPomodoroTotals\";\nimport { syncTaskId } from \"./syncTaskId\";\nimport { setTimelineCloseTask } from \"./setTimelineCloseTask\";\nimport { addFBTimer } from \"./addFBTimer\";\nimport { delFBTimer } from \"./dellFBTimer\";\nimport { setTimerId } from \"./setTimerId\";\nimport axios, { AxiosRequestConfig, AxiosError } from \"axios\";\nimport { toastr } from \"../util/toastr\";\nexport { ActionTypes };\nexport type ISideEffector = (\n  action: Actions,\n  dispatch: Dispatch<Actions>,\n  state: () => IState\n) => void;\nexport const fetchData = <T>(\n  url: string,\n  path: string,\n  config?: AxiosRequestConfig\n) => axios.get<T>(`${baseUrl(url)}/${path}`, config);\nexport const postData = <T>(\n  url: string,\n  path: string,\n  data: object,\n  config?: AxiosRequestConfig\n) => axios.post<T>(`${baseUrl(url)}/${path}`, data, config);\nexport const patchData = (\n  url: string,\n  path: string,\n  data: object,\n  config?: AxiosRequestConfig\n) => axios.patch(`${baseUrl(url)}/${path}`, data, config);\nexport const errToastr = (err: AxiosError) => {\n  let message: string;\n  try {\n    message = err.response ? err.response.data._error_message : \"error\";\n  } catch (e) {\n    message = e.message || e;\n  }\n  toastr.error(message);\n};\nexport const rootSideEffector = (\n  action: Actions,\n  dispatch: Dispatch<Actions>,\n  state: () => IState\n) => {\n  switch (action.type) {\n    case ActionTypes.FETCH_PROJECT: {\n      fetchProject(action, dispatch, state);\n      return;\n    }\n    case ActionTypes.FETCH_MILESTONES: {\n      fetchMilestones(action, dispatch, state);\n      return;\n    }\n    case ActionTypes.FETCH_TASKS: {\n      fetchTasks(action, dispatch, state);\n      return;\n    }\n    case ActionTypes.FETCH_TASK_STATUSES: {\n      fetchTaskStatuses(action, dispatch, state);\n      return;\n    }\n    case ActionTypes.FETCH_CUSTOM_ATTRS: {\n      fetchCustomAttrs(action, dispatch, state);\n      return;\n    }\n    case ActionTypes.FETCH_CUSTOM_VALUE_MAP: {\n      fetchCustomValueMap(action, dispatch, state);\n      return;\n    }\n    case ActionTypes.FETCH_USER: {\n      fetchUser(action, dispatch, state);\n      return;\n    }\n    case ActionTypes.PATCH_CUSTOM_VALUE: {\n      patchCustomValue(action, dispatch, state);\n      return;\n    }\n    case ActionTypes.SIGN_IN: {\n      signIn(action, dispatch, state);\n      return;\n    }\n    case ActionTypes.PATCH_TASK: {\n      patchTask(action, dispatch, state);\n      return;\n    }\n    case ActionTypes.SIGN_OUT: {\n      signOut(action, dispatch, state);\n      return;\n    }\n    case ActionTypes.SET_AUTH_TOKEN: {\n      setAuthToken(action, dispatch, state);\n      return;\n    }\n    case ActionTypes.SET_URL: {\n      setUrl(action, dispatch, state);\n      return;\n    }\n    case ActionTypes.SET_PID: {\n      setPid(action, dispatch, state);\n      break;\n    }\n    case ActionTypes.SET_MID: {\n      setMid(action, dispatch, state);\n      break;\n    }\n    case ActionTypes.SET_CUSTOM_EID: {\n      setCustomEid(action, dispatch, state);\n      break;\n    }\n    case ActionTypes.SET_CUSTOM_RID: {\n      setCustomRid(action, dispatch, state);\n      break;\n    }\n    case ActionTypes.SET_BIZ_DAYS:\n    case ActionTypes.ADD_BIZ_DAY:\n    case ActionTypes.REMOVE_BIZ_DAY: {\n      syncBizDays(action, dispatch, state);\n      break;\n    }\n    case ActionTypes.ADD_REJECT_TASK_STATUS_ID:\n    case ActionTypes.REMOVE_REJECT_TASK_STATUS_ID: {\n      syncRejectTaskStatusIds(action, dispatch, state);\n      break;\n    }\n    case ActionTypes.ADD_POMODORO: {\n      addPomodoro(action, dispatch, state);\n      syncPomodoro(action, dispatch, state);\n      break;\n    }\n    case ActionTypes.USE_POMODORO:\n    case ActionTypes.RESET_POMODORO: {\n      syncPomodoro(action, dispatch, state);\n      break;\n    }\n    case ActionTypes.CALC_POMODORO_TOTAL: {\n      calcPomodoroTotal(action, dispatch, state);\n      break;\n    }\n    case ActionTypes.LOAD_POMODORO_TOTALS: {\n      loadPomodoroTotals(action, dispatch, state);\n      break;\n    }\n    case ActionTypes.SET_TASK_ID:\n    case ActionTypes.RESET_TASK_ID: {\n      syncTaskId(action, dispatch, state);\n      break;\n    }\n    case ActionTypes.SET_TIMELIMIT_CLOSE_TASK: {\n      setTimelineCloseTask(action, dispatch, state);\n      break;\n    }\n    case ActionTypes.ADD_FB_TIMER: {\n      addFBTimer(action, dispatch, state);\n      break;\n    }\n    case ActionTypes.DEL_FB_TIMER: {\n      delFBTimer(action, dispatch, state);\n      break;\n    }\n    case ActionTypes.SET_TIMER_ID: {\n      setTimerId(action, dispatch, state);\n      break;\n    }\n    default: {\n    }\n  }\n};\n","import { IProject } from \"../store\";\nimport { ISideEffector, fetchData, ActionTypes, errToastr } from \".\";\nexport const fetchProject: ISideEffector = async (action, dispatch, state) => {\n  if (action.type === ActionTypes.FETCH_PROJECT) {\n    try {\n      const { url } = state();\n      const { pid } = action.payload;\n      if (url && pid) {\n        const { data: project } = await fetchData<IProject>(\n          url,\n          `projects/${pid}`\n        );\n        dispatch({\n          type: ActionTypes.SET_PROJECT,\n          payload: { project }\n        });\n      }\n    } catch (e) {\n      errToastr(e);\n    }\n  }\n};\n","import { IMilestone } from \"../store\";\nimport { ISideEffector, fetchData, ActionTypes, errToastr } from \".\";\nexport const fetchMilestones: ISideEffector = async (\n  action,\n  dispatch,\n  state\n) => {\n  if (action.type === ActionTypes.FETCH_MILESTONES) {\n    try {\n      const { url } = state();\n      const { project } = action.payload;\n      if (url && project) {\n        const { data: milestones } = await fetchData<IMilestone[]>(\n          url,\n          \"milestones\",\n          { params: { project } }\n        );\n        dispatch({ type: ActionTypes.SET_MILESTONES, payload: { milestones } });\n      }\n    } catch (e) {\n      errToastr(e);\n    }\n  }\n};\n","import { ITask } from \"../store\";\nimport { ISideEffector, fetchData, ActionTypes, errToastr } from \".\";\nimport _ from \"lodash\";\nimport moment from \"moment\";\nexport const fetchTasks: ISideEffector = async (action, dispatch, state) => {\n  if (action.type === ActionTypes.FETCH_TASKS) {\n    try {\n      const { url } = state();\n      const {\n        milestone,\n        reject_task_status_ids,\n        timelimit_close_task\n      } = action.payload;\n      if (url && milestone && timelimit_close_task) {\n        const startM = moment(timelimit_close_task);\n        const { data } = await fetchData<ITask[]>(url, \"tasks\", {\n          headers: { \"x-disable-pagination\": true },\n          params: { milestone }\n        });\n        const tasks = _.chain(data)\n          .reject(item =>\n            _.includes(reject_task_status_ids, String(item.status))\n          )\n          .reject(\n            item =>\n              item.is_closed && moment(item.finished_date).diff(startM) < 0\n          )\n          .value();\n\n        dispatch({ type: ActionTypes.SET_TASKS, payload: { tasks } });\n      }\n    } catch (e) {\n      errToastr(e);\n    }\n  }\n};\n","import { ITaskStatus } from \"../store\";\nimport { ISideEffector, fetchData, ActionTypes, errToastr } from \".\";\nexport const fetchTaskStatuses: ISideEffector = async (\n  action,\n  dispatch,\n  state\n) => {\n  if (action.type === ActionTypes.FETCH_TASK_STATUSES) {\n    try {\n      const { url } = state();\n      const { project } = action.payload;\n      if (url && project) {\n        const { data: task_statuses } = await fetchData<ITaskStatus[]>(\n          url,\n          \"task-statuses\",\n          { params: { project } }\n        );\n        dispatch({\n          type: ActionTypes.SET_TASK_STATUSES,\n          payload: { task_statuses }\n        });\n      }\n    } catch (e) {\n      errToastr(e);\n    }\n  }\n};\n","import { ICustomAttr } from \"../store\";\nimport { ISideEffector, fetchData, ActionTypes, errToastr } from \".\";\nexport const fetchCustomAttrs: ISideEffector = async (\n  action,\n  dispatch,\n  state\n) => {\n  if (action.type === ActionTypes.FETCH_CUSTOM_ATTRS) {\n    try {\n      const { url } = state();\n      const { project } = action.payload;\n      if (url && project) {\n        const { data: custom_attrs } = await fetchData<ICustomAttr[]>(\n          url,\n          \"task-custom-attributes\",\n          { params: { project } }\n        );\n        dispatch({\n          type: ActionTypes.SET_CUSTOM_ATTRS,\n          payload: { custom_attrs }\n        });\n      }\n    } catch (e) {\n      errToastr(e);\n    }\n  }\n};\n","import { ITask, ICustomValue } from \"../store\";\nimport { ISideEffector, fetchData, ActionTypes, errToastr } from \".\";\nexport const fetchCustomValueMap: ISideEffector = async (\n  action,\n  dispatch,\n  state\n) => {\n  if (action.type === ActionTypes.FETCH_CUSTOM_VALUE_MAP) {\n    try {\n      const { url, custom_eid, custom_rid } = state();\n      const { tasks } = action.payload;\n      if (url && tasks.length && custom_eid && custom_rid) {\n        const custom_value_map = new WeakMap(\n          await Promise.all(\n            tasks.map(async item => {\n              const { data: custom_attr_val } = await fetchData<ICustomValue>(\n                url,\n                `tasks/custom-attributes-values/${item.id}`\n              );\n              return [item, custom_attr_val] as [ITask, ICustomValue];\n            })\n          )\n        );\n        dispatch({\n          type: ActionTypes.SET_CUSTOM_VALUE_MAP,\n          payload: { custom_value_map }\n        });\n      }\n    } catch (e) {\n      errToastr(e);\n    }\n  }\n};\n","import { IUser } from \"../store\";\nimport { ISideEffector, fetchData, ActionTypes, errToastr } from \".\";\nexport const fetchUser: ISideEffector = async (action, dispatch, state) => {\n  if (action.type === ActionTypes.FETCH_USER) {\n    try {\n      const { url } = state();\n      const { uid } = action.payload;\n      if (url && uid) {\n        const { data: user } = await fetchData<IUser>(url, `users/${uid}`);\n        dispatch({\n          type: ActionTypes.SET_USER,\n          payload: { user }\n        });\n      }\n    } catch (e) {\n      errToastr(e);\n    }\n  }\n};\n","import { ISideEffector, patchData, ActionTypes, errToastr } from \".\";\nimport { toastr } from \"../util/toastr\";\nexport const patchCustomValue: ISideEffector = async (\n  action,\n  dispatch,\n  state\n) => {\n  if (action.type === ActionTypes.PATCH_CUSTOM_VALUE) {\n    try {\n      const {\n        url,\n        custom_value_map,\n        tasks,\n        in_progress_task_status_id\n      } = state();\n      const { id, key, value, version } = action.payload;\n      const task = tasks.find(task => task.id === id);\n      if (url && id && key && task && custom_value_map.has(task)) {\n        const custom_value = custom_value_map.get(task);\n        if (custom_value) {\n          const { attributes_values } = custom_value;\n          await patchData(url, `tasks/custom-attributes-values/${id}`, {\n            attributes_values: {\n              ...attributes_values,\n              [key]: String(value)\n            },\n            version\n          });\n          if (\n            action.meta &&\n            action.meta.update_status &&\n            value > 0 &&\n            in_progress_task_status_id &&\n            !task.is_closed &&\n            task.status !== Number(in_progress_task_status_id)\n          ) {\n            dispatch({\n              type: ActionTypes.PATCH_TASK,\n              payload: {\n                key: \"status\",\n                value: in_progress_task_status_id,\n                id: task.id\n              }\n            });\n          }\n          if (action.meta && action.meta.use_pomodoro) {\n            const { used_number } = action.meta.use_pomodoro;\n            dispatch({\n              type: ActionTypes.USE_POMODORO,\n              payload: { used_number }\n            });\n          }\n          dispatch({ type: ActionTypes.UPDATE_DATA });\n          toastr.success(`Custom value updated. [${value}]`);\n        }\n      }\n    } catch (e) {\n      errToastr(e);\n    }\n  }\n};\n","import { IAuthToken, StorageKey, setToStorage } from \"../store\";\nimport { ISideEffector, postData, ActionTypes, errToastr } from \".\";\nimport { toastr } from \"../util/toastr\";\nimport _ from \"lodash\";\nexport const signIn: ISideEffector = async (action, dispatch, state) => {\n  if (action.type === ActionTypes.SIGN_IN) {\n    try {\n      const { url } = state();\n      const { username, password } = action.payload;\n      if (url && username && password) {\n        const {\n          data: { auth_token }\n        } = await postData<IAuthToken>(url, \"auth\", {\n          username,\n          password,\n          type: \"normal\"\n        });\n        dispatch({ type: ActionTypes.SET_AUTH_TOKEN, payload: { auth_token } });\n        setToStorage(StorageKey.USERNAME, username);\n        setToStorage(StorageKey.PASSWORD, password);\n        toastr.success(`${username} signed in.`);\n      }\n    } catch (e) {\n      dispatch({ type: ActionTypes.SET_AUTH_ERROR });\n      if (_.get(e, \"response.data._err_message\")) {\n        dispatch({ type: ActionTypes.SIGN_OUT });\n      }\n      errToastr(e);\n    }\n  }\n};\n","import { ActionTypes, ISideEffector, patchData, errToastr } from \".\";\nimport { toastr } from \"../util/toastr\";\nexport const patchTask: ISideEffector = async (action, dispatch, state) => {\n  if (action.type === ActionTypes.PATCH_TASK) {\n    try {\n      const { url, tasks } = state();\n      const { id, key, value } = action.payload;\n      const task = tasks.find(task => task.id === id);\n      if (url && id && key && task) {\n        await patchData(url, `tasks/${id}`, {\n          [key]: value,\n          version: task.version\n        });\n        dispatch({ type: ActionTypes.UPDATE_DATA });\n        toastr.success(`Task updated. [${key}=${value}]`);\n      }\n    } catch (e) {\n      errToastr(e);\n    }\n  }\n};\n","import { StorageKey } from \"../store\";\nimport { ISideEffector } from \".\";\nimport axios from \"axios\";\nexport const signOut: ISideEffector = (action, dispatch, state) => {\n  localStorage.removeItem(StorageKey.USERNAME);\n  localStorage.removeItem(StorageKey.PASSWORD);\n  if (axios.defaults.headers.common[\"Authorization\"]) {\n    delete axios.defaults.headers.common[\"Authorization\"];\n  }\n};\n","import { ISideEffector, ActionTypes } from \".\";\nimport axios from \"axios\";\nexport const setAuthToken: ISideEffector = (action, dispatch, state) => {\n  if (action.type === ActionTypes.SET_AUTH_TOKEN) {\n    const { auth_token } = action.payload;\n    axios.defaults.headers.common[\"Authorization\"] = `Bearer ${auth_token}`;\n  }\n};\n","import { StorageKey, setToStorage } from \"../store\";\nimport { ISideEffector, ActionTypes } from \".\";\nexport const setUrl: ISideEffector = (action, dispatch, state) => {\n  if (action.type === ActionTypes.SET_URL) {\n    const { url } = action.payload;\n    setToStorage(StorageKey.URL, url);\n  }\n};\n","import { StorageKey, setToStorage, getFromStorageWithSubkey } from \"../store\";\nimport { ISideEffector, ActionTypes } from \".\";\nexport const setPid: ISideEffector = (action, dispatch, state) => {\n  if (action.type === ActionTypes.SET_PID) {\n    const { pid } = action.payload;\n    setToStorage(StorageKey.PID, pid);\n    localStorage.removeItem(StorageKey.MID);\n    const custom_eid = getFromStorageWithSubkey(StorageKey.CUSTOM_EID, pid);\n    const custom_rid = getFromStorageWithSubkey(StorageKey.CUSTOM_RID, pid);\n    dispatch({ type: ActionTypes.SET_CUSTOM_EID, payload: { custom_eid } });\n    dispatch({ type: ActionTypes.SET_CUSTOM_RID, payload: { custom_rid } });\n  }\n};\n","import { StorageKey, setToStorage, getFromStorageWithSubkey } from \"../store\";\nimport { ISideEffector, ActionTypes } from \".\";\nimport _ from \"lodash\";\nexport const setMid: ISideEffector = (action, dispatch, state) => {\n  if (action.type === ActionTypes.SET_MID) {\n    const { mid } = action.payload;\n    const beforeMid = state().mid;\n    setToStorage(StorageKey.MID, mid);\n    const biz_days = _.compact(\n      getFromStorageWithSubkey(StorageKey.BIZ_DAYS, mid).split(\",\")\n    ).sort();\n    dispatch({ type: ActionTypes.SET_BIZ_DAYS, payload: { biz_days } });\n    if (beforeMid && mid !== beforeMid) {\n      dispatch({ type: ActionTypes.RESET_TASK_ID });\n    }\n    const timelimit_close_task = getFromStorageWithSubkey(\n      StorageKey.TIMELIMIT_CLOSE_TASK,\n      mid\n    );\n    dispatch({\n      type: ActionTypes.SET_TIMELIMIT_CLOSE_TASK,\n      payload: { timelimit_close_task }\n    });\n  }\n};\n","import { StorageKey, setToStorageWithSubkey, getFromStorage } from \"../store\";\nimport { ISideEffector, ActionTypes } from \".\";\nexport const setCustomEid: ISideEffector = (action, dispatch, state) => {\n  if (action.type === ActionTypes.SET_CUSTOM_EID) {\n    const { custom_eid } = action.payload;\n    const pid = getFromStorage(StorageKey.PID);\n    setToStorageWithSubkey(StorageKey.CUSTOM_EID, pid, custom_eid);\n  }\n};\n","import { StorageKey, setToStorageWithSubkey, getFromStorage } from \"../store\";\nimport { ISideEffector, ActionTypes } from \".\";\nexport const setCustomRid: ISideEffector = (action, dispatch, state) => {\n  if (action.type === ActionTypes.SET_CUSTOM_RID) {\n    const { custom_rid } = action.payload;\n    const pid = getFromStorage(StorageKey.PID);\n    setToStorageWithSubkey(StorageKey.CUSTOM_RID, pid, custom_rid);\n  }\n};\n","import { StorageKey, setToStorageWithSubkey } from \"../store\";\nimport { ISideEffector } from \".\";\nimport _ from \"lodash\";\nexport const syncBizDays: ISideEffector = (action, dispathc, state) => {\n  _.defer(() => {\n    const { mid, biz_days } = state();\n    setToStorageWithSubkey(StorageKey.BIZ_DAYS, mid, biz_days.join(\",\"));\n  });\n};\n","import { StorageKey, setToStorageWithSubkey } from \"../store\";\nimport { ISideEffector } from \".\";\nimport _ from \"lodash\";\nexport const syncRejectTaskStatusIds: ISideEffector = (\n  action,\n  dispatch,\n  state\n) => {\n  _.defer(() => {\n    const { pid, reject_task_status_ids } = state();\n    setToStorageWithSubkey(\n      StorageKey.REJECT_TASK_STATUS_IDS,\n      pid,\n      reject_task_status_ids.join(\",\")\n    );\n  });\n};\n","import moment from \"moment\";\nimport _ from \"lodash\";\nimport { db } from \"../AppDb\";\nimport { ISideEffector, ActionTypes, fetchData } from \".\";\nimport { ICustomValue } from \"../store\";\nexport const addPomodoro: ISideEffector = async (action, dispatch, state) => {\n  if (action.type === ActionTypes.ADD_POMODORO && action.meta) {\n    const { url, task_id, custom_rid } = state();\n    const { completedAt, duration, pure } = action.meta;\n    const dateKey = moment(completedAt).format(\"YYYY-MM-DD\");\n    await db.items.put({ completedAt, duration, pure, dateKey });\n    dispatch({ type: ActionTypes.CALC_POMODORO_TOTAL, payload: { dateKey } });\n    if (task_id && custom_rid) {\n      const { data: custom_attr_val } = await fetchData<ICustomValue>(\n        url,\n        `tasks/custom-attributes-values/${task_id}`\n      );\n      const value =\n        Number(_.get(custom_attr_val, `attributes_values.${custom_rid}`, \"0\")) +\n        0.5;\n      const { version } = custom_attr_val;\n      if (custom_attr_val && version) {\n        dispatch({\n          type: ActionTypes.PATCH_CUSTOM_VALUE,\n          payload: {\n            id: Number(task_id),\n            key: custom_rid,\n            value,\n            version\n          },\n          meta: { use_pomodoro: { used_number: 1 }, update_status: true }\n        });\n      }\n    }\n  }\n};\n","import moment from \"moment\";\nimport _ from \"lodash\";\nimport { db } from \"../AppDb\";\nimport { ISideEffector, ActionTypes } from \".\";\nexport const calcPomodoroTotal: ISideEffector = async (\n  action,\n  dispatch,\n  state\n) => {\n  if (action.type === ActionTypes.CALC_POMODORO_TOTAL) {\n    const query = action.payload;\n    const totalDoc = await db.totals.get(query);\n    const values = await db.items.where(query).toArray();\n    const value = values.length;\n    const pureValue = _.filter(values, { pure: true }).length;\n    const dayOfWeek = moment(query.dateKey, \"YYYY-MM-DD\").day();\n    const date = moment(query.dateKey, \"YYYY-MM-DD\").toDate();\n    db.totals.put({ ...totalDoc, ...query, date, value, pureValue, dayOfWeek });\n    dispatch({ type: ActionTypes.LOAD_POMODORO_TOTALS });\n  }\n};\n","import { db } from \"../AppDb\";\nimport { ISideEffector, ActionTypes } from \".\";\nexport const loadPomodoroTotals: ISideEffector = async (\n  action,\n  dispatch,\n  state\n) => {\n  const pomodoro_daily_totals = await db.totals.toArray();\n  dispatch({\n    type: ActionTypes.SET_POMODORO_TOTALS,\n    payload: { pomodoro_daily_totals }\n  });\n};\n","import { StorageKey, setToStorage } from \"../store\";\nimport { ISideEffector } from \".\";\nimport _ from \"lodash\";\nexport const syncTaskId: ISideEffector = (action, dispatch, state) => {\n  _.defer(() => {\n    const { task_id } = state();\n    if (task_id) {\n      setToStorage(StorageKey.TASK_ID, task_id);\n    } else {\n      localStorage.removeItem(StorageKey.TASK_ID);\n    }\n  });\n};\n","import { StorageKey, setToStorageWithSubkey } from \"../store\";\nimport { ISideEffector, ActionTypes } from \".\";\nexport const setTimelineCloseTask: ISideEffector = (\n  action,\n  dispatch,\n  state\n) => {\n  if (action.type === ActionTypes.SET_TIMELIMIT_CLOSE_TASK) {\n    const { timelimit_close_task } = action.payload;\n    const customize = action.meta ? action.meta.customize : false;\n    const { mid } = state();\n    timelimit_close_task &&\n      customize &&\n      setToStorageWithSubkey(\n        StorageKey.TIMELIMIT_CLOSE_TASK,\n        mid,\n        timelimit_close_task\n      );\n  }\n};\n","import { addTimer } from \"../util/firebase\";\nimport { ISideEffector, ActionTypes } from \".\";\nexport const addFBTimer: ISideEffector = async (action, dispatch, state) => {\n  if (action.type === ActionTypes.ADD_FB_TIMER) {\n    const { token, pomodoro_mode } = state();\n    const { title, body, remaining } = action.payload;\n    const timer_id = await addTimer(\n      title,\n      body,\n      remaining,\n      token,\n      pomodoro_mode\n    );\n    dispatch({ type: ActionTypes.SET_TIMER_ID, payload: { timer_id } });\n  }\n};\n","import { StorageKey, setToStorage } from \"../store\";\nimport { ISideEffector, ActionTypes } from \".\";\nexport const setTimerId: ISideEffector = (action, dispatch, state) => {\n  if (action.type === ActionTypes.SET_TIMER_ID) {\n    const { timer_id } = action.payload;\n    if (timer_id) {\n      setToStorage(StorageKey.TIMER_ID, timer_id);\n    } else {\n      localStorage.removeItem(StorageKey.TIMER_ID);\n    }\n  }\n};\n","import { Dispatch } from \"react\";\nimport { Actions, ActionTypes } from \"./actions\";\nimport { getFromStorage, getFromStorageWithSubkey, StorageKey } from \"./store\";\nimport _ from \"lodash\";\nconst signIn = (dispatch: Dispatch<Actions>) => {\n  const username = getFromStorage(StorageKey.USERNAME);\n  const password = getFromStorage(StorageKey.PASSWORD);\n  dispatch({ type: ActionTypes.SIGN_IN, payload: { username, password } });\n};\nconst syncStorage = (dispatch: Dispatch<Actions>) => {\n  const url = getFromStorage(StorageKey.URL);\n  const timer_id = getFromStorage(StorageKey.TIMER_ID);\n  const pid = getFromStorage(StorageKey.PID);\n  const mid = getFromStorage(StorageKey.MID);\n  const custom_eid = getFromStorageWithSubkey(StorageKey.CUSTOM_EID, pid);\n  const custom_rid = getFromStorageWithSubkey(StorageKey.CUSTOM_RID, pid);\n  const biz_days = _.compact(\n    getFromStorageWithSubkey(StorageKey.BIZ_DAYS, mid).split(\",\")\n  ).sort();\n  const reject_task_status_ids = _.compact(\n    getFromStorageWithSubkey(StorageKey.REJECT_TASK_STATUS_IDS, pid).split(\",\")\n  );\n\n  const isOpen = !(url && pid && mid && custom_eid && custom_rid);\n\n  const pomodoro_date = getFromStorage(StorageKey.POMODORO_DATE);\n  const pomodoro_number = Number(\n    getFromStorage(StorageKey.POMODORO_NUMBER) || \"0\"\n  );\n  const pomodoro_used_number = Number(\n    getFromStorage(StorageKey.POMODORO_USED_NUMBER) || \"0\"\n  );\n  const task_id = getFromStorage(StorageKey.TASK_ID);\n  timer_id &&\n    dispatch({ type: ActionTypes.SET_TIMER_ID, payload: { timer_id } });\n  url && dispatch({ type: ActionTypes.SET_URL, payload: { url } });\n  pid && dispatch({ type: ActionTypes.SET_PID, payload: { pid } });\n  mid && dispatch({ type: ActionTypes.SET_MID, payload: { mid } });\n  custom_eid &&\n    dispatch({ type: ActionTypes.SET_CUSTOM_EID, payload: { custom_eid } });\n  custom_rid &&\n    dispatch({ type: ActionTypes.SET_CUSTOM_RID, payload: { custom_rid } });\n  biz_days.length &&\n    dispatch({ type: ActionTypes.SET_BIZ_DAYS, payload: { biz_days } });\n  reject_task_status_ids.length &&\n    dispatch({\n      type: ActionTypes.SET_REJECT_TASK_STATUS_IDS,\n      payload: { reject_task_status_ids }\n    });\n\n  task_id && dispatch({ type: ActionTypes.SET_TASK_ID, payload: { task_id } });\n  isOpen && dispatch({ type: ActionTypes.OPEN_CONTROLLER });\n  pomodoro_date &&\n    dispatch({\n      type: ActionTypes.RESTORE_POMODORO,\n      payload: { pomodoro_date, pomodoro_number, pomodoro_used_number }\n    });\n  dispatch({ type: ActionTypes.LOADED });\n  dispatch({ type: ActionTypes.LOAD_POMODORO_TOTALS });\n};\nexport const init = (dispatch: Dispatch<Actions>) => {\n  syncStorage(dispatch);\n  _.defer(() => {\n    signIn(dispatch);\n  });\n};\n","import React, { createContext, useReducer, useEffect } from \"react\";\nimport _ from \"lodash\";\nimport moment from \"moment\";\nimport { ActionTypes } from \"./actions\";\nimport { initialState, ICustomAttr, IMilestone, ITask } from \"./store\";\nimport { reducer } from \"./reducer\";\nimport { Actions } from \"./actions\";\nimport { useSideEffector } from \"./util/useSideEffector\";\nimport { rootSideEffector } from \"./sideEffectors\";\nimport { init } from \"./init\";\nimport { messaging, Timers } from \"./util/firebase\";\nimport { TimerMode } from \"./util/timer\";\nimport { useSettingSelector } from \"./features/setting/settingSlice\";\nexport const baseUrl = (url: string) => `${url.replace(/[¥/]$/, \"\")}/api/v1`;\nconst getCustomAttr = (items: ICustomAttr[], id: number) =>\n  _.find(items, { id });\nconst getMilestone = (items: IMilestone[], mid: string) =>\n  items.find(item => String(item.id) === mid);\nconst getUserTasks = (items: ITask[], uid: number) =>\n  _.chain(items)\n    .filter({ assigned_to: uid })\n    .sortBy(\"user_story\")\n    .value();\n\nexport const RootContext = createContext({\n  state: initialState,\n  dispatch: (action: Actions) => { }\n});\nexport const Provider = ({ children }: { children: React.ReactNode }) => {\n  const url = useSettingSelector.useUrl()\n  const [state, dispatch] = useSideEffector(\n    useReducer(reducer, initialState),\n    rootSideEffector\n  );\n  const value = {\n    state,\n    dispatch\n  };\n\n  useEffect(() => {\n    if (url && state.pid) {\n      dispatch({\n        type: ActionTypes.FETCH_MILESTONES,\n        payload: { project: state.pid }\n      });\n      dispatch({\n        type: ActionTypes.FETCH_CUSTOM_ATTRS,\n        payload: { project: state.pid }\n      });\n      dispatch({\n        type: ActionTypes.FETCH_TASK_STATUSES,\n        payload: { project: state.pid }\n      });\n      dispatch({\n        type: ActionTypes.FETCH_PROJECT,\n        payload: { pid: state.pid }\n      });\n    }\n  }, [url, state.pid, dispatch]);\n  useEffect(() => {\n    if (\n      url &&\n      state.mid &&\n      state.milestone.id &&\n      state.timelimit_close_task\n    ) {\n      dispatch({\n        type: ActionTypes.FETCH_TASKS,\n        payload: {\n          milestone: state.mid,\n          reject_task_status_ids: state.reject_task_status_ids,\n          timelimit_close_task: state.timelimit_close_task\n        }\n      });\n    }\n  }, [\n    url,\n    state.mid,\n    state.updated_time,\n    state.reject_task_status_ids,\n    dispatch,\n    state.milestone.id,\n    state.timelimit_close_task\n  ]);\n  useEffect(() => {\n    dispatch({\n      type: ActionTypes.FETCH_CUSTOM_VALUE_MAP,\n      payload: {\n        tasks: state.tasks\n      }\n    });\n  }, [dispatch, state.tasks, state.custom_eid, state.custom_rid]);\n  useEffect(() => {\n    const active_task_statuses = _.chain(state.task_statuses)\n      .reject(item => _.includes(state.reject_task_status_ids, String(item.id)))\n      .orderBy(item => item.order)\n      .value();\n    dispatch({\n      type: ActionTypes.SET_ACTIVE_TASK_STATUSES,\n      payload: { active_task_statuses }\n    });\n  }, [state.task_statuses, state.reject_task_status_ids, dispatch]);\n  useEffect(() => {\n    const custom_attr_e = getCustomAttr(\n      state.custom_attrs,\n      Number(state.custom_eid)\n    );\n    if (custom_attr_e) {\n      dispatch({\n        type: ActionTypes.SET_CUSTOM_ATTR_E,\n        payload: { custom_attr_e }\n      });\n    }\n  }, [dispatch, state.custom_attrs, state.custom_eid]);\n  useEffect(() => {\n    const custom_attr_r = getCustomAttr(\n      state.custom_attrs,\n      Number(state.custom_rid)\n    );\n    if (custom_attr_r) {\n      dispatch({\n        type: ActionTypes.SET_CUSTOM_ATTR_R,\n        payload: { custom_attr_r }\n      });\n    }\n  }, [dispatch, state.custom_attrs, state.custom_rid]);\n  useEffect(() => {\n    const milestone = getMilestone(state.milestones, state.mid);\n    if (milestone) {\n      dispatch({\n        type: ActionTypes.SET_MILESTONE,\n        payload: { milestone }\n      });\n    }\n  }, [dispatch, state.mid, state.milestones]);\n  useEffect(() => {\n    if (state.tasks.length > 0 && state.user) {\n      const user_tasks = getUserTasks(state.tasks, state.user.id);\n      dispatch({ type: ActionTypes.SET_USER_TASKS, payload: { user_tasks } });\n    }\n  }, [dispatch, state.tasks, state.user]);\n\n  useEffect(() => {\n    init(dispatch);\n  }, [dispatch]);\n  useEffect(() => {\n    if (state.task_id) {\n      const task = state.tasks.find(item => item.id === Number(state.task_id));\n      if (task) {\n        dispatch({ type: ActionTypes.SET_TASK, payload: { task } });\n      }\n    }\n  }, [dispatch, state.task_id, state.tasks]);\n  useEffect(() => {\n    const firstDay = state.biz_days[0];\n    if (firstDay && !state.timelimit_close_task) {\n      const timelimit_close_task = `${moment(firstDay)\n        .local()\n        .startOf(\"day\")\n        .format(\"YYYY-MM-DD\")}T12:00`;\n      dispatch({\n        type: ActionTypes.SET_TIMELIMIT_CLOSE_TASK,\n        payload: { timelimit_close_task }\n      });\n    }\n  }, [dispatch, state.biz_days, state.milestone, state.timelimit_close_task]);\n  useEffect(() => {\n    if (state.task_statuses.length > 0) {\n      const task_status = state.task_statuses.find(\n        item => item.slug === \"in-progress\"\n      );\n      task_status &&\n        dispatch({\n          type: ActionTypes.SET_IN_PROGRESS_TASK_STATUS_ID,\n          payload: { task_status_id: String(task_status.id) }\n        });\n    }\n  }, [dispatch, state.task_statuses, state.task_statuses.length]);\n  useEffect(() => {\n    if (messaging) {\n      messaging.onTokenRefresh(async () => {\n        if (messaging) {\n          const token = await messaging.getToken();\n          dispatch({\n            type: ActionTypes.SET_TOKEN,\n            payload: { token }\n          });\n        }\n      });\n      messaging.getToken().then(token => {\n        dispatch({\n          type: ActionTypes.SET_TOKEN,\n          payload: { token }\n        });\n      });\n    }\n  }, [dispatch]);\n  useEffect(() => {\n    Object.values(TimerMode).forEach(mode => {\n      Timers.where(\"mode\", \"==\", mode).onSnapshot(docs => {\n        dispatch({\n          type: ActionTypes.SET_POMODORO_LIVE_COUNT,\n          payload: { mode, value: docs.size }\n        });\n      });\n    });\n  }, [dispatch]);\n  return <RootContext.Provider value={value}>{children}</RootContext.Provider>;\n};\n","import React from \"react\";\nexport const preventDefault = (e: React.FormEvent) => {\n  e.preventDefault();\n};\nexport const stopPropagation = (e: React.FormEvent) => {\n  e.stopPropagation();\n};\n","import React from \"react\";\nimport { LinearProgress } from \"@rmwc/linear-progress\";\nexport const LinearLoader: React.SFC = () => (\n  <LinearProgress\n    progress={0}\n    buffer={0}\n    className=\"my-auto mx-2 border-0 form-control\"\n  />\n);\n","import React, { useCallback, useContext } from \"react\";\nimport { Input, InputGroup, InputGroupAddon } from \"reactstrap\";\nimport { LinearLoader } from \"./common/LinearLoader\";\nimport { RootContext } from \"../Provider\";\nimport { ActionTypes } from \"../actions\";\nimport _ from \"lodash\";\nimport { useProjectSelector } from \"../features/project/projectSlice\";\nexport const ProjectSelector = () => {\n  const projects = useProjectSelector.useList()\n  const {\n    state: { pid, },\n    dispatch\n  } = useContext(RootContext);\n  const handleChange = useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>) => {\n      const id = e.target.value;\n      if (id) {\n        dispatch({ type: ActionTypes.SET_PID, payload: { pid: id } });\n      }\n    },\n    [dispatch]\n  );\n  return (\n    <InputGroup className=\"col\">\n      <InputGroupAddon addonType=\"prepend\">Project</InputGroupAddon>\n      {_.isEmpty(projects) ? (\n        <LinearLoader />\n      ) : (\n          <Input value={pid} type=\"select\" onChange={handleChange}>\n            <option value=\"\"> --- </option>\n            {projects.map(item => (\n              <option key={item.id} value={item.id}>\n                {item.name}\n              </option>\n            ))}\n          </Input>\n        )}\n    </InputGroup>\n  );\n};\n","import React, { useCallback, useContext } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { Input, InputGroup, InputGroupAddon } from \"reactstrap\";\nimport _ from \"lodash\";\nimport { RootContext } from \"../Provider\";\nimport { ActionTypes } from \"../actions\";\nimport { LinearLoader } from \"./common/LinearLoader\";\nimport { milestoneActions, useMilestoneSelector } from \"../features/milestone/milestoneSlice\";\n\nexport const MilestoneSelector = () => {\n  const dispatch = useDispatch()\n  const mid = useMilestoneSelector.useMid()\n  const {\n    state: { milestones },\n    dispatch: xdispatch\n  } = useContext(RootContext);\n  const handleChange = useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>) => {\n      const id = e.target.value;\n      if (id) {\n        xdispatch({ type: ActionTypes.SET_MID, payload: { mid: id } });\n        dispatch(milestoneActions.setMid(id))\n      }\n    },\n    [xdispatch, dispatch]\n  );\n\n  return (\n    <InputGroup className=\"col\">\n      <InputGroupAddon addonType=\"prepend\">Sprint</InputGroupAddon>\n      {_.isEmpty(milestones) ? (\n        <LinearLoader />\n      ) : (\n          <Input type=\"select\" value={mid} onChange={handleChange}>\n            <option value=\"\"> --- </option>\n            {milestones.map(item => (\n              <option key={item.id} value={item.id}>\n                {item.name}\n              </option>\n            ))}\n          </Input>\n        )}\n    </InputGroup>\n  );\n};\n","import React, { useCallback, useContext } from \"react\";\nimport { Input, InputGroup, InputGroupAddon } from \"reactstrap\";\nimport { RootContext } from \"../Provider\";\nimport { ActionTypes } from \"../actions\";\nimport _ from \"lodash\";\nimport { LinearLoader } from \"./common/LinearLoader\";\n\nexport const CustomValuesSelector = () => {\n  const {\n    state: { custom_attrs, custom_eid, custom_rid },\n    dispatch\n  } = useContext(RootContext);\n  const handleChange = useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>) => {\n      const id = e.target.value;\n      if (id) {\n        switch (e.target.name) {\n          case \"eid\": {\n            dispatch({\n              type: ActionTypes.SET_CUSTOM_EID,\n              payload: { custom_eid: id }\n            });\n            break;\n          }\n          case \"rid\": {\n            dispatch({\n              type: ActionTypes.SET_CUSTOM_RID,\n              payload: { custom_rid: id }\n            });\n            break;\n          }\n        }\n      }\n    },\n    [dispatch]\n  );\n  return (\n    <div className=\"row\">\n      <InputGroup className=\"col\">\n        <InputGroupAddon addonType=\"prepend\">Estimate</InputGroupAddon>\n        {_.isEmpty(custom_attrs) ? (\n          <LinearLoader></LinearLoader>\n        ) : (\n          <Input\n            value={custom_eid}\n            name=\"eid\"\n            type=\"select\"\n            onChange={handleChange}\n          >\n            <option value=\"\"> --- </option>\n            {custom_attrs.map(item => (\n              <option key={item.id} value={item.id}>\n                {item.name}\n              </option>\n            ))}\n          </Input>\n        )}\n      </InputGroup>\n      <InputGroup className=\"col\">\n        <InputGroupAddon addonType=\"prepend\">Result</InputGroupAddon>\n        {_.isEmpty(custom_attrs) ? (\n          <LinearLoader></LinearLoader>\n        ) : (\n          <Input\n            value={custom_rid}\n            name=\"rid\"\n            type=\"select\"\n            onChange={handleChange}\n          >\n            <option> --- </option>\n            {custom_attrs.map(item => (\n              <option key={item.id} value={item.id}>\n                {item.name}\n              </option>\n            ))}\n          </Input>\n        )}\n      </InputGroup>\n    </div>\n  );\n};\n","import React, { useEffect, useState, useContext, useCallback } from \"react\";\nimport classNames from \"classnames\";\nimport {\n  UncontrolledTooltip,\n  Table,\n  Card,\n  CardHeader,\n  Input,\n  Label,\n  FormGroup,\n  InputGroup\n} from \"reactstrap\";\nimport { IMilestone } from \"../store\";\nimport { RootContext } from \"../Provider\";\nimport { LinearLoader } from \"./common/LinearLoader\";\nimport moment, { Moment } from \"moment\";\nimport biz from \"moment-business\";\nimport _ from \"lodash\";\nimport { ActionTypes } from \"../actions\";\nexport const isToday = (date: string) =>\n  moment()\n    .local()\n    .format(\"YYYY-MM-DD\") ===\n  moment(date)\n    .local()\n    .format(\"YYYY-MM-DD\");\n\nexport const dayNameFromIdx = (date: string, idx: number) => {\n  if (idx === -1) {\n    return \"\";\n  }\n  if (idx === 0) {\n    return \"Planning\";\n  }\n  return `Day ${idx}`;\n};\n\nexport const dayName = (date: string, biz_days: string[]) => {\n  const idx = biz_days.indexOf(date);\n  return dayNameFromIdx(date, idx);\n};\nconst getDays = (item: IMilestone) => {\n  const startM = moment(item.estimated_start).local();\n  const finishM = moment(item.estimated_finish).local();\n  const daysInSprint = finishM.diff(startM, \"days\");\n  return _.times(daysInSprint).map(i => startM.clone().add(i, \"days\"));\n};\nconst getDefaultBizDays = (items: Moment[]) =>\n  items\n    .filter(item => biz.isWeekDay(item))\n    .map(item => item.format(\"YYYY-MM-DD\"));\n\nconst weekClassName = (day: number) => ({\n  \"text-danger\": day === 0,\n  \"text-info\": day === 6\n});\n\ninterface DayItemProps {\n  item: Moment | null;\n  idx: number;\n}\nconst DayItem: React.FC<DayItemProps> = ({ item, idx }) => {\n  const {\n    state: { biz_days },\n    dispatch\n  } = useContext(RootContext);\n  const handleChange = useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>) => {\n      const biz_day = e.target.value;\n      if (e.target.checked) {\n        dispatch({ type: ActionTypes.ADD_BIZ_DAY, payload: { biz_day } });\n      } else {\n        dispatch({ type: ActionTypes.REMOVE_BIZ_DAY, payload: { biz_day } });\n      }\n    },\n    [dispatch]\n  );\n  if (!item) {\n    return (\n      <td>\n        <br />\n      </td>\n    );\n  }\n  const value = item.format(\"YYYY-MM-DD\");\n  const isPlanning = value === biz_days[0];\n  const eleId = `biz-day-${value}`;\n  const checked = _.includes(biz_days, value);\n  return (\n    <>\n      <td\n        className={classNames(weekClassName(idx), { \"table-info\": isPlanning })}\n        id={eleId}\n      >\n        {biz.isWeekDay(item) ? (\n          <FormGroup check inline>\n            <Label check>\n              <Input\n                onChange={handleChange}\n                disabled={biz.isWeekendDay(item)}\n                value={value}\n                type=\"checkbox\"\n                checked={checked}\n                className=\"form-check-input\"\n              />\n              {value}\n            </Label>\n          </FormGroup>\n        ) : (\n          <span>{value}</span>\n        )}\n      </td>\n      {checked ? (\n        <UncontrolledTooltip target={eleId}>\n          {dayName(value, biz_days)}\n        </UncontrolledTooltip>\n      ) : null}\n    </>\n  );\n};\ntype Moments = Moment[];\ntype MomentOrNull = Moment | null;\ntype MomentsOrNull = MomentOrNull[];\n\nconst DaysTable: React.FC = () => {\n  const {\n    state: { biz_days, milestone },\n    dispatch\n  } = useContext(RootContext);\n  const [items, setItems] = useState<Moments>([]);\n  const [weekdays, setWeekdays] = useState<MomentsOrNull[]>([]);\n  useEffect(() => {\n    if (milestone) {\n      const items = getDays(milestone);\n      setItems(items);\n      if (biz_days.length <= 1) {\n        dispatch({\n          type: ActionTypes.SET_BIZ_DAYS,\n          payload: { biz_days: getDefaultBizDays(items) }\n        });\n      }\n    }\n  }, [milestone, biz_days, dispatch]);\n  useEffect(() => {\n    if (items.length > 0) {\n      const weeks = _.chunk(\n        [..._.times(items[0].day(), () => null), ...items],\n        7\n      );\n      setWeekdays(weeks);\n    }\n  }, [items]);\n  return (\n    <Table bordered>\n      <thead>\n        <tr>\n          {moment.weekdays().map((item, idx) => (\n            <th\n              key={idx}\n              className={classNames(\"text-center\", weekClassName(idx))}\n            >\n              {item}\n            </th>\n          ))}\n        </tr>\n      </thead>\n      <tbody>\n        {weekdays.map((days, i) => (\n          <tr key={i}>\n            {days.map((item, idx) => (\n              <DayItem idx={idx} key={idx} item={item} />\n            ))}\n          </tr>\n        ))}\n      </tbody>\n    </Table>\n  );\n};\n\nexport const DaysSelector: React.FC = () => {\n  const {\n    state: { milestone }\n  } = useContext(RootContext);\n  return (\n    <Card>\n      <CardHeader>Business Days</CardHeader>\n      {_.isEmpty(milestone) ? (\n        <InputGroup>\n          <LinearLoader />\n        </InputGroup>\n      ) : (\n        <DaysTable />\n      )}\n    </Card>\n  );\n};\n","import React, { useCallback, useContext } from \"react\";\nimport _ from \"lodash\";\nimport { RootContext } from \"../Provider\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  Input,\n  FormGroup,\n  Label\n} from \"reactstrap\";\nimport { ITaskStatus } from \"../store\";\nimport { ActionTypes } from \"../actions\";\nconst StatusItem = ({ item }: { item: ITaskStatus }) => {\n  const {\n    state: { reject_task_status_ids },\n    dispatch\n  } = useContext(RootContext);\n  const handleChange = useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>) => {\n      const reject_task_status_id = e.target.value;\n      if (e.target.checked) {\n        dispatch({\n          type: ActionTypes.REMOVE_REJECT_TASK_STATUS_ID,\n          payload: { reject_task_status_id }\n        });\n      } else {\n        dispatch({\n          type: ActionTypes.ADD_REJECT_TASK_STATUS_ID,\n          payload: { reject_task_status_id }\n        });\n      }\n    },\n    [dispatch]\n  );\n  return (\n    <FormGroup check inline>\n      <Label check>\n        <Input\n          onChange={handleChange}\n          type=\"checkbox\"\n          value={item.id}\n          defaultChecked={!_.includes(reject_task_status_ids, String(item.id))}\n        />\n        {item.name}\n      </Label>\n    </FormGroup>\n  );\n};\nexport const TaskStatusSelector = () => {\n  const {\n    state: { task_statuses }\n  } = useContext(RootContext);\n  if (task_statuses.length === 0) {\n    return null;\n  }\n  return (\n    <Card>\n      <CardHeader>Task status</CardHeader>\n      <CardBody>\n        {task_statuses.map(item => (\n          <StatusItem key={item.id} item={item} />\n        ))}\n      </CardBody>\n    </Card>\n  );\n};\n","import React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSpinner } from \"@fortawesome/free-solid-svg-icons\";\nimport { InputGroupAddon, InputGroupText } from \"reactstrap\";\nexport const InputGroupSpinner: React.FC = () => {\n  return (\n    <InputGroupAddon addonType=\"append\">\n      <InputGroupText>\n        <FontAwesomeIcon icon={faSpinner} className=\"fa-pulse\" />\n      </InputGroupText>\n    </InputGroupAddon>\n  );\n};\n","import React, { useContext, useCallback, useState, useEffect } from \"react\";\nimport { Button, Form, Input, InputGroup, InputGroupAddon } from \"reactstrap\";\nimport { RootContext } from \"../Provider\";\nimport { InputGroupSpinner } from \"./InputGroupSpinner\";\nimport { ActionTypes } from \"../actions\";\nimport _ from \"lodash\";\nexport const TimelimitCloseTask = () => {\n  const {\n    state: { timelimit_close_task },\n    dispatch\n  } = useContext(RootContext);\n  const [datetime, setDatetime] = useState(\"\");\n  const [isFresh, setIsFresh] = useState(false);\n\n  const handleChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setDatetime(e.target.value);\n  }, []);\n  const handleSubmit = useCallback(\n    (e: React.FormEvent) => {\n      datetime &&\n        dispatch({\n          type: ActionTypes.SET_TIMELIMIT_CLOSE_TASK,\n          payload: { timelimit_close_task: datetime },\n          meta: { customize: true }\n        });\n      e.preventDefault();\n    },\n    [datetime, dispatch]\n  );\n  useEffect(() => {\n    if (timelimit_close_task) {\n      setIsFresh(true);\n      _.defer(setIsFresh, false);\n    }\n  }, [timelimit_close_task]);\n  return (\n    <Form onSubmit={handleSubmit}>\n      <InputGroup>\n        <InputGroupAddon addonType=\"prepend\">\n          Timelimit for closing old tasks\n        </InputGroupAddon>\n        {isFresh ? (\n          <InputGroupSpinner />\n        ) : (\n          <Input\n            defaultValue={timelimit_close_task}\n            onChange={handleChange}\n            type=\"datetime-local\"\n          />\n        )}\n        <InputGroupAddon addonType=\"append\">\n          <Button>Set</Button>\n        </InputGroupAddon>\n      </InputGroup>\n    </Form>\n  );\n};\n","import React, { useContext, useState, useCallback, useMemo } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport _ from \"lodash\";\nimport classNames from \"classnames\";\nimport { settingActions, useSettingSelector } from \"../features/setting/settingSlice\";\nimport { RootContext } from \"../Provider\";\nimport {\n  Card,\n  CardHeader,\n  Collapse,\n  Form,\n  Input,\n  InputGroup,\n  InputGroupAddon,\n  Button,\n  Badge\n} from \"reactstrap\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faChevronCircleRight,\n  faExternalLinkAlt\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { stopPropagation } from \"../util/handler\";\nimport { ProjectSelector } from \"./ProjectSelector\";\nimport { MilestoneSelector } from \"./MilestoneSelector\";\nimport { CustomValuesSelector } from \"./CustomValuesSelector\";\nimport { DaysSelector } from \"./DaysSelector\";\nimport { TaskStatusSelector } from \"./TaskStatusSelector\";\nimport { TimelimitCloseTask } from \"./TimelimitCloseTask\";\nimport { IMilestone } from \"../store\";\nimport styles from \"./Controller.module.css\";\nimport { ActionTypes } from \"../actions\";\nconst getTaskboardUrl = (url: string, milestone: IMilestone) => {\n  if (url && milestone.project_extra_info) {\n    return `${url}/project/${milestone.project_extra_info.slug}/taskboard/${milestone.slug}`;\n  } else {\n    return \"\";\n  }\n};\n\nconst getRange = (biz_days: string[]) => {\n  if (biz_days.length > 1) {\n    return `[${_.head(biz_days)} - ${_.last(biz_days)}]`;\n  } else {\n    return \"\";\n  }\n};\nexport const ToggleIcon = ({ isOpen }: { isOpen: boolean }) => {\n  const rotation = isOpen ? 90 : undefined;\n  return (\n    <FontAwesomeIcon\n      className=\"text-muted mr-2\"\n      rotation={rotation}\n      icon={faChevronCircleRight}\n    />\n  );\n};\nexport const Controller: React.FC = () => {\n  const dispatch = useDispatch()\n  const stateUrl = useSettingSelector.useUrl()\n  const {\n    state: { isOpen, biz_days, milestone },\n    dispatch: xdispatch\n  } = useContext(RootContext);\n  const [url, setUrl] = useState(\"\");\n  const handleUrl = useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>) => {\n      setUrl(e.target.value);\n    },\n    [setUrl]\n  );\n  const handleSubmit = useCallback(\n    (e: React.FormEvent) => {\n      if (url) {\n        dispatch(settingActions.setUrl(url))\n      }\n      e.preventDefault();\n    },\n    [url, dispatch]\n  );\n  const toggle = useCallback(() => {\n    if (isOpen) {\n      xdispatch({ type: ActionTypes.CLOSE_CONTROLLER });\n    } else {\n      xdispatch({ type: ActionTypes.OPEN_CONTROLLER });\n    }\n  }, [xdispatch, isOpen]);\n  const taskboardUrl = useMemo(() => getTaskboardUrl(stateUrl, milestone), [\n    milestone,\n    stateUrl\n  ]);\n  const spName = milestone.name;\n  const range = useMemo(() => getRange(biz_days), [biz_days]);\n  return (\n    <Card>\n      <CardHeader className={classNames(styles.header)} onClick={toggle}>\n        <ToggleIcon isOpen={isOpen} />\n        {spName && (\n          <Badge color=\"primary\" pill className=\"p-1 m-1\">\n            <span>{spName}</span>\n          </Badge>\n        )}\n        {range && (\n          <Badge className=\"p-1 m-1\">\n            <span>{range}</span>\n          </Badge>\n        )}\n        {taskboardUrl ? (\n          <a\n            target=\"_blank\"\n            onClick={stopPropagation}\n            className=\"float-right\"\n            href={taskboardUrl}\n            rel=\"noopener noreferrer\"\n          >\n            <FontAwesomeIcon className=\"mr-1\" icon={faExternalLinkAlt} />\n            Taskboard\n          </a>\n        ) : null}\n      </CardHeader>\n      <Collapse isOpen={isOpen}>\n        <Form onSubmit={handleSubmit}>\n          <InputGroup>\n            <InputGroupAddon addonType=\"prepend\">URL</InputGroupAddon>\n            <Input\n              defaultValue={stateUrl}\n              onChange={handleUrl}\n              placeholder=\"http://hostname:port\"\n            />\n            <InputGroupAddon addonType=\"append\">\n              <Button>Set</Button>\n            </InputGroupAddon>\n          </InputGroup>\n        </Form>\n        <div className=\"row\">\n          <ProjectSelector />\n          <MilestoneSelector />\n        </div>\n        <CustomValuesSelector />\n        <TimelimitCloseTask />\n        <DaysSelector />\n        <TaskStatusSelector />\n      </Collapse>\n    </Card>\n  );\n};\n","import React, { useContext, useCallback } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { Button } from \"reactstrap\";\nimport { faSyncAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { RootContext } from \"../Provider\";\nimport { ActionTypes } from \"../actions\";\nimport { commonActions } from \"../features/common/commonSlice\";\ninterface UpdateButtonProps {\n  size?: \"sm\",\n}\nexport const UpdateButton: React.FC<UpdateButtonProps> = ({ size }) => {\n  const dispatch = useDispatch()\n  const { dispatch: xdispatch } = useContext(RootContext);\n  const updateData = useCallback(() => {\n    xdispatch({ type: ActionTypes.UPDATE_DATA });\n    dispatch(commonActions.updateData())\n  }, [xdispatch, dispatch]);\n  return (\n    <Button onClick={updateData} size={size} className=\"mx-1\">\n      <FontAwesomeIcon icon={faSyncAlt} />\n    </Button>\n  );\n};\n","import React, { useCallback, useContext, useEffect, useState } from \"react\";\nimport {\n  Button,\n  Form,\n  InputGroup,\n  Input,\n  InputGroupAddon,\n  InputGroupText,\n  Spinner\n} from \"reactstrap\";\nimport { RootContext } from \"../Provider\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faUser,\n  faKey,\n  faSignInAlt,\n  faSignOutAlt\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { ActionTypes } from \"../actions\";\nimport { preventDefault } from \"../util/handler\";\nexport const SignInForm: React.FC = () => {\n  const {\n    state: { auth_token, auth_error, username: sign_in_username },\n    dispatch\n  } = useContext(RootContext);\n\n  const [username, setUsername] = useState<string>(\"\");\n  const [password, setPassword] = useState<string>(\"\");\n  const [loading, setLoading] = useState<boolean>(false);\n\n  const handleSubmit = useCallback(\n    (e: React.FormEvent) => {\n      if (username && password) {\n        setLoading(true);\n        dispatch({\n          type: ActionTypes.SIGN_IN,\n          payload: {\n            username,\n            password\n          }\n        });\n      }\n      e.preventDefault();\n    },\n    [password, username, dispatch, setLoading]\n  );\n  const handleUsername = useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>) => {\n      setUsername(e.target.value);\n    },\n    [setUsername]\n  );\n  const handlePassword = useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>) => {\n      setPassword(e.target.value);\n    },\n    [setPassword]\n  );\n  const handleSignOut = useCallback(() => {\n    dispatch({ type: ActionTypes.SIGN_OUT });\n  }, [dispatch]);\n  useEffect(() => {\n    if (auth_error || auth_token) {\n      setLoading(false);\n    }\n  }, [auth_error, auth_token, setLoading]);\n  return (\n    <>\n      {auth_token ? (\n        <Form inline onSubmit={preventDefault} className=\"mr-1\">\n          <InputGroup>\n            <InputGroupAddon addonType=\"prepend\">\n              <InputGroupText>\n                <FontAwesomeIcon icon={faUser} />\n              </InputGroupText>\n            </InputGroupAddon>\n            <InputGroupAddon\n              addonType=\"prepend\"\n              className=\"border border-success\"\n            >\n              <InputGroupText>{sign_in_username}</InputGroupText>\n            </InputGroupAddon>\n            <InputGroupAddon addonType=\"append\">\n              <Button title=\"Sign out\" onClick={handleSignOut} color=\"danger\">\n                <FontAwesomeIcon icon={faSignOutAlt} />\n              </Button>\n            </InputGroupAddon>\n          </InputGroup>\n        </Form>\n      ) : (\n        <Form inline onSubmit={handleSubmit} className=\"mr-1\">\n          <InputGroup>\n            <InputGroupAddon addonType=\"prepend\">\n              <InputGroupText>\n                <FontAwesomeIcon icon={faUser} />\n              </InputGroupText>\n            </InputGroupAddon>\n            <Input\n              disabled={loading}\n              onInput={handleUsername}\n              onChange={handleUsername}\n              name=\"username\"\n              placeholder=\"username\"\n              invalid={auth_error}\n            />\n          </InputGroup>\n          <InputGroup>\n            <InputGroupAddon addonType=\"prepend\">\n              <InputGroupText>\n                <FontAwesomeIcon icon={faKey} />\n              </InputGroupText>\n            </InputGroupAddon>\n            <Input\n              disabled={loading}\n              onInput={handlePassword}\n              onChange={handlePassword}\n              name=\"password\"\n              placeholder=\"password\"\n              type=\"password\"\n              invalid={auth_error}\n            />\n          </InputGroup>\n          <Button color=\"info\">\n            {loading ? (\n              <Spinner size=\"sm\" type=\"grow\" />\n            ) : (\n              <FontAwesomeIcon icon={faSignInAlt} />\n            )}\n          </Button>\n        </Form>\n      )}\n    </>\n  );\n};\n","import React, { useCallback, useContext, useState, useMemo } from \"react\";\nimport { Avatar, AvatarProps } from \"@rmwc/avatar\";\nimport { ICustomValueMap, IUser, ITask } from \"../../store\";\nimport { RootContext } from \"../../Provider\";\nimport classNames from \"classnames\";\nimport {\n  Table,\n  Navbar,\n  Form,\n  Input,\n  InputGroup,\n  InputGroupAddon,\n  InputGroupText,\n  Progress\n} from \"reactstrap\";\nimport _ from \"lodash\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faMedal,\n  faTimes,\n  faEquals,\n  faGrinBeam,\n  faGrinBeamSweat,\n  faDizzy,\n  faGhost\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { UpdateButton } from \"../UpdateButton\";\nimport styles from \"./UserTasks.module.css\";\nimport moment from \"moment\";\nimport { Link } from \"react-router-dom\";\nimport { preventDefault } from \"../../util/handler\";\nimport { SignInForm } from \"../SignInForm\";\n\ninterface ISortedUser extends IUser {\n  closed: number;\n}\nconst barStyles = [\"success\", \"warning\", \"info\", \"danger\"];\nconst getTasksByUser = (items: ITask[]) => _.groupBy(items, \"assigned_to\");\nexport const AvatarSquare: React.FC<AvatarProps> = props => {\n  const src = props.src || `http://i.pravatar.cc/80?u=${Math.random()}`;\n  return <Avatar {...props} src={src} square className=\"mr-1\" />;\n};\nexport const parseCustomVal = (val: string) =>\n  _.chain(val)\n    .replace(/[^0-9.+,]/g, \"\")\n    .replace(/[+]/g, \",\")\n    .split(\",\")\n    .compact()\n    .map(Number)\n    .sum()\n    .value();\n\nexport const getCustomVal = (\n  custom_value_map: ICustomValueMap,\n  task: ITask,\n  id: number\n) => {\n  if (custom_value_map.has(task)) {\n    return parseCustomVal(\n      _.get(custom_value_map.get(task), `attributes_values.${id}`, \"0\")\n    );\n  } else {\n    return 0;\n  }\n};\nexport const getSumCustomVal = (\n  custom_value_map: ICustomValueMap,\n  tasks: ITask[],\n  id: number\n) =>\n  _.chain(tasks)\n    .map(task => getCustomVal(custom_value_map, task, id))\n    .sum()\n    .value();\n\nconst getSumCustomValClosed = (\n  custom_value_map: ICustomValueMap,\n  tasks: ITask[],\n  id: number\n) =>\n  getSumCustomVal(\n    custom_value_map,\n    tasks.filter(item => item.is_closed),\n    id\n  );\nexport const getCustomValVersion = (\n  custon_value_map: ICustomValueMap,\n  task: ITask\n) => {\n  if (custon_value_map.has(task)) {\n    return _.get(custon_value_map.get(task), \"version\");\n  } else {\n    return undefined;\n  }\n};\nexport const isCustomValValid = (e: number, r: number, is_closed: boolean) =>\n  is_closed && r === e;\nexport const isCustomValInvalid = (e: number, r: number) => r > e;\nconst getGrade = (e: number, r: number): [string | null, number] => {\n  if (_.isNumber(e) && _.isNumber(r) && e > 0) {\n    const diff = Math.abs(e - r) / e;\n    if (diff <= 0.05) {\n      return [\"gold\", 3];\n    }\n    if (diff <= 0.1) {\n      return [\"silver\", 2];\n    }\n    if (diff < 0.2) {\n      return [\"bronze\", 1];\n    }\n  }\n  return [null, 0];\n};\nconst NameAndWorkLoad = ({\n  username,\n  val,\n  total,\n  imgSrc\n}: {\n  username: string;\n  val: number;\n  total: number;\n  imgSrc: string;\n}) => {\n  const [icon, tblCls] = useMemo(() => {\n    const diff = total > 0 ? (val - total) / total : 0;\n    if (diff < -0.1) {\n      return [faGrinBeam, \"\"];\n    } else if (diff <= 0.1) {\n      return [faGrinBeam, \"table-success\"];\n    } else if (diff <= 0.2) {\n      return [faGrinBeamSweat, \"table-warning\"];\n    } else {\n      return [faDizzy, \"table-danger\"];\n    }\n  }, [total, val]);\n\n  if (!val) {\n    return (\n      <>\n        <td>\n          <AvatarSquare src={imgSrc} /> {username}\n        </td>\n        <td />\n      </>\n    );\n  }\n  return (\n    <>\n      <td className={tblCls}>\n        <AvatarSquare src={imgSrc} /> {username}\n        <FontAwesomeIcon className=\"mx-1\" icon={icon} />\n      </td>\n      <td className={classNames(tblCls, \"text-right\")}>{val}</td>\n    </>\n  );\n};\n\nexport const Medal = ({ e, r }: { e: number; r: number }) => {\n  const [grade, num] = useMemo(() => getGrade(e, r), [e, r]);\n  if (grade) {\n    return (\n      <>\n        {_.times(num).map(i => (\n          <FontAwesomeIcon key={i} className={styles[grade]} icon={faMedal} />\n        ))}\n      </>\n    );\n  } else {\n    return null;\n  }\n};\ninterface IProgressTotal {\n  status: number;\n  total: number;\n  style?: string;\n  label: string;\n}\ninterface TaskProgressProps {\n  tasks: ITask[];\n}\n\nexport const TaskProgress: React.FC<TaskProgressProps> = ({ tasks }) => {\n  const {\n    state: { active_task_statuses, custom_eid, custom_value_map }\n  } = useContext(RootContext);\n  const eid = Number(custom_eid);\n  const items = useMemo(\n    () =>\n      _.chain(active_task_statuses)\n        .filter({ is_closed: true })\n        .reverse()\n        .map((item, idx) => ({\n          status: item.id,\n          total: getSumCustomVal(\n            custom_value_map,\n            _.filter(tasks, { status: item.id }),\n            eid\n          ),\n          style: barStyles[idx],\n          label: item.name\n        }))\n        .value(),\n    [active_task_statuses, custom_value_map, eid, tasks]\n  );\n\n  const allSum = useMemo(() => getSumCustomVal(custom_value_map, tasks, eid), [\n    custom_value_map,\n    eid,\n    tasks\n  ]);\n\n  return (\n    <Progress multi>\n      {items.map(item => (\n        <Progress\n          key={item.label}\n          bar\n          max={allSum}\n          value={item.total}\n          color={item.style}\n        >\n          {item.label}\n        </Progress>\n      ))}\n    </Progress>\n  );\n};\nconst UserRow = ({\n  item,\n  sums,\n  isPast,\n  total,\n  hpd,\n  tasks\n}: {\n  item: ISortedUser;\n  sums: { [key: string]: { e: number; r: number } };\n  isPast: boolean;\n  total: number;\n  hpd: number;\n  tasks: ITask[];\n}) => {\n  const [customTotal, setTotal] = useState<number>(0);\n  const handleChange = useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>) => {\n      setTotal(Number(e.target.value) || 0);\n    },\n    [setTotal]\n  );\n  const sumItem = _.get(sums, item.id);\n  const e = _.get(sumItem, \"e\");\n  const r = _.get(sumItem, \"r\");\n  const margedTotal = customTotal || total;\n  const totalStr = String(margedTotal);\n  return (\n    <tr key={item.id}>\n      {total > 0 ? (\n        <>\n          <NameAndWorkLoad\n            username={item.username}\n            val={e}\n            total={margedTotal}\n            imgSrc={item.photo}\n          />\n          <td className=\"text-right\">{total}</td>\n          <td className={styles.custom_input_td}>\n            <Input\n              bsSize=\"sm\"\n              type=\"number\"\n              className=\"text-right\"\n              value={totalStr}\n              step={hpd}\n              onChange={handleChange}\n            />\n          </td>\n        </>\n      ) : (\n          <>\n            <td>\n              <AvatarSquare src={item.photo} />\n              <Link to={`/users/${item.id}`}>{item.username}</Link>\n            </td>\n            <td className=\"text-right\">{item.closed || \"\"}</td>\n            <td className=\"text-right\">{e}</td>\n            <td className=\"text-right\">{r}</td>\n            <td>{_.isNumber(e) && <TaskProgress tasks={tasks} />}</td>\n          </>\n        )}\n\n      {isPast ? (\n        <td>\n          <Medal e={e} r={r} />\n        </td>\n      ) : null}\n    </tr>\n  );\n};\nexport const getTaskSumByUser = (\n  items: ITask[],\n  custom_value_map: ICustomValueMap,\n  custom_eid: string,\n  custom_rid: string\n) => {\n  const eid = Number(custom_eid);\n  const rid = Number(custom_rid);\n  const tasksByUser = _.mapValues(getTasksByUser(items), tasks =>\n    _.chain(tasks)\n      .map(task => ({\n        e: getCustomVal(custom_value_map, task, eid),\n        r: getCustomVal(custom_value_map, task, rid)\n      }))\n      .reduce((result, val) => ({ e: result.e + val.e, r: result.r + val.r }), {\n        e: 0,\n        r: 0\n      })\n      .value()\n  );\n  return tasksByUser;\n};\nexport const UserTasks = () => {\n  const {\n    state: {\n      tasks,\n      custom_value_map,\n      custom_eid,\n      custom_rid,\n      biz_days,\n      custom_attr_e,\n      custom_attr_r,\n      project: { members }\n    }\n  } = useContext(RootContext);\n  const [hpd, setHpd] = useState<number>(0);\n  const activeLen = biz_days.length - 1;\n  const handleChange = useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>) => {\n      setHpd(Number(e.target.value) || 0);\n    },\n    [setHpd]\n  );\n  const total = hpd * activeLen;\n  const taskSumByUser = useMemo(\n    () => getTaskSumByUser(tasks, custom_value_map, custom_eid, custom_rid),\n    [custom_eid, custom_rid, custom_value_map, tasks]\n  );\n  const notAssignedSum = _.get(taskSumByUser, \"null.e\", 0);\n  const isPlanning = total > 0;\n  const isPast = useMemo(\n    () =>\n      !isPlanning &&\n      moment().diff(\n        moment(_.last(biz_days))\n          .local()\n          .endOf(\"days\")\n      ) > 0,\n    [biz_days, isPlanning]\n  );\n  const tasksByUser = useMemo(() => getTasksByUser(tasks), [tasks]);\n  const sortedMembers = useMemo(\n    () =>\n      _.chain(members)\n        .map(member => ({\n          ...member,\n          closed: getSumCustomValClosed(\n            custom_value_map,\n            tasksByUser[member.id] || [],\n            Number(custom_eid)\n          )\n        }))\n        .sortBy(\"closed\")\n        .reverse()\n        .value(),\n    [custom_eid, custom_value_map, members, tasksByUser]\n  );\n  if (!custom_attr_e.id || !custom_attr_r.id || biz_days.length <= 1) {\n    return null;\n  }\n  return (\n    <>\n      <Navbar color=\"light\" light>\n        <Form inline={true} className=\"mr-auto\" onSubmit={preventDefault}>\n          <InputGroup>\n            <Input\n              type=\"number\"\n              step=\"0.5\"\n              placeholder=\"hours / day\"\n              className=\"text-right\"\n              onChange={handleChange}\n            />\n            <InputGroupAddon addonType=\"append\">\n              <InputGroupText>\n                <FontAwesomeIcon className=\"mx-2\" icon={faTimes} />\n                {activeLen} [days]\n                <FontAwesomeIcon className=\"mx-2\" icon={faEquals} />\n              </InputGroupText>\n              {total > 0 ? (\n                <>\n                  <InputGroupText className=\"bg-white\">\n                    <strong>{total}</strong>\n                  </InputGroupText>\n                  <InputGroupText>hours / sprint</InputGroupText>\n                </>\n              ) : null}\n            </InputGroupAddon>\n          </InputGroup>\n        </Form>\n        <SignInForm />\n        <UpdateButton />\n      </Navbar>\n      <Table bordered>\n        <thead>\n          <tr>\n            <th>Name</th>\n            {!isPlanning && <th className=\"text-success\">Completed</th>}\n            <th>{custom_attr_e.name}</th>\n            {isPlanning ? (\n              <>\n                <th>Total</th> <th>Custom</th>\n              </>\n            ) : (\n                <>\n                  <th>{custom_attr_r.name}</th>\n                  <th>Progress</th>\n                </>\n              )}\n            {isPast ? <th>Grade</th> : null}\n          </tr>\n        </thead>\n        <tbody>\n          {(sortedMembers || []).map(item => (\n            <UserRow\n              key={item.id}\n              isPast={isPast}\n              item={item}\n              sums={taskSumByUser}\n              total={total}\n              hpd={hpd}\n              tasks={tasksByUser[item.id] || []}\n            />\n          ))}\n          <tr key=\"null\">\n            <td className=\"text-danger\">\n              <FontAwesomeIcon icon={faGhost} className=\"ml-1 mr-2 fa-lg\" />\n              Not assigned\n            </td>\n            {!isPlanning && <td />}\n            <td className=\"text-right text-danger\">{notAssignedSum}</td>\n            <td />\n            <td />\n            {isPast ? <td /> : null}\n          </tr>\n        </tbody>\n      </Table>\n    </>\n  );\n};\n","import React, { useState, useCallback, useEffect } from \"react\";\nimport {\n  Form,\n  InputGroupAddon,\n  InputGroup,\n  InputGroupText,\n  Button,\n  Input\n} from \"reactstrap\";\nimport { InputGroupSpinner } from \"../InputGroupSpinner\";\nimport { Switch } from \"@rmwc/switch\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faCloudUploadAlt,\n  faEdit,\n  faHandPointRight\n} from \"@fortawesome/free-solid-svg-icons\";\nimport styles from \"./ToggleNumberInput.module.css\";\ninterface ToggleNumberInputProps {\n  label: string;\n  value: number;\n  onSubmit?: (value: number) => void;\n  onEditable?: (value: boolean) => void;\n  onValueChange?: (value: number) => void;\n  valid?: boolean;\n  invalid?: boolean;\n  disabled?: boolean;\n  loading?: boolean;\n  id?: string;\n  submitting?: boolean;\n  disabledMessage?: string;\n}\nexport const ToggleNumberInput: React.FC<ToggleNumberInputProps> = ({\n  label,\n  value,\n  onSubmit,\n  onEditable,\n  onValueChange,\n  valid,\n  invalid,\n  disabled,\n  loading,\n  id,\n  submitting,\n  disabledMessage = \"\"\n}) => {\n  const [checked, setChecked] = useState(false);\n  const [val, setVal] = useState(\"\");\n  const [running, setRunning] = useState(false);\n  const onChange = useCallback(\n    (evt: React.FormEvent<any>) => {\n      setChecked(evt.currentTarget.checked);\n    },\n    [setChecked]\n  );\n  const handleVal = useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>) => {\n      const { value } = e.target;\n      setVal(value);\n      onValueChange && onValueChange(Number(value));\n    },\n    [onValueChange]\n  );\n  const handleSubmit = useCallback(\n    (e: React.FormEvent) => {\n      const num = Number(val);\n      if (checked && val !== \"\" && num >= 0 && onSubmit) {\n        onSubmit(num);\n        setChecked(false);\n        setRunning(true);\n      }\n      e.preventDefault();\n    },\n    [checked, val, onSubmit, setChecked]\n  );\n  useEffect(() => {\n    if (disabled) {\n      setChecked(false);\n    }\n  }, [setChecked, disabled]);\n  useEffect(() => {\n    setRunning(false);\n  }, [value]);\n  useEffect(() => {\n    onEditable && onEditable(checked);\n  }, [checked, onEditable]);\n  useEffect(() => {\n    if (submitting) {\n      setChecked(false);\n      setRunning(true);\n    }\n  }, [submitting]);\n  useEffect(() => {\n    if (loading) {\n      setChecked(false);\n    }\n  }, [loading]);\n  return (\n    <Form inline onSubmit={handleSubmit}>\n      <InputGroup className={styles.input_group}>\n        <InputGroupAddon addonType=\"prepend\">{label}</InputGroupAddon>\n        {loading ? (\n          <InputGroupSpinner />\n        ) : (\n          <>\n            {checked ? (\n              <>\n                <InputGroupAddon addonType=\"prepend\">\n                  <InputGroupText>{value}</InputGroupText>\n                </InputGroupAddon>\n                <InputGroupAddon addonType=\"prepend\">\n                  <InputGroupText>\n                    <FontAwesomeIcon\n                      className=\"text-info\"\n                      icon={faHandPointRight}\n                    />\n                  </InputGroupText>\n                </InputGroupAddon>\n                <Input\n                  onInput={handleVal}\n                  onChange={handleVal}\n                  defaultValue={String(value)}\n                  type=\"number\"\n                  step=\"0.5\"\n                  min=\"0\"\n                  id={id}\n                />\n                <InputGroupAddon addonType=\"append\">\n                  <Button color=\"info\">\n                    <FontAwesomeIcon icon={faCloudUploadAlt} />\n                  </Button>\n                </InputGroupAddon>\n              </>\n            ) : (\n              <>\n                {running ? (\n                  <InputGroupSpinner />\n                ) : (\n                  <Input\n                    valid={valid}\n                    invalid={invalid}\n                    readOnly\n                    value={value}\n                    className=\"text-right\"\n                  />\n                )}\n              </>\n            )}\n            <InputGroupAddon\n              addonType=\"append\"\n              title={disabled ? disabledMessage : \"\"}\n            >\n              <Switch disabled={disabled} checked={checked} onChange={onChange}>\n                <FontAwesomeIcon className=\"text-info\" icon={faEdit} />\n              </Switch>\n            </InputGroupAddon>\n          </>\n        )}\n      </InputGroup>\n    </Form>\n  );\n};\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 =\n/*#__PURE__*/\nReact.createElement(\"g\", null, React.createElement(\"path\", {\n  fill: \"currentColor\",\n  className: \"leaf\",\n  d: \"M115.343,123.839c0.814,1.256,3.343,2.605,7.23,4.014c7.586-1.069,14.943-1.586,21.885-1.586 c15.579,0,30.166,2.469,42.438,7.145c17.87-5.567,43.412-11.694,69.108-11.694c25.694,0,51.228,6.126,69.108,11.694 c12.262-4.676,26.848-7.145,42.42-7.145c7.001,0,14.418,0.518,22.063,1.604c3.471-1.341,6.296-2.699,8.325-4.031 c42.2-28.139,53.036-81.183,47.41-69.931c-4.218,8.418-60.309,35.581-100.004,52.222c14.68-17.769,31.677-44.134,43.438-80.309 c0,0-60.978,52.382-98.867,74.887c-11.974-20.816-33.892-86.589-33.892-86.589s-18.567,49.515-20.358,81.412 c-30.21-16.929-63.354-51.474-72.485-74.538c-10.752-27.189-13.78,53.545,15.436,89.396c-1.095,0.162-2.206,0.315-3.344,0.476 c-39.111-16.072-100.454-47.91-104.926-54.86C64.708,47.255,73.143,101.954,115.343,123.839z M290.531,107.181l0.747,0.857 l-3.098-0.746L290.531,107.181z\"\n}), React.createElement(\"path\", {\n  fill: \"currentColor\",\n  className: \"tomato\",\n  d: \"M485.83,198.564c-38.169-57.253-117.544-70.584-160.338-52.195c-18.27-5.906-43.872-12.27-69.49-12.27 c-25.619,0-51.228,6.364-69.499,12.27c-42.794-18.388-122.168-5.058-160.338,52.195c-64.136,96.203-18.711,299.318,229.836,299.318 C504.541,497.882,549.974,294.767,485.83,198.564z M101.172,262.929c-17.099,0-30.947-13.857-30.947-30.948 c0-17.09,13.848-30.947,30.947-30.947c17.082,0,30.947,13.857,30.947,30.947C132.119,249.071,118.253,262.929,101.172,262.929z\"\n}));\n\nvar SvgTomato = function SvgTomato(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return React.createElement(\"svg\", _extends({\n    id: \"_x32_\",\n    x: \"0px\",\n    y: \"0px\",\n    viewBox: \"0 0 512 512\",\n    xmlSpace: \"preserve\",\n    ref: svgRef\n  }, props), title ? React.createElement(\"title\", null, title) : null, _ref2);\n};\n\nvar ForwardRef = React.forwardRef(function (props, ref) {\n  return React.createElement(SvgTomato, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/tomato.998f40c5.svg\";\nexport { ForwardRef as ReactComponent };","import React from \"react\";\nimport { ReactComponent as TomatoIcon } from \"../tomato.svg\";\nimport classNames from \"classnames\";\nimport styles from \"./Tomato.module.css\";\nexport enum TomatoState {\n  FRESH = \"fresh\",\n  STALE = \"stale\"\n}\ninterface TomatoProps {\n  state?: TomatoState;\n  bl?: boolean;\n  br?: boolean;\n}\nexport const Tomato: React.FC<TomatoProps> = ({ state, bl,br }) => {\n  return (\n    <TomatoIcon\n      className={classNames(\"fa-fw\", \"svg-inline--fa\", {\n        [styles.fresh]: state === TomatoState.FRESH,\n        [styles.stale]: state === TomatoState.STALE,\n        [styles.bl]: bl,\n        [styles.br]: br,\n      })}\n    />\n  );\n};\n","import React,{  useContext,useCallback } from \"react\";\nimport { TaskItemProps } from \"../UserStory\";\nimport { RootContext } from \"../../Provider\";\nimport {ActionTypes  } from \"../../actions\";\nimport { TimerState, TimerMode,timer } from \"../../util/timer\";\nimport { Button } from \"reactstrap\";\nimport classNames from \"classnames\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPause, faPlay } from \"@fortawesome/free-solid-svg-icons\";\nimport { Tomato } from \"../Tomato\";\nimport styles from \"./TaskTimerButton.module.css\";\nexport const TaskTimerButton: React.FC<TaskItemProps> = ({ item }) => {\n  const {\n    state: { task_id, pomodoro_mode, pomodoro_state },\n    dispatch\n  } = useContext(RootContext);\n  const handleStart = useCallback(() => {\n    if (Number(task_id) !== item.id) {\n      dispatch({\n        type: ActionTypes.SET_TASK_ID,\n        payload: { task_id: String(item.id) }\n      });\n    }\n    if (pomodoro_state === TimerState.STOPPED) {\n      timer.changeMode(TimerMode.FOCUS, true);\n    } else {\n      if (pomodoro_mode === TimerMode.FOCUS) {\n        timer.resume();\n      } else {\n        timer.changeMode(TimerMode.FOCUS, true);\n      }\n    }\n  }, [dispatch, item.id, pomodoro_mode, pomodoro_state, task_id]);\n  const handlePause = useCallback(() => {\n    timer.pause();\n  }, []);\n  if (Number(task_id) === item.id) {\n    if (\n      pomodoro_mode === TimerMode.FOCUS &&\n      pomodoro_state === TimerState.RUNNING\n    ) {\n      return (\n        <Button\n          className={classNames(\"mr-2\", styles.btn)}\n          color=\"danger\"\n          onClick={handlePause}\n        >\n          <FontAwesomeIcon icon={faPause} />\n          <Tomato />\n        </Button>\n      );\n    } else {\n      return (\n        <Button\n          onClick={handleStart}\n          color=\"primary\"\n          className={classNames(\"mr-2\", styles.btn)}\n        >\n          <FontAwesomeIcon icon={faPlay} />\n          <Tomato />\n        </Button>\n      );\n    }\n  } else if (task_id === \"\") {\n    if (\n      pomodoro_mode === TimerMode.FOCUS &&\n      pomodoro_state !== TimerState.STOPPED\n    ) {\n      return null;\n    } else {\n      return (\n        <Button onClick={handleStart} color=\"primary\" \n          className={classNames(\"mr-2\", styles.btn)}\n        >\n          <FontAwesomeIcon icon={faPlay} />\n          <Tomato />\n        </Button>\n      );\n    }\n  } else {\n    return null;\n  }\n};","import React from \"react\";\nimport { InputGroup, InputGroupAddon, Input } from \"reactstrap\";\nimport { InputGroupSpinner } from \"../InputGroupSpinner\";\ninterface OwnProp {\n  label: string;\n  value: number;\n  loading?: boolean;\n  size?: string;\n  invalid?: boolean;\n  valid?: boolean;\n}\nexport const InputGroupDisplayNumber: React.FC<OwnProp> = ({\n  label,\n  value,\n  loading,\n  size,\n  invalid,\n  valid\n}) => {\n  return (\n    <InputGroup size={size} className=\"my-n1\">\n      <InputGroupAddon addonType=\"prepend\">{label}</InputGroupAddon>\n      {loading ? (\n        <InputGroupSpinner />\n      ) : (\n        <Input\n          invalid={invalid}\n          valid={valid}\n          readOnly\n          value={value}\n          className=\"text-right\"\n        />\n      )}\n    </InputGroup>\n  );\n};\n","import React, {\n  useContext,\n  useState,\n  useCallback,\n  useEffect,\n  useMemo\n} from \"react\";\nimport {\n  Button,\n  ButtonGroup,\n  Card,\n  CardHeader,\n  Collapse,\n  Row,\n  Col,\n  InputGroup,\n  InputGroupAddon,\n  UncontrolledDropdown,\n  DropdownToggle,\n  DropdownItem,\n  DropdownMenu,\n  Spinner,\n  Popover,\n  PopoverHeader,\n  PopoverBody,\n  Badge\n} from \"reactstrap\";\nimport { ToggleNumberInput } from \"./common/ToggleNumberInput\";\nimport classNames from \"classnames\";\nimport { TaskTimerButton } from \"./task/TaskTimerButton\";\nimport { InputGroupDisplayNumber } from \"./common/InputGroupDisplayNumber\";\nimport { useSettingSelector } from \"../features/setting/settingSlice\";\nimport {\n  ITasksByUserStory,\n  ITask,\n  ITaskStatus,\n  IUserStoryExtraInfo,\n  IProjectExtraInfo,\n  IUser\n} from \"../store\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faExternalLinkAlt,\n  faCloudUploadAlt,\n  faUserTimes,\n  faPlus,\n  faMinus,\n  faEraser,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { RootContext } from \"../Provider\";\nimport { Tomato, TomatoState } from \"./Tomato\";\nimport {\n  getCustomVal,\n  getCustomValVersion,\n  isCustomValInvalid,\n  isCustomValValid,\n  Medal,\n  AvatarSquare,\n  getSumCustomVal\n} from \"./task/UserTasks\";\nimport { ToggleIcon } from \"./Controller\";\nimport ListGroup from \"reactstrap/lib/ListGroup\";\nimport ListGroupItem from \"reactstrap/lib/ListGroupItem\";\nimport styles from \"./UserStory.module.css\";\nimport InputGroupText from \"reactstrap/lib/InputGroupText\";\nimport { ActionTypes } from \"../actions\";\nimport _ from \"lodash\";\nimport { stopPropagation } from \"../util/handler\";\nexport const convToTasksByUserStory = (tasks: ITask[]) =>\n  _.chain(tasks)\n    .groupBy(\"user_story\")\n    .map((items, key) => ({\n      user_story: Number(key),\n      user_story_extra_info: items[0].user_story_extra_info,\n      project_extra_info: items[0].project_extra_info,\n      tasks: items,\n      is_closed: items.every(task => task.is_closed)\n    }))\n    .value();\nconst AuthMsg = \"Need sign in!\";\nconst needAuthMsg = (disabled: boolean | undefined) =>\n  disabled ? AuthMsg : \"\";\nconst UserStoryLink = ({\n  user_story_extra_info,\n  project_extra_info\n}: {\n  user_story_extra_info: IUserStoryExtraInfo;\n  project_extra_info: IProjectExtraInfo;\n}) => {\n  const url = useSettingSelector.useUrl()\n  const { slug } = project_extra_info;\n  const usName = user_story_extra_info\n    ? `#${user_story_extra_info.ref} ${user_story_extra_info.subject}`\n    : undefined;\n  const href = user_story_extra_info\n    ? `${url}/project/${slug}/us/${user_story_extra_info.ref}`\n    : \"#\";\n\n  if (usName) {\n    return (\n      <a\n        href={href}\n        onClick={stopPropagation}\n        target=\"_blank\"\n        rel=\"noopener noreferrer\"\n        title={usName}\n      >\n        <FontAwesomeIcon icon={faExternalLinkAlt} /> {usName}\n      </a>\n    );\n  } else {\n    return <>(Unassigned tasks)</>;\n  }\n};\n\nconst TaskLink = ({ item }: { item: ITask }) => {\n  const url = useSettingSelector.useUrl()\n  const taskName = `#${item.ref} ${item.subject}`;\n  const href = `${url}/project/${item.project_extra_info.slug}/task/${item.ref}`;\n  return (\n    <a href={href} target=\"_blank\" rel=\"noopener noreferrer\" title={taskName}>\n      <FontAwesomeIcon icon={faExternalLinkAlt} /> {taskName}\n    </a>\n  );\n};\n\ninterface GradeProps {\n  e: number;\n  r: number;\n}\nexport const Grade: React.FC<GradeProps> = ({ e, r }) => {\n  return (\n    <InputGroup className={styles.display_medal}>\n      <InputGroupAddon addonType=\"prepend\">Grade</InputGroupAddon>\n      <InputGroupText className={styles.medal}>\n        <Medal e={e} r={r} />\n      </InputGroupText>\n    </InputGroup>\n  );\n};\n\ninterface TaskStatusItemProps {\n  item: ITaskStatus;\n  task: ITask;\n  onSelect?: (id: number) => void;\n}\nconst TaskStatusItem: React.FC<TaskStatusItemProps> = ({\n  item,\n  task,\n  onSelect\n}) => {\n  const { dispatch } = useContext(RootContext);\n  const handleClick = useCallback(() => {\n    dispatch({\n      type: ActionTypes.PATCH_TASK,\n      payload: {\n        key: \"status\",\n        value: item.id,\n        id: task.id\n      }\n    });\n    onSelect && onSelect(item.id);\n  }, [dispatch, item.id, task.id, onSelect]);\n  return <DropdownItem onClick={handleClick}>{item.name}</DropdownItem>;\n};\ninterface TaskStatusSelectorProps {\n  task: ITask;\n  disabled?: boolean;\n}\nconst TaskStatusSelector: React.FC<TaskStatusSelectorProps> = ({\n  task,\n  disabled\n}) => {\n  const [loading, setLoading] = useState<boolean>(false);\n  const {\n    state: { active_task_statuses }\n  } = useContext(RootContext);\n  const handleSelect = useCallback(() => {\n    setLoading(true);\n  }, [setLoading]);\n  useEffect(() => {\n    setLoading(false);\n  }, [task.version, setLoading]);\n  return (\n    <>\n      {loading ? (\n        <Spinner type=\"grow\" color=\"info\" />\n      ) : (\n          <UncontrolledDropdown>\n            <DropdownToggle\n              title={needAuthMsg(disabled)}\n              disabled={disabled}\n              caret={!disabled}\n            >\n              {task.status_extra_info.name}\n            </DropdownToggle>\n            <DropdownMenu>\n              {active_task_statuses.map(item => (\n                <TaskStatusItem\n                  item={item}\n                  key={item.id}\n                  task={task}\n                  onSelect={handleSelect}\n                />\n              ))}\n            </DropdownMenu>\n          </UncontrolledDropdown>\n        )}\n    </>\n  );\n};\ninterface UserItemProps {\n  item: IUser;\n  onSelect?: (id: number) => void;\n}\nconst UserItem: React.FC<UserItemProps> = ({ item, onSelect }) => {\n  const handleClick = useCallback(() => {\n    onSelect && onSelect(item.id);\n  }, [item.id, onSelect]);\n  return (\n    <DropdownItem onClick={handleClick}>\n      <AvatarSquare src={item.photo} />\n      {item.username}\n    </DropdownItem>\n  );\n};\ninterface TaskUserSelectorProps {\n  task: ITask;\n  disabled?: boolean;\n}\nexport const TaskUserSelector: React.FC<TaskUserSelectorProps> = ({\n  task,\n  disabled\n}) => {\n  const [loading, setLoading] = useState<boolean>(false);\n  const {\n    state: {\n      project: { members }\n    },\n    dispatch\n  } = useContext(RootContext);\n  const handleSelect = useCallback(\n    (id: number) => {\n      setLoading(true);\n      dispatch({\n        type: ActionTypes.PATCH_TASK,\n        payload: {\n          key: \"assigned_to\",\n          value: id,\n          id: task.id\n        }\n      });\n    },\n    [dispatch, task.id]\n  );\n  useEffect(() => {\n    setLoading(false);\n  }, [task.version, setLoading]);\n  return (\n    <>\n      {loading ? (\n        <Spinner type=\"grow\" color=\"info\" />\n      ) : (\n          <UncontrolledDropdown>\n            <DropdownToggle\n              title={needAuthMsg(disabled)}\n              size=\"sm\"\n              disabled={disabled}\n              caret={!disabled}\n            >\n              Assign To\n          </DropdownToggle>\n            <DropdownMenu>\n              {(members || []).map(item => (\n                <UserItem item={item} onSelect={handleSelect} key={item.id} />\n              ))}\n            </DropdownMenu>\n          </UncontrolledDropdown>\n        )}\n    </>\n  );\n};\ninterface NotAssignedButtonProps {\n  task: ITask;\n}\nconst NotAssignedButton: React.FC<NotAssignedButtonProps> = ({ task }) => {\n  const [loading, setLoading] = useState<boolean>(false);\n  const { dispatch } = useContext(RootContext);\n  const handleClick = useCallback(() => {\n    setLoading(true);\n    dispatch({\n      type: ActionTypes.PATCH_TASK,\n      payload: {\n        key: \"assigned_to\",\n        value: null,\n        id: task.id\n      }\n    });\n  }, [dispatch, task.id]);\n  useEffect(() => {\n    setLoading(false);\n  }, [task.version, setLoading]);\n  return (\n    <>\n      {loading ? (\n        <Spinner type=\"grow\" color=\"danger\" />\n      ) : (\n          <Button\n            className=\"mr-2\"\n            title=\"Not assigned\"\n            color=\"danger\"\n            onClick={handleClick}\n          >\n            <FontAwesomeIcon icon={faUserTimes} />\n          </Button>\n        )}\n    </>\n  );\n};\ninterface CustomValueInputProps {\n  item: ITask;\n}\n\nconst EstimateInput: React.FC<CustomValueInputProps> = ({ item }) => {\n  const {\n    state: { custom_eid, custom_value_map, auth_token, custom_attr_e },\n    dispatch\n  } = useContext(RootContext);\n  const version = getCustomValVersion(custom_value_map, item);\n  const handleSubmit = useCallback(\n    (value: number) => {\n      if (version) {\n        dispatch({\n          type: ActionTypes.PATCH_CUSTOM_VALUE,\n          payload: {\n            id: item.id,\n            key: custom_eid,\n            value,\n            version\n          }\n        });\n      }\n    },\n    [dispatch, item.id, custom_eid, version]\n  );\n  const e = useMemo(\n    () => getCustomVal(custom_value_map, item, custom_attr_e.id),\n    [custom_attr_e.id, custom_value_map, item]\n  );\n  if (!custom_attr_e.id) {\n    return null;\n  }\n  const unEstimated = !e;\n  const disabled = auth_token === \"\";\n  const loading = !version;\n\n  return (\n    <ToggleNumberInput\n      onSubmit={handleSubmit}\n      label={custom_attr_e.name}\n      value={e}\n      invalid={unEstimated}\n      disabled={disabled}\n      loading={loading}\n      disabledMessage={AuthMsg}\n    />\n  );\n};\nconst ResultInput: React.FC<CustomValueInputProps> = ({ item }) => {\n  const [isOpen, setIsOpen] = useState(false);\n  const [used_number, set_used_number] = useState(0);\n  const [editable, setEditable] = useState(false);\n  const [submitting, setSubmitting] = useState(false);\n  const {\n    state: {\n      custom_rid,\n      custom_value_map,\n      custom_attr_e,\n      custom_attr_r,\n      auth_token,\n      pomodoro_number,\n      pomodoro_used_number\n    },\n    dispatch\n  } = useContext(RootContext);\n  const version = getCustomValVersion(custom_value_map, item);\n  const handleToggle = useCallback(() => {\n    setIsOpen(!isOpen);\n  }, [isOpen]);\n  const handleSubmit = useCallback(\n    (value: number, used_number?: number) => {\n      const update_status = value > 0;\n      const use_pomodoro = used_number ? { used_number } : undefined;\n      if (version) {\n        dispatch({\n          type: ActionTypes.PATCH_CUSTOM_VALUE,\n          payload: {\n            id: item.id,\n            key: custom_rid,\n            value,\n            version\n          },\n          meta: { use_pomodoro, update_status }\n        });\n        setSubmitting(true);\n      }\n    },\n    [custom_rid, dispatch, item.id, version]\n  );\n  const handlePluse = useCallback(() => {\n    set_used_number(used_number + 1);\n  }, [used_number]);\n  const handleMinus = useCallback(() => {\n    set_used_number(used_number - 1);\n  }, [used_number]);\n\n  const handleReset = useCallback(() => {\n    set_used_number(0);\n  }, []);\n  const handleEditable = useCallback((val: boolean) => {\n    setEditable(val);\n  }, []);\n  const e = useMemo(\n    () => getCustomVal(custom_value_map, item, custom_attr_e.id),\n    [custom_attr_e.id, custom_value_map, item]\n  );\n  const r = useMemo(\n    () => getCustomVal(custom_value_map, item, custom_attr_r.id),\n    [custom_attr_r.id, custom_value_map, item]\n  );\n  const handleValueChange = useCallback(\n    (val: number) => {\n      setEditable(r === val);\n    },\n    [r]\n  );\n  const handleUsePomodoro = useCallback(() => {\n    const result = r + used_number / 2;\n    handleSubmit(result, used_number);\n    setIsOpen(false);\n    set_used_number(0);\n  }, [handleSubmit, r, used_number]);\n\n  const valid = useMemo(() => isCustomValValid(e, r, item.is_closed), [\n    e,\n    item.is_closed,\n    r\n  ]);\n  const invalid = useMemo(() => isCustomValInvalid(e, r), [e, r]);\n  useEffect(() => {\n    if (!version) {\n      setSubmitting(false);\n    }\n  }, [version]);\n  useEffect(() => {\n    set_used_number(0);\n  }, [pomodoro_used_number]);\n  if (!custom_attr_r.id) {\n    return null;\n  }\n\n  const disabled = auth_token === \"\";\n  const loading = !version;\n  const elId = `rusult-input-${item.id}`;\n  const usableNumber = pomodoro_number - pomodoro_used_number;\n  const submittable = used_number > 0;\n  const isMax = used_number === usableNumber;\n  return (\n    <>\n      <ToggleNumberInput\n        onSubmit={handleSubmit}\n        onEditable={handleEditable}\n        onValueChange={handleValueChange}\n        label={custom_attr_r.name}\n        value={r}\n        valid={valid}\n        invalid={invalid}\n        disabled={disabled}\n        loading={loading}\n        id={elId}\n        submitting={submitting}\n      />\n      {editable && usableNumber > 0 && (\n        <Popover\n          className={classNames(\"popover-wide\")}\n          target={elId}\n          placement=\"top\"\n          isOpen={isOpen}\n          toggle={handleToggle}\n          trigger=\"click hover\"\n        >\n          <PopoverHeader>Pomodoro</PopoverHeader>\n          <PopoverBody>\n            <ButtonGroup>\n              <Button disabled={isMax} onClick={handlePluse}>\n                <FontAwesomeIcon icon={faPlus} />\n              </Button>\n              <Button disabled={!submittable} onClick={handleMinus}>\n                <FontAwesomeIcon icon={faMinus} />\n              </Button>\n              <Button disabled className=\"bg-light\">\n                {_.times(usableNumber).map(i => (\n                  <Tomato\n                    key={i}\n                    state={\n                      i >= used_number ? TomatoState.FRESH : TomatoState.STALE\n                    }\n                  />\n                ))}\n              </Button>\n              <Button disabled={!submittable} onClick={handleUsePomodoro}>\n                <FontAwesomeIcon icon={faCloudUploadAlt} />\n              </Button>\n              <Button disabled={!submittable} onClick={handleReset}>\n                <FontAwesomeIcon icon={faEraser} />\n              </Button>\n            </ButtonGroup>\n          </PopoverBody>\n        </Popover>\n      )}\n    </>\n  );\n};\nexport interface TaskItemProps {\n  item: ITask;\n}\n\nexport const TaskItem: React.FC<TaskItemProps> = ({ item }) => {\n  const {\n    state: { custom_value_map, custom_attr_e, custom_attr_r, auth_token }\n  } = useContext(RootContext);\n  const version = useMemo(() => getCustomValVersion(custom_value_map, item), [\n    custom_value_map,\n    item\n  ]);\n  const e = useMemo(\n    () => getCustomVal(custom_value_map, item, custom_attr_e.id),\n    [custom_attr_e.id, custom_value_map, item]\n  );\n  const r = useMemo(\n    () => getCustomVal(custom_value_map, item, custom_attr_r.id),\n    [custom_attr_r.id, custom_value_map, item]\n  );\n  if (!custom_attr_e.id || !custom_attr_r.id) {\n    return null;\n  }\n\n  const disabled = auth_token === \"\";\n  const loading = !version;\n  const inactive = r === 0 && !item.is_closed && !disabled && !loading;\n  return (\n    <ListGroupItem\n      className={classNames({ [styles.is_closed]: item.is_closed })}\n    >\n      <div className=\"d-flex mb-1\">\n        <div className=\"mr-auto text-truncate\">\n          <TaskLink item={item} />\n        </div>\n        {inactive && <NotAssignedButton task={item} />}\n        <TaskTimerButton item={item} />\n        <TaskStatusSelector task={item} disabled={disabled} />\n      </div>\n      <Row>\n        <Col>\n          <EstimateInput item={item} />\n        </Col>\n        <Col>\n          <ResultInput item={item} />\n        </Col>\n        <Col>\n          <Grade e={e} r={r} />\n        </Col>\n      </Row>\n    </ListGroupItem>\n  );\n};\ninterface UserStoryProps {\n  item: ITasksByUserStory;\n  tags?: string[]\n}\nexport const UserStoryWithEstimate: React.FC<UserStoryProps> = ({ item }) => {\n  return (\n    <Card>\n      <CardHeader className=\"text-truncate\">\n        <UserStoryLink\n          user_story_extra_info={item.user_story_extra_info}\n          project_extra_info={item.project_extra_info}\n        />\n      </CardHeader>\n      <ListGroup>\n        {item.tasks.map(task => (\n          <ListGroupItem key={task.id} className=\"text-truncate\">\n            <div className=\"d-flex\">\n              <div className=\"mr-auto text-truncate\">\n                <TaskLink item={task} />\n              </div>\n              <EstimateInput item={task} />\n            </div>\n          </ListGroupItem>\n        ))}\n      </ListGroup>\n    </Card>\n  );\n};\nexport const UserStoryWithTaskUser: React.FC<UserStoryProps> = ({ item }) => {\n  const {\n    state: { auth_token }\n  } = useContext(RootContext);\n  const disabled = auth_token === \"\";\n  return (\n    <Card>\n      <CardHeader className=\"text-truncate\">\n        <UserStoryLink\n          user_story_extra_info={item.user_story_extra_info}\n          project_extra_info={item.project_extra_info}\n        />\n      </CardHeader>\n      <Collapse isOpen={true}>\n        <ListGroup>\n          {item.tasks.map(task => (\n            <ListGroupItem key={task.id}>\n              <div className=\"d-flex\">\n                <div className=\"mr-auto text-truncate\">\n                  <TaskLink item={task} />\n                </div>\n                <TaskUserSelector task={task} disabled={disabled} />\n              </div>\n            </ListGroupItem>\n          ))}\n        </ListGroup>\n      </Collapse>\n    </Card>\n  );\n};\n\ninterface TagProps {\n  label: string;\n}\nconst Tag: React.FC<TagProps> = ({ label }) => {\n  return (\n    <Badge color=\"warning\" className=\"mr-1\" title={label} >{label}</Badge>\n  )\n\n}\n\nexport const UserStory: React.FC<UserStoryProps> = ({ item, tags }) => {\n  const [isOpen, setIsOpen] = useState<boolean>(false);\n  const {\n    state: { custom_value_map, custom_attr_e, custom_attr_r }\n  } = useContext(RootContext);\n  const toggle = useCallback(() => {\n    setIsOpen(!isOpen);\n  }, [isOpen, setIsOpen]);\n  useEffect(() => {\n    setIsOpen(!item.is_closed);\n  }, [item.is_closed, setIsOpen]);\n  const e = useMemo(\n    () => getSumCustomVal(custom_value_map, item.tasks, custom_attr_e.id),\n    [custom_attr_e.id, custom_value_map, item.tasks]\n  );\n  const r = useMemo(\n    () => getSumCustomVal(custom_value_map, item.tasks, custom_attr_r.id),\n    [custom_attr_r.id, custom_value_map, item.tasks]\n  );\n  const loading = !custom_value_map.has(item.tasks[0]);\n  return (\n    <Card>\n      <CardHeader\n        className={classNames(styles.header, \"text-truncate\", {\n          \"alert-primary\": item.is_closed\n        })}\n        onClick={toggle}\n      >\n        <Row>\n          <Col xs={12} md={8} className=\"text-truncate\">\n            <ToggleIcon isOpen={isOpen} />\n            <UserStoryLink\n              user_story_extra_info={item.user_story_extra_info}\n              project_extra_info={item.project_extra_info}\n            />\n          </Col>\n          <Col xs={6} md={2}>\n            <InputGroupDisplayNumber\n              label={custom_attr_e.name}\n              loading={loading}\n              value={e}\n              size=\"sm\"\n            />\n          </Col>\n          <Col xs={6} md={2}>\n            <InputGroupDisplayNumber\n              label={custom_attr_r.name}\n              loading={loading}\n              value={r}\n              size=\"sm\"\n            />\n          </Col>\n        </Row>\n        {tags?.map(label => (<Tag label={label} />))}\n      </CardHeader>\n      <Collapse isOpen={isOpen}>\n        <ListGroup>\n          {item.tasks.map(task => (\n            <TaskItem item={task} key={task.id} />\n          ))}\n        </ListGroup>\n      </Collapse>\n    </Card>\n  );\n};\n","import React, { useContext, useMemo } from \"react\";\nimport { RootContext } from \"../Provider\";\nimport { Card, CardHeader, CardBody } from \"reactstrap\";\nimport { getCustomVal, getCustomValVersion } from \"./task/UserTasks\";\nimport { UserStoryWithEstimate, convToTasksByUserStory } from \"./UserStory\";\nexport const UnEstimatedTasks = () => {\n  const {\n    state: { tasks, custom_value_map, custom_eid }\n  } = useContext(RootContext);\n  const eid = useMemo(() => Number(custom_eid), [custom_eid]);\n  const items = useMemo(\n    () =>\n      eid\n        ? tasks.filter(\n            task =>\n              getCustomValVersion(custom_value_map, task) &&\n              getCustomVal(custom_value_map, task, eid) === 0\n          )\n        : [],\n    [custom_value_map, eid, tasks]\n  );\n  const userStories = useMemo(() => convToTasksByUserStory(items), [items]);\n  if (items.length === 0) {\n    return null;\n  } else {\n    return (\n      <Card>\n        <CardHeader className=\"alert-danger\">Un estimated tasks</CardHeader>\n        <CardBody>\n          {userStories.map(item => (\n            <UserStoryWithEstimate item={item} key={item.user_story} />\n          ))}\n        </CardBody>\n      </Card>\n    );\n  }\n};\n","import React, { useContext, useMemo } from \"react\";\nimport _ from \"lodash\";\nimport { RootContext } from \"../Provider\";\nimport { UserStoryWithTaskUser, convToTasksByUserStory } from \"./UserStory\";\nimport { Card, CardHeader, CardBody } from \"reactstrap\";\nexport const NotAssignedTasks: React.FC = () => {\n  const {\n    state: { tasks }\n  } = useContext(RootContext);\n  const items = useMemo(() => _.filter(tasks, { assigned_to: null }), [tasks]);\n  const userStories = useMemo(() => convToTasksByUserStory(items), [items]);\n  if (items.length === 0) {\n    return null;\n  } else {\n    return (\n      <Card>\n        <CardHeader className=\"alert-danger\">Not assigned tasks</CardHeader>\n        <CardBody>\n          {userStories.map(item => (\n            <UserStoryWithTaskUser item={item} key={item.user_story} />\n          ))}\n        </CardBody>\n      </Card>\n    );\n  }\n};\n","import React, { useCallback } from \"react\";\nimport { UncontrolledButtonDropdown, DropdownToggle, DropdownMenu, DropdownItem } from \"reactstrap\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faLevelDownAlt,\n  faLevelUpAlt,\n} from \"@fortawesome/free-solid-svg-icons\";\nexport type ChartType = \"Burn up\" | \"Burn down\"\ninterface ChartTypeItemProps {\n  type: ChartType;\n}\n\nconst ChartTypeItem: React.FC<ChartTypeItemProps> = ({ type }) => {\n  const icon = type === \"Burn down\" ? faLevelDownAlt : faLevelUpAlt;\n  return (\n    <span>\n      {type}\n      <FontAwesomeIcon className=\"fa-fw\" icon={icon} />\n    </span>\n  );\n};\ninterface ChartTypeDropdownItemProps extends ChartTypeItemProps {\n  onSelect: (type: ChartType) => void;\n}\nconst ChartTypeDropdownItem: React.FC<ChartTypeDropdownItemProps> = ({\n  type,\n  onSelect\n}) => {\n  const handleClick = useCallback(() => {\n    onSelect(type);\n  }, [onSelect, type]);\n  return (\n    <DropdownItem onClick={handleClick}>\n      <ChartTypeItem type={type} />\n    </DropdownItem>\n  );\n};\n\nexport const ChartTypeSelector: React.FC<ChartTypeDropdownItemProps> = ({ type, onSelect }) => {\n  return (\n    <UncontrolledButtonDropdown>\n      <DropdownToggle size=\"sm\" caret>\n        <ChartTypeItem type={type} />\n      </DropdownToggle>\n      <DropdownMenu>\n        <ChartTypeDropdownItem type=\"Burn up\" onSelect={onSelect} />\n        <ChartTypeDropdownItem type=\"Burn down\" onSelect={onSelect} />\n      </DropdownMenu>\n    </UncontrolledButtonDropdown>\n  )\n}","import React, { useContext, useState, useEffect, useCallback } from \"react\";\nimport {\n  ComposedChart,\n  Tooltip,\n  Line,\n  XAxis,\n  YAxis,\n  Bar,\n  Legend,\n  TooltipFormatter\n} from \"recharts\";\nimport moment from \"moment\";\nimport _ from \"lodash\";\nimport { RootContext } from \"../../Provider\";\nimport { dayNameFromIdx } from \"../DaysSelector\";\nimport { getSumCustomVal } from \"../task/UserTasks\";\nimport { getTaskCreated, getTaskFinished, BurnChartProps, chartSize } from \"./Chart\";\ninterface IChartItem {\n  label: string;\n  ideal: number;\n  completed?: number;\n  result?: number;\n  total: number;\n}\n\nexport const BurnUpChart: React.FC<BurnChartProps> = ({ tasks, size = \"lg\" }) => {\n  const [data, setData] = useState<IChartItem[]>([]);\n  const {\n    state: { biz_days, custom_value_map, custom_eid, custom_rid }\n  } = useContext(RootContext);\n  const { width, height } = chartSize(size)\n  useEffect(() => {\n    const days_len = biz_days.length;\n    const eid = Number(custom_eid);\n    const rid = Number(custom_rid);\n    if (days_len > 0 && tasks.length > 0 && custom_eid && custom_rid) {\n      const allTaskVal = getSumCustomVal(custom_value_map, tasks, eid);\n      const data = biz_days.map((day, idx) => {\n        const label = dayNameFromIdx(day, idx);\n        const ideal = (allTaskVal * idx) / (days_len - 1);\n        const total = getSumCustomVal(\n          custom_value_map,\n          getTaskCreated(tasks, day),\n          eid\n        );\n\n        if (\n          moment()\n            .local()\n            .endOf(\"days\")\n            .diff(moment(day)) > 0\n        ) {\n          const completed = getSumCustomVal(\n            custom_value_map,\n            getTaskFinished(tasks, day),\n            eid\n          );\n          const actual = getSumCustomVal(\n            custom_value_map,\n            getTaskFinished(tasks, day),\n            rid\n          );\n\n          return { label, ideal, completed, actual, total };\n        } else {\n          return { label, ideal, total };\n        }\n      });\n      setData(data);\n    } else {\n      setData([]);\n    }\n  }, [tasks, biz_days, custom_eid, custom_rid, custom_value_map, setData]);\n  const formatter: TooltipFormatter = useCallback(\n    (value, name) => [Number(value).toFixed(1), _.upperFirst(name)],\n    []\n  );\n  if (data.length === 0) {\n    return null;\n  } else {\n    return (\n      <ComposedChart data={data} width={width} height={height}>\n        <YAxis />\n        <XAxis dataKey=\"label\" />\n        <Tooltip formatter={formatter} />\n        {size === \"lg\" &&\n          <Legend formatter={_.upperFirst} />\n        }\n        <Bar dataKey=\"completed\" fill=\"#28a745\" />\n        <Bar dataKey=\"actual\" fill=\"#17a2b8\" />\n        <Line dataKey=\"ideal\" stroke=\"#007bff\" strokeDasharray=\"5 5\" />\n        <Line dataKey=\"total\" stroke=\"#dc3545\" />\n      </ComposedChart>\n    );\n  }\n};\n","import React, { useContext, useState, useEffect, useCallback } from \"react\";\nimport {\n  ComposedChart,\n  Tooltip,\n  Line,\n  XAxis,\n  YAxis,\n  Bar,\n  Legend,\n  TooltipFormatter\n} from \"recharts\";\nimport moment from \"moment\";\nimport _ from \"lodash\";\nimport { RootContext } from \"../../Provider\";\nimport { dayNameFromIdx } from \"../DaysSelector\";\n\nimport { getSumCustomVal } from \"../task/UserTasks\";\nimport { getTaskCreated, getTaskFinished, getTaskCreatedToday, BurnChartProps, chartSize } from \"./Chart\";\ninterface IChartItem {\n  label: string;\n  ideal: number;\n  remaining?: number;\n  add?: number;\n}\n\nexport const BurnDownChart: React.FC<BurnChartProps> = ({ tasks, size = \"lg\" }) => {\n  const [data, setData] = useState<IChartItem[]>([]);\n  const {\n    state: { biz_days, custom_value_map, custom_eid }\n  } = useContext(RootContext);\n  const { width, height } = chartSize(size)\n  useEffect(() => {\n    const days_len = biz_days.length;\n    const eid = Number(custom_eid);\n    if (days_len > 0 && tasks.length > 0 && custom_eid) {\n      const allTaskVal = getSumCustomVal(\n        custom_value_map,\n        getTaskCreated(tasks, biz_days[0]),\n        eid\n      );\n      const data = biz_days.map((day, idx) => {\n        const label = dayNameFromIdx(day, idx);\n        const ideal = allTaskVal - (allTaskVal * idx) / (days_len - 1);\n        if (\n          moment()\n            .local()\n            .endOf(\"days\")\n            .diff(moment(day)) > 0\n        ) {\n          const add =\n            idx === 0\n              ? 0\n              : getSumCustomVal(\n                custom_value_map,\n                getTaskCreatedToday(tasks, day),\n                eid\n              );\n          const remaining = Math.max(\n            getSumCustomVal(custom_value_map, getTaskCreated(tasks, day), eid) -\n            add -\n            getSumCustomVal(\n              custom_value_map,\n              getTaskFinished(tasks, day),\n              eid\n            ),\n            0\n          );\n\n          return { label, ideal, remaining, add };\n        } else {\n          return { label, ideal };\n        }\n      });\n      setData(data);\n    } else {\n      setData([]);\n    }\n  }, [tasks, biz_days, custom_eid, custom_value_map, setData]);\n  const formatter: TooltipFormatter = useCallback(\n    (value, name) => [Number(value).toFixed(1), _.upperFirst(name)],\n    []\n  );\n  if (data.length === 0) {\n    return null;\n  } else {\n    return (\n      <ComposedChart data={data} width={width} height={height}>\n        <YAxis />\n        <XAxis dataKey=\"label\" />\n        <Tooltip formatter={formatter} />\n        {size === \"lg\" &&\n          <Legend formatter={_.upperFirst} />\n        }\n        <Bar dataKey=\"remaining\" fill=\"#8884d8\" stackId=\"a\" />\n        <Bar dataKey=\"add\" fill=\"#82ca9d\" stackId=\"a\" />\n        <Line dataKey=\"ideal\" />\n      </ComposedChart>\n    );\n  }\n};\n","import React, { useState, useCallback } from \"react\";\nimport { Link } from \"react-router-dom\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faChalkboard\n} from \"@fortawesome/free-solid-svg-icons\";\nimport moment from \"moment\";\nimport { ITask } from \"../../store\";\nimport {\n  Button,\n  Card,\n  CardHeader,\n} from \"reactstrap\";\nimport { ChartTypeSelector, ChartType } from \"../../features/chart/ChartTypeSelector\";\nimport { BurnUpChart } from \"./BurnUp\";\nimport { BurnDownChart } from \"./BurnDown\";\nexport const getTaskFinished = (tasks: ITask[], date: string) =>\n  tasks.filter(task =>\n    task.finished_date\n      ? moment(date)\n        .local()\n        .endOf(\"days\")\n        .diff(moment(task.finished_date)) > 0\n      : false\n  );\n\nexport const getTaskCreatedToday = (tasks: ITask[], date: string) =>\n  tasks.filter(\n    task =>\n      moment(date)\n        .local()\n        .format(\"YYYY-MM-DD\") ===\n      moment(task.created_date)\n        .local()\n        .format(\"YYYY-MM-DD\")\n  );\n\nexport const getTaskCreated = (tasks: ITask[], date: string) =>\n  tasks.filter(\n    task =>\n      moment(date)\n        .local()\n        .endOf(\"days\")\n        .diff(moment(task.created_date)) > 0\n  );\n\n\ntype ChartSizeType = \"lg\" | \"sm\"\nexport interface BurnChartProps {\n  tasks: ITask[]\n  size?: ChartSizeType\n}\nexport const chartSize = (size: ChartSizeType) => {\n  if (size === \"sm\") {\n    return {\n      width: 250,\n      height: 200\n    }\n  } else {\n    return {\n      width: 800,\n      height: 400\n    }\n  }\n}\nexport const Chart = ({ tasks }: { tasks: ITask[] }) => {\n  const [chartType, setChartType] = useState<ChartType>(\"Burn up\");\n  const handleSelect = useCallback((type: ChartType) => {\n    setChartType(type);\n  }, [setChartType]);\n  if (tasks.length === 0) {\n    return null;\n  } else {\n    return (\n      <Card className=\"mb-2\">\n        <CardHeader className=\"d-flex\">\n          <div className=\"mr-auto\">\n            <Button size=\"sm\" tag={Link} to={\"/board\"} color=\"primary\" className=\"mr-2\" title=\"Board\">\n              <FontAwesomeIcon icon={faChalkboard} />\n            </Button>\n            Chart</div>\n          <ChartTypeSelector onSelect={handleSelect} type={chartType} />\n        </CardHeader>\n        {chartType === \"Burn down\" ? (\n          <BurnDownChart tasks={tasks} />\n        ) : (\n            <BurnUpChart tasks={tasks} />\n          )}\n      </Card>\n    );\n  }\n};\n","import React, { useContext } from \"react\";\nimport { UserTasks } from \"./task/UserTasks\";\nimport { UnEstimatedTasks } from \"./UnEstimatedTasks\";\nimport { NotAssignedTasks } from \"./NotAssignedTasks\";\nimport { Chart } from \"./chart\";\n// import { Hero } from \"./Hero\";\nimport { RootContext } from \"../Provider\";\n\nexport const OverView: React.FC = () => {\n  const {\n    state: { tasks }\n  } = useContext(RootContext);\n  return (\n    <>\n      <Chart tasks={tasks} />\n      <UserTasks />\n      {/* <Hero /> */}\n      <NotAssignedTasks />\n      <br />\n      <UnEstimatedTasks />\n    </>\n  );\n};\n","import React, { useContext, useMemo } from \"react\";\nimport _ from \"lodash\";\nimport { RootContext } from \"../Provider\";\nimport { InputGroupDisplayNumber } from \"./common/InputGroupDisplayNumber\";\nimport { Card, CardHeader, CardBody, CardFooter, Row, Col } from \"reactstrap\";\nimport classNames from \"classnames\";\nimport {\n  getCustomValVersion,\n  isCustomValInvalid,\n  isCustomValValid,\n  TaskProgress,\n  getSumCustomVal\n} from \"./task/UserTasks\";\nimport { UserStory, Grade, convToTasksByUserStory } from \"./UserStory\";\nimport { useUserStorySelector, IUserStory } from \"../features/userStory/userStorySlice\";\n\nexport const PersonalTasks: React.FC = () => {\n  const usList = useUserStorySelector.useList()\n  const {\n    state: {\n      custom_value_map,\n      biz_days,\n      user_tasks,\n      custom_attr_e,\n      custom_attr_r\n    }\n  } = useContext(RootContext);\n  const userStoryMap = useMemo(() => new Map<number, IUserStory>(usList.map(us => [us.id, us])), [usList])\n  const userStories = useMemo(() => convToTasksByUserStory(user_tasks), [\n    user_tasks\n  ]);\n  const items = useMemo(() => _.chain(userStories)\n    .map(item => ({\n      item,\n      tags: _.chain(userStoryMap.get(item.user_story)).get(\"tags\", []).map(i => _.first(i)).compact().value()\n    }))\n    .sortBy(i => Number.isNaN(i.item.user_story) ? -1 : i.tags.length)\n    .reverse()\n    .value(), [userStories, userStoryMap])\n  const e = useMemo(\n    () => getSumCustomVal(custom_value_map, user_tasks, custom_attr_e.id),\n    [custom_attr_e.id, custom_value_map, user_tasks]\n  );\n  const r = useMemo(\n    () => getSumCustomVal(custom_value_map, user_tasks, custom_attr_r.id),\n    [custom_attr_r.id, custom_value_map, user_tasks]\n  );\n  const valid = useMemo(\n    () =>\n      isCustomValValid(\n        e,\n        r,\n        userStories.every(item => item.is_closed)\n      ),\n    [e, r, userStories]\n  );\n  const invalid = useMemo(() => isCustomValInvalid(e, r), [e, r]);\n  const loading = useMemo(\n    () => user_tasks.some(item => !getCustomValVersion(custom_value_map, item)),\n    [custom_value_map, user_tasks]\n  );\n  if (!custom_attr_e.id || !custom_attr_r.id || biz_days.length <= 1) {\n    return null;\n  }\n\n  return (\n    <>\n      {items.map(({ item, tags }) => (\n        <UserStory item={item} key={item.user_story} tags={tags} />\n      ))}\n      <Card>\n        <CardHeader className={classNames(\"alert-info\")}>Total</CardHeader>\n        <CardBody>\n          <Row>\n            <Col>\n              <InputGroupDisplayNumber\n                label={custom_attr_e.name}\n                value={e}\n                loading={loading}\n              />\n            </Col>\n            <Col>\n              <InputGroupDisplayNumber\n                label={custom_attr_r.name}\n                value={r}\n                invalid={invalid}\n                valid={valid}\n                loading={loading}\n              />\n            </Col>\n            <Col>\n              <Grade e={e} r={r} />\n            </Col>\n          </Row>\n        </CardBody>\n        <CardFooter>\n          <TaskProgress tasks={user_tasks} />\n        </CardFooter>\n      </Card>\n    </>\n  );\n};\n","import React, { useContext } from \"react\";\nimport { Card, CardHeader } from \"reactstrap\";\nimport { RootContext } from \"../Provider\";\n\nimport { AvatarSquare } from \"./task/UserTasks\";\nexport const PersonalInfo: React.FC = () => {\n  const {\n    state: { user }\n  } = useContext(RootContext);\n  return (\n    <Card>\n      {user && (\n        <CardHeader>\n          <AvatarSquare src={user.photo} size=\"xlarge\" />\n          {user.username} 's task\n        </CardHeader>\n      )}\n    </Card>\n  );\n};\n","import React, { useContext, useEffect, useCallback } from \"react\";\nimport { Button, Alert, Navbar } from \"reactstrap\";\nimport { PersonalTasks } from \"./PersonalTasks\";\nimport { PersonalInfo } from \"./PersonalInfo\";\nimport { RootContext } from \"../Provider\";\nimport { Chart } from \"./chart\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faArrowCircleLeft } from \"@fortawesome/free-solid-svg-icons\";\nimport { useParams, useHistory } from \"react-router-dom\";\nimport { ActionTypes } from \"../actions\";\nimport { UpdateButton } from \"./UpdateButton\";\nimport { SignInForm } from \"./SignInForm\";\nimport { useSettingSelector } from \"../features/setting/settingSlice\";\n\nexport const PersonalPage: React.FC = () => {\n  const url = useSettingSelector.useUrl()\n  const {\n    state: { user, user_tasks },\n    dispatch\n  } = useContext(RootContext);\n  const { uid } = useParams();\n  const history = useHistory();\n  const handleGoBack = useCallback(() => {\n    history.goBack();\n  }, [history]);\n  useEffect(() => {\n    if (uid && url) {\n      dispatch({ type: ActionTypes.FETCH_USER, payload: { uid } });\n    }\n    return () => {\n      dispatch({ type: ActionTypes.RESET_USER });\n    };\n  }, [dispatch, uid, url]);\n\n  return (\n    <>\n      <Navbar color=\"light\" light>\n        <Button onClick={handleGoBack} className=\"mr-auto\">\n          <FontAwesomeIcon icon={faArrowCircleLeft} /> Go back\n        </Button>\n        <SignInForm />\n        <UpdateButton />\n      </Navbar>\n      {user ? (\n        <>\n          <PersonalInfo />\n          <br />\n          <Chart tasks={user_tasks} />\n          <br />\n          <PersonalTasks />\n        </>\n      ) : (\n          <Alert color=\"danger\">This user does not exist.</Alert>\n        )}\n    </>\n  );\n};\n","import React, { useContext, useMemo, useCallback } from \"react\";\nimport moment from \"moment\";\nimport _ from \"lodash\";\nimport ReactTooltip from \"react-tooltip\";\nimport CalendarHeatmap from \"react-calendar-heatmap\";\nimport { Alert } from \"reactstrap\";\nimport { RootContext } from \"../Provider\";\ninterface IItem {\n  date: string;\n  value: number;\n  pureValue: number;\n}\nexport const PomodoroHeatmap: React.FC = () => {\n  const {\n    state: { pomodoro_daily_totals }\n  } = useContext(RootContext);\n  const values = useMemo(\n    () =>\n      pomodoro_daily_totals.map(item => ({\n        date: item.dateKey,\n        value: item.value,\n        pureValue: item.pureValue\n      })),\n    [pomodoro_daily_totals]\n  );\n  const maxVal = (_.maxBy(values, \"value\") || { value: 1 }).value;\n  const classForValue = useCallback(\n    (item: IItem) =>\n      item\n        ? `style-pomodoro color-pomodoro-${Math.ceil(\n            ((item.value || 0) * 8) / maxVal\n          )}`\n        : \"style-pomodoro empty-pomodoro\",\n    [maxVal]\n  );\n  const tooltipDataAttrs = useCallback(\n    (item: IItem) =>\n      item && item.date\n        ? {\n            \"data-tip\": `${item.value} Pomodoros on ${item.date}`\n          }\n        : null,\n    []\n  );\n  const startDate = useMemo(\n    () =>\n      moment()\n        .subtract(12, \"month\")\n        .toDate(),\n    []\n  );\n  if (pomodoro_daily_totals.length === 0) {\n    return <Alert color=\"warning\">No pomodoro history!</Alert>;\n  } else {\n    return (\n      <>\n        <CalendarHeatmap\n          startDate={startDate}\n          showWeekdayLabels={true}\n          values={values}\n          classForValue={classForValue}\n          tooltipDataAttrs={tooltipDataAttrs}\n        />\n        <ReactTooltip />\n      </>\n    );\n  }\n};\n","import React, { useContext, useState, useCallback, useEffect } from \"react\";\nimport _ from \"lodash\";\nimport moment from \"moment\";\nimport { LinearProgress } from \"@rmwc/linear-progress\";\nimport { ThemeProvider } from \"@rmwc/theme\";\nimport { Chip, ChipSet } from \"@rmwc/chip\";\nimport {\n  Card,\n  Collapse,\n  CardHeader,\n  CardBody,\n  Badge,\n  DropdownToggle,\n  DropdownMenu,\n  DropdownItem,\n  InputGroup,\n  InputGroupAddon,\n  InputGroupText,\n  InputGroupButtonDropdown,\n  Button,\n  Spinner\n} from \"reactstrap\";\nimport styles from \"./Pomodoro.module.css\";\nimport classNames from \"classnames\";\nimport { Tomato, TomatoState } from \"./Tomato\";\nimport { ToggleIcon } from \"./Controller\";\nimport tomatoIcon from \"../tomato.png\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { stopPropagation } from \"../util/handler\";\nimport {\n  faCoffee,\n  faPlay,\n  faPause,\n  faRedo,\n  faCookie,\n  faTimes,\n  faTasks,\n  faUserFriends\n} from \"@fortawesome/free-solid-svg-icons\";\nimport {\n  TimerState,\n  TimerMode,\n  TimerDurationMin,\n  timer,\n  TimerEventListener\n} from \"../util/timer\";\nimport { RootContext } from \"../Provider\";\nimport { PomodoroHeatmap } from \"./PomodoroHeatmap\";\nimport { ActionTypes } from \"../sideEffectors\";\nimport { notify, NotifyClickHandler } from \"../util/notify\";\nconst Favico = require(\"favico.js-slevomat\");\nconst favico = new Favico({ type: \"rectangle\" });\nconst secToMin = (seconds: number) => Math.ceil(seconds / 60);\ninterface TimerIconProps {\n  mode: TimerMode;\n}\nconst toValueAndUnit = (seconds: number): [number, string] =>\n  seconds >= 60 ? [secToMin(seconds), \"min\"] : [Math.ceil(seconds), \"sec\"];\nconst TimerIcon: React.FC<TimerIconProps> = ({ mode }) => {\n  switch (mode) {\n    case TimerMode.SHORT: {\n      return (\n        <FontAwesomeIcon\n          className={classNames(\"fa-fw\", styles.short_break_icon)}\n          icon={faCoffee}\n        />\n      );\n    }\n    case TimerMode.LONG: {\n      return (\n        <FontAwesomeIcon\n          className={classNames(\"fa-fw\", styles.long_break_icon)}\n          icon={faCookie}\n        />\n      );\n    }\n    default: {\n      return <Tomato state={TomatoState.FRESH} />;\n    }\n  }\n};\ninterface TimerItemProps {\n  mode: TimerMode;\n  onSelect: (mode: TimerMode) => void;\n}\nconst TimerItem: React.FC<TimerItemProps> = ({ mode, onSelect }) => {\n  const handleClick = useCallback(() => {\n    onSelect(mode);\n  }, [mode, onSelect]);\n  return (\n    <DropdownItem onClick={handleClick}>\n      <TimerIcon mode={mode} />\n      {mode}\n    </DropdownItem>\n  );\n};\nconst clickToClose: NotifyClickHandler = closeFn => {\n  timer.start();\n  closeFn();\n};\nconst clickToWaitClose: NotifyClickHandler = closeFn => {\n  timer.start();\n  closeFn(2);\n};\nconst clickToChangeFocus: NotifyClickHandler = closeFn => {\n  timer.changeMode(TimerMode.FOCUS);\n  timer.start();\n  closeFn();\n};\nexport const Pomodoro: React.FC = () => {\n  const {\n    state: {\n      loaded,\n      pomodoro_date,\n      pomodoro_number,\n      pomodoro_used_number,\n      task_id,\n      task,\n      auth_token,\n      pomodoro_live_counts\n    },\n    dispatch\n  } = useContext(RootContext);\n  const [isOpen, setIsOpen] = useState(false);\n  const [isOpenDropdown, setIsOpenDropdown] = useState(false);\n  const [remaining, setRemaining] = useState(TimerDurationMin[TimerMode.FOCUS]);\n  const [state, setState] = useState<TimerState>(TimerState.STOPPED);\n  const [mode, setMode] = useState<TimerMode>(TimerMode.FOCUS);\n  const [progress, setProgress] = useState(0);\n  const [unit, setUnit] = useState(\"min\");\n\n  const toggleDropdown = useCallback(() => {\n    setIsOpenDropdown(prev => !prev);\n  }, []);\n  const handleSelect = useCallback((mode: TimerMode) => {\n    timer.changeMode(mode);\n  }, []);\n  const handleClick = useCallback(() => {\n    switch (state) {\n      case TimerState.RUNNING: {\n        timer.pause();\n        break;\n      }\n      case TimerState.PAUSED: {\n        timer.resume();\n        break;\n      }\n      case TimerState.STOPPED: {\n        timer.start();\n      }\n    }\n  }, [state]);\n  const setRemainingAndUnit = useCallback((seconds: number) => {\n    const [val, unit] = toValueAndUnit(seconds);\n    setRemaining(val);\n    setUnit(unit);\n  }, []);\n  const handleState: TimerEventListener = useCallback(\n    status => {\n      setState(status.state);\n      setRemainingAndUnit(status.remaining);\n    },\n    [setRemainingAndUnit]\n  );\n  const handleMode: TimerEventListener = useCallback(\n    status => {\n      setMode(status.mode);\n      setRemainingAndUnit(status.duration);\n    },\n    [setRemainingAndUnit]\n  );\n  const handleTick: TimerEventListener = useCallback(\n    status => {\n      setRemainingAndUnit(status.remaining);\n    },\n    [setRemainingAndUnit]\n  );\n  const handleExpire: TimerEventListener = useCallback(\n    (status, completedAt?: Date) => {\n      let num = pomodoro_number;\n      handleState(status);\n      if (status.mode === TimerMode.FOCUS) {\n        dispatch({\n          type: ActionTypes.ADD_POMODORO,\n          meta: {\n            completedAt: completedAt || new Date(),\n            duration: status.duration,\n            pure: status.checkpointElapsed === 0\n          }\n        });\n        num++;\n        if (num % 4 === 0) {\n          timer.changeMode(TimerMode.LONG);\n        } else {\n          timer.changeMode(TimerMode.SHORT);\n        }\n      } else {\n        timer.changeMode(TimerMode.FOCUS);\n      }\n      let title: string = \"\";\n      let body: string;\n      let option: string | undefined = undefined;\n      let onClick = clickToClose;\n      let onDblclick: NotifyClickHandler | undefined = undefined;\n      body = `${num} Pomodoros today!`;\n      switch (timer.mode) {\n        case TimerMode.FOCUS: {\n          title = \"Start Focusing.\";\n          break;\n        }\n        case TimerMode.SHORT: {\n          title = \"Take a Short Break.\";\n          option = \"Retry focusing if double click.\";\n          onClick = clickToWaitClose;\n          onDblclick = clickToChangeFocus;\n          break;\n        }\n        case TimerMode.LONG: {\n          title = \"Take a Long Break.\";\n          option = \"Retry focusing if double click.\";\n          onClick = clickToWaitClose;\n          onDblclick = clickToChangeFocus;\n          break;\n        }\n      }\n      notify({\n        title,\n        body,\n        option,\n        icon: tomatoIcon,\n        onClick,\n        onDblclick\n      });\n    },\n    [dispatch, handleState, pomodoro_number]\n  );\n  const handleRetry = useCallback(() => {\n    timer.changeMode(TimerMode.FOCUS, true);\n  }, []);\n  const handleRemove = useCallback(() => {\n    dispatch({ type: ActionTypes.RESET_TASK_ID });\n  }, [dispatch]);\n  const handleAddFBTimer: TimerEventListener = useCallback(\n    status => {\n      let title: string = \" from firebase!\";\n      let num = pomodoro_number;\n      const { remaining } = status;\n\n      if (status.mode === TimerMode.FOCUS) {\n        num++;\n        if (num % 4 === 0) {\n          title = `Take a Long Break ${title}`;\n        } else {\n          title = `Take a Short Break ${title}`;\n        }\n      } else {\n        title = `Start Focusing ${title}`;\n      }\n      const body = `${num} Pomodoros today!`;\n      dispatch({\n        type: ActionTypes.ADD_FB_TIMER,\n        payload: {\n          title,\n          body,\n          remaining\n        }\n      });\n    },\n    [dispatch, pomodoro_number]\n  );\n  const handleDelFBTimer: TimerEventListener = useCallback(\n    status => {\n      dispatch({\n        type: ActionTypes.DEL_FB_TIMER\n      });\n    },\n    [dispatch]\n  );\n\n  useEffect(() => {\n    timer.on(\"tick\", handleTick);\n    timer.on(\"start\", handleState);\n    timer.on(\"start\", handleAddFBTimer);\n    timer.on(\"stop\", handleState);\n    timer.on(\"stop\", handleDelFBTimer);\n    timer.on(\"pause\", handleState);\n    timer.on(\"pause\", handleDelFBTimer);\n    timer.on(\"resume\", handleState);\n    timer.on(\"resume\", handleAddFBTimer);\n    timer.on(\"expire\", handleExpire);\n    timer.on(\"change_mode\", handleMode);\n    return () => {\n      timer.removeAllListeners();\n    };\n  }, [\n    handleExpire,\n    handleMode,\n    handleState,\n    handleTick,\n    handleAddFBTimer,\n    handleDelFBTimer\n  ]);\n  useEffect(() => {\n    setMode(timer.mode);\n    setState(timer.state);\n    setRemainingAndUnit(timer.remaining);\n    if (timer.restoreExpired && auth_token) {\n      _.defer(() => {\n        handleExpire(timer.status);\n      });\n      timer.restoreExpired = false;\n    }\n  }, [auth_token, handleExpire, setRemainingAndUnit]);\n  useEffect(() => {\n    const today = moment().format(\"YYYY-MM-DD\");\n    if (loaded && pomodoro_date !== today) {\n      dispatch({\n        type: ActionTypes.RESET_POMODORO,\n        payload: { pomodoro_date: today }\n      });\n      timer.changeMode(TimerMode.FOCUS);\n    }\n  }, [dispatch, loaded, pomodoro_date]);\n  useEffect(() => {\n    if (Notification.permission !== \"denied\") {\n      Notification.requestPermission();\n    }\n  }, [dispatch]);\n  useEffect(() => {\n    let bgColor = mode === TimerMode.FOCUS ? \"#f00\" : \"#0f0\";\n    let textColor = mode === TimerMode.FOCUS ? \"#fff\" : \"#000\";\n    let animation = \"fade\";\n    if (unit === \"sec\") {\n      [bgColor, textColor] = [textColor, bgColor];\n      animation = \"none\";\n    }\n    switch (state) {\n      case TimerState.RUNNING: {\n        favico.badge(remaining, {\n          bgColor,\n          textColor,\n          animation\n        });\n        break;\n      }\n      case TimerState.PAUSED: {\n        favico.badge(\"-\", { bgColor, textColor, animation });\n        break;\n      }\n      default: {\n        favico.reset();\n      }\n    }\n  }, [mode, remaining, state, unit]);\n  useEffect(() => {\n    const duration = TimerDurationMin[mode] * 60;\n    const val = unit === \"min\" ? remaining * 60 : remaining;\n    setProgress(0.01 + ((duration - val) * 99) / duration / 100);\n  }, [mode, remaining, unit]);\n  useEffect(() => {\n    dispatch({\n      type: ActionTypes.SET_POMODORO_STATE,\n      payload: { pomodoro_state: state }\n    });\n  }, [dispatch, state]);\n  useEffect(() => {\n    dispatch({\n      type: ActionTypes.SET_POMODORO_MODE,\n      payload: { pomodoro_mode: mode }\n    });\n  }, [dispatch, mode]);\n  const handleToggle = useCallback(() => {\n    setIsOpen(prev => !prev);\n  }, []);\n  const buffer = state === TimerState.RUNNING ? progress : 1;\n  if (!auth_token) {\n    return null;\n  }\n  const taskTitle = task\n    ? `#${task.ref} ${_.get(\n        task,\n        \"user_story_extra_info.subject\",\n        \"Unassigned tasks\"\n      )} / ${task.subject}`\n    : \"\";\n  const taskSubject = task\n    ? _.truncate(`#${task.ref} ${task.subject}`, { length: 10 })\n    : \"\";\n  const displayLive = Object.values(pomodoro_live_counts).some(val => val > 0);\n  return (\n    <Card className={classNames(styles.top, \"sticky-top\")}>\n      <ThemeProvider\n        options={{ primary: mode === TimerMode.FOCUS ? \"red\" : \"green\" }}\n      >\n        <LinearProgress\n          buffer={buffer}\n          progress={progress}\n          closed={state === TimerState.STOPPED}\n        />\n      </ThemeProvider>\n      <CardHeader onClick={handleToggle}>\n        <div className=\"d-flex\">\n          <ToggleIcon isOpen={isOpen} />\n          <InputGroup className={classNames(styles.button_group, \"ml-1\")}>\n            <InputGroupButtonDropdown\n              onClick={stopPropagation}\n              isOpen={isOpenDropdown}\n              toggle={toggleDropdown}\n              addonType=\"prepend\"\n            >\n              <DropdownToggle color=\"light\" size=\"sm\" caret>\n                <TimerIcon mode={mode} />\n              </DropdownToggle>\n              <DropdownMenu>\n                <TimerItem mode={TimerMode.FOCUS} onSelect={handleSelect} />\n                <TimerItem mode={TimerMode.SHORT} onSelect={handleSelect} />\n                <TimerItem mode={TimerMode.LONG} onSelect={handleSelect} />\n              </DropdownMenu>\n            </InputGroupButtonDropdown>\n            <InputGroupAddon addonType=\"prepend\" onClick={stopPropagation}>\n              <InputGroupText\n                className={classNames(styles.fix_w, {\n                  \"font-weight-bold\": state === TimerState.RUNNING\n                })}\n              >\n                {remaining}\n              </InputGroupText>\n            </InputGroupAddon>\n            <InputGroupAddon onClick={stopPropagation} addonType=\"prepend\">\n              {unit}\n            </InputGroupAddon>\n            <InputGroupAddon addonType=\"append\" onClick={stopPropagation}>\n              {state === TimerState.RUNNING ? (\n                <Button color=\"danger\" onClick={handleClick}>\n                  <FontAwesomeIcon icon={faPause} />\n                </Button>\n              ) : (\n                <Button color=\"primary\" onClick={handleClick}>\n                  <FontAwesomeIcon icon={faPlay} />\n                </Button>\n              )}\n            </InputGroupAddon>\n\n            {mode !== TimerMode.FOCUS && (\n              <InputGroupAddon addonType=\"append\" onClick={stopPropagation}>\n                <Button\n                  color=\"light\"\n                  onClick={handleRetry}\n                  title=\"Retry focusing\"\n                >\n                  <FontAwesomeIcon icon={faRedo} className=\"text-muted\" />\n                  <Tomato state={TomatoState.STALE} />\n                </Button>\n              </InputGroupAddon>\n            )}\n\n            {task_id && (\n              <ChipSet\n                onClick={stopPropagation}\n                className={classNames(styles.chip_set)}\n              >\n                <Chip\n                  icon={<FontAwesomeIcon icon={faTasks} />}\n                  onRemove={handleRemove}\n                  title={taskTitle}\n                  trailingIcon={<FontAwesomeIcon icon={faTimes} />}\n                >\n                  {taskSubject ? taskSubject : <Spinner type=\"grow\" />}\n                </Chip>\n              </ChipSet>\n            )}\n            {displayLive && (\n              <div className=\"ml-1\">\n                <div\n                  className={classNames(\n                    \"w-100\",\n                    \"text-light\",\n                    \"bg-danger\",\n                    \"text-center\",\n                    \"rounded\",\n                    \"shadow\",\n                    \"font-weight-bold\",\n                    styles.live\n                  )}\n                >\n                  <FontAwesomeIcon\n                    className=\"ml-1\"\n                    icon={faUserFriends}\n                  ></FontAwesomeIcon>\n                  <span className=\"mx-1\">LIVE</span>\n                </div>\n                <div>\n                  {Object.entries(pomodoro_live_counts)\n                    .filter(([mode, val]) => val > 0)\n                    .map(([mode, val]) => (\n                      <Badge key={mode} color=\"light\" className=\"border\">\n                        <TimerIcon mode={mode as TimerMode} />:{val}\n                      </Badge>\n                    ))}\n                </div>\n              </div>\n            )}\n          </InputGroup>\n          {pomodoro_number > 0 && (\n            <Badge color=\"danger\" className=\"mr-2\">\n              <Tomato /> <FontAwesomeIcon icon={faTimes} /> {pomodoro_number}\n            </Badge>\n          )}\n          {_.times(pomodoro_number).map(i => (\n            <Tomato\n              key={i}\n              state={\n                i < pomodoro_used_number ? TomatoState.STALE : TomatoState.FRESH\n              }\n              br={i % 2 !== pomodoro_number % 2 && i < pomodoro_number - 1}\n            />\n          ))}\n        </div>\n      </CardHeader>\n      <Collapse isOpen={isOpen}>\n        <CardBody className=\"bg-grass\">\n          <PomodoroHeatmap />\n        </CardBody>\n      </Collapse>\n    </Card>\n  );\n};\n","import { toastr } from \"./toastr\";\ntype CloseFn = (sec?: number) => void;\nexport type NotifyClickHandler = (close: CloseFn) => void;\ninterface NotifyArgs {\n  title: string;\n  body: string;\n  option?: string;\n  icon: string;\n  onClick: NotifyClickHandler;\n  onDblclick?: NotifyClickHandler;\n}\nexport const notify = ({\n  title,\n  body,\n  option = \"\",\n  icon,\n  onClick,\n  onDblclick\n}: NotifyArgs) => {\n  let clickCount = 0;\n  let closeTimer: NodeJS.Timeout | null = null;\n  if (Notification.permission === \"granted\") {\n    const notification = new Notification(title, {\n      body: `${body} ${option}`,\n      icon\n    });\n    const closeFn = (sec = 0) => {\n      if (sec) {\n        closeTimer = setTimeout(() => {\n          notification.close();\n          closeTimer = null;\n        }, sec * 1000);\n      } else {\n        notification.close();\n      }\n    };\n    notification.onclick = () => {\n      if (clickCount === 0) {\n        clickCount++;\n        onClick(closeFn);\n      } else {\n        closeTimer && clearTimeout(closeTimer);\n        onDblclick && onDblclick(closeFn);\n      }\n    };\n  } else {\n    toastr.notify({ title, body, icon });\n  }\n};\n","import _ from \"lodash\";\nimport { ITask, ICustomValueMap } from \"./taskSlice\";\nexport const getTasksByUser = (items: ITask[]) =>\n  _.chain(items)\n    .reject(item => !item.assigned_to)\n    .groupBy(\"assigned_to\").value();\nexport const parseCustomVal = (val: string) =>\n  _.chain(val)\n    .replace(/[^0-9.+,]/g, \"\")\n    .replace(/[+]/g, \",\")\n    .split(\",\")\n    .compact()\n    .map(Number)\n    .sum()\n    .value();\nexport const getSumCustomVal = (\n  custom_value_map: ICustomValueMap,\n  tasks: ITask[],\n  id: number\n) =>\n  _.chain(tasks)\n    .map(task => getCustomVal(custom_value_map, task, id))\n    .sum()\n    .value();\nexport const getCustomVal = (\n  custom_value_map: ICustomValueMap,\n  task: ITask,\n  id: number\n) => {\n  if (custom_value_map.has(task)) {\n    return parseCustomVal(\n      _.get(custom_value_map.get(task), `attributes_values.${id}`, \"0\")\n    );\n  } else {\n    return 0;\n  }\n};\nexport const getSumCustomValClosed = (\n  custom_value_map: ICustomValueMap,\n  tasks: ITask[],\n  id: number\n) =>\n  getSumCustomVal(\n    custom_value_map,\n    tasks.filter(item => item.is_closed),\n    id\n  );","import React from \"react\";\nimport { Avatar, AvatarProps } from \"@rmwc/avatar\";\nexport const AvatarSquare: React.FC<AvatarProps> = props => {\n  const src = props.src || `http://i.pravatar.cc/80?u=${Math.random()}`;\n  return <Avatar {...props} src={src} square className=\"mr-1\" />;\n};","import React, { useContext, useState, useCallback } from \"react\";\nimport _ from \"lodash\";\nimport { RootContext } from \"../../Provider\";\nimport { Col, Row, Card, CardHeader, CardBody, Breadcrumb, BreadcrumbItem } from \"reactstrap\";\nimport { getTasksByUser, getSumCustomValClosed } from \"../task/util\"\nimport { ITask } from \"../task/taskSlice\";\nimport { IUser } from '../user/userSlice'\nimport { Link } from \"react-router-dom\";\nimport { AvatarSquare } from \"../user/AvatarSquare\";\nimport { BurnUpChart, BurnDownChart } from \"../chart\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faHome, faChalkboard } from \"@fortawesome/free-solid-svg-icons\";\nimport { UpdateButton } from \"../common\";\nimport { ChartType, ChartTypeSelector } from \"../chart/ChartTypeSelector\";\ninterface BoardItemProps {\n  user: IUser;\n  tasks: ITask[];\n  type: ChartType;\n}\nconst BoardItem: React.FC<BoardItemProps> = ({ user, tasks, type }) => {\n  return (\n    <Col sm=\"12\" md=\"6\" lg=\"4\" >\n      <Card>\n        <CardHeader className=\"text-truncate\" title={user.username}>\n          <AvatarSquare src={user.photo} />\n          <Link to={`/users/${user.id}`}>\n            {user.username}\n          </Link>\n        </CardHeader>\n        <CardBody>\n          {type === \"Burn down\" ?\n            <BurnDownChart tasks={tasks} size=\"sm\" />\n            :\n            <BurnUpChart tasks={tasks} size=\"sm\" />\n          }\n        </CardBody>\n      </Card>\n    </Col>)\n}\nexport const BoardPage: React.FC = () => {\n  const { state: { tasks, project: { members }, custom_value_map, custom_eid } } = useContext(RootContext)\n  const [chartType, setChartType] = useState<ChartType>(\"Burn up\")\n  const tasksByUid = getTasksByUser(tasks)\n  const sortedTasks = _.chain(members)\n    .filter(user => _.has(tasksByUid, user.id))\n    .map(user => ({ user, tasks: tasksByUid[user.id], closed: getSumCustomValClosed(custom_value_map, tasksByUid[user.id], Number(custom_eid)) }))\n    .sortBy(\"closed\")\n    .value()\n  const handleSelect = useCallback((type: ChartType) => {\n    setChartType(type);\n  }, [setChartType]);\n  return (\n    <>\n      <Breadcrumb tag=\"nav\" >\n        <BreadcrumbItem title=\"Home\" tag={Link} to={\"/\"}><FontAwesomeIcon icon={faHome} /></BreadcrumbItem>\n        <BreadcrumbItem className=\"mr-auto\" tag=\"span\" active><FontAwesomeIcon icon={faChalkboard} />  Board</BreadcrumbItem>\n        <ChartTypeSelector type={chartType} onSelect={handleSelect} />\n        <UpdateButton size=\"sm\" />\n      </Breadcrumb>\n      <Row className=\"mt-1\">\n        {sortedTasks.map(({ user, tasks }, i) => (\n          <BoardItem key={i} user={user} tasks={tasks} type={chartType} />\n        ))}\n      </Row>\n    </>\n  )\n\n}\n","import React, { useEffect, useContext } from \"react\";\nimport { useSettingSelector } from \"../features/setting/settingSlice\";\nimport { RootContext } from \"../Provider\";\nimport { ActionTypes } from \"../actions\";\nexport const BridgeEffect: React.FC = () => {\n  const url = useSettingSelector.useUrl()\n  const { dispatch } = useContext(RootContext)\n  useEffect(() => {\n    if (url && dispatch) {\n      dispatch({ type: ActionTypes.SET_URL, payload: { url } })\n    }\n  }, [dispatch, url])\n  return <></>\n}","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport \"@material/switch/dist/mdc.switch.css\";\nimport \"@material/form-field/dist/mdc.form-field.css\";\nimport \"@rmwc/avatar/avatar.css\";\nimport \"@material/chips/dist/mdc.chips.css\";\nimport \"@material/linear-progress/dist/mdc.linear-progress.css\";\nimport \"@material/elevation/dist/mdc.elevation.css\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"react-calendar-heatmap/dist/styles.css\";\nimport { Provider } from \"react-redux\";\nimport { initialize } from \"./app/initialize\";\nimport { store } from \"./app/store\";\nimport { App } from \"./App\";\nimport { SideEffect } from \"./app/SideEffect\";\n// import * as serviceWorker from \"./serviceWorker\";\nimport \"./util/firebase\";\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n    <SideEffect />\n  </Provider>,\n  document.getElementById(\"root\")\n);\ninitialize()\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\n// serviceWorker.unregister();\n","import React from \"react\";\nimport \"./App.css\";\nimport { ToastContainer } from \"react-toastify\";\nimport { Controller } from \"./components/Controller\";\nimport { Provider } from \"./Provider\";\nimport { HashRouter, Route } from \"react-router-dom\";\nimport { OverView } from \"./components/OverView\";\nimport { PersonalPage } from \"./components/PersonalPage\";\nimport { Pomodoro } from \"./components/Pomodoro\";\nimport { BoardPage } from \"./features/page/BoardPage\";\nimport { BridgeEffect } from \"./app/BridgeEffect\";\nexport const App: React.FC = () => (\n  <div className=\"container-xl\">\n    <ToastContainer className=\"toast-top\" />\n    <HashRouter>\n      <Provider>\n        <Pomodoro />\n        <Controller />\n        <Route exact path=\"/\" component={OverView} />\n        <Route exact path=\"/board\" component={BoardPage} />\n        <Route exact path=\"/users/:uid\" component={PersonalPage} />\n        <BridgeEffect />\n      </Provider>\n    </HashRouter>\n  </div>\n);\n","import React, { useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useSettingSelector } from '../features/setting/settingSlice'\nimport { projectActions } from \"../features/project/projectSlice\";\nimport { useMilestoneSelector } from \"../features/milestone/milestoneSlice\";\nimport { userStoryActions } from \"../features/userStory/userStorySlice\";\nimport { useCommonSelector } from \"../features/common/commonSlice\"\nexport const SideEffect: React.FC = () => {\n  const dispatch = useDispatch()\n  const url = useSettingSelector.useUrl()\n  const mid = useMilestoneSelector.useMid()\n  const updatedTime = useCommonSelector.useUpdatedTime()\n  useEffect(() => {\n    url && dispatch(projectActions.fetchList())\n  }, [url, dispatch])\n  useEffect(() => {\n    url && mid && dispatch(userStoryActions.fetchList({ milestone: Number(mid) }))\n  }, [url, mid, dispatch, updatedTime])\n  return <></>\n}\n\n","import { syncStorage } from \"../app/storage\";\nexport const initialize = () => {\n  syncStorage()\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"top\":\"Pomodoro_top__2KPBC\",\"button_group\":\"Pomodoro_button_group__25QhE\",\"chip_set\":\"Pomodoro_chip_set__UcFix\",\"fix_w\":\"Pomodoro_fix_w__26hsb\",\"short_break_icon\":\"Pomodoro_short_break_icon__3e20m\",\"long_break_icon\":\"Pomodoro_long_break_icon__1CgqS\",\"live\":\"Pomodoro_live__293Tt\"};"],"sourceRoot":""}