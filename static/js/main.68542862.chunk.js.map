{"version":3,"sources":["components/UserTasks.module.css","components/Controller.module.css","actions.ts","store.ts","util/useSideEffector.ts","reducer.ts","sideEffectors/fetchProjects.ts","sideEffectors/fetchProject.ts","sideEffectors/fetchMilestones.ts","sideEffectors/fetchTasks.ts","sideEffectors/fetchTaskStatuses.ts","sideEffectors/fetchCustomAttrs.ts","sideEffectors/fetchCustomValueMap.ts","sideEffectors/fetchUser.ts","sideEffectors/patchCustomValue.ts","sideEffectors/patchTask.ts","util/toastr.tsx","sideEffectors/signIn.ts","sideEffectors/index.ts","sideEffectors/signOut.ts","Provider.tsx","init.ts","util/handler.ts","components/ProjectSelector.tsx","components/MilestoneSelector.tsx","components/CustomValuesSelector.tsx","components/DaysSelector.tsx","components/TaskStatusSelector.tsx","components/Controller.tsx","components/UpdateButton.tsx","components/InputGroupSpinner.tsx","components/UserStory.tsx","components/PersonalTasks.tsx","components/PersonalInfo.tsx","components/Chart.tsx","components/PersonalChart.tsx","components/PersonalPage.tsx","components/UserTasks.tsx","components/UnEstimatedTasks.tsx","components/NotAssignedTasks.tsx","components/OverviewChart.tsx","components/OverView.tsx","App.tsx","serviceWorker.ts","index.tsx","components/UserStory.module.css"],"names":["module","exports","gold","silver","bronze","custom_input_td","header","ActionTypes","StorageKey","ss","getFromStorage","key","localStorage","getItem","getFromStorageWithSubkey","subkey","concat","setToStorage","item","setItem","setToStorageWithSubkey","initialStateFn","url","URL","pid","PID","mid","MID","custom_eid","CUSTOM_EID","custom_rid","CUSTOM_RID","biz_days_str","BIZ_DAYS","biz_days","_","compact","split","sort","reject_task_status_ids","REJECT_TASK_STATUS_IDS","isOpen","auth_token","auth_error","username","password","user","projects","project","custom_attrs","milestones","tasks","task_statuses","active_task_statuses","custom_value_map","WeakMap","updated_time","reducer","state","arguments","length","undefined","action","type","SET_URL","payload","Object","objectSpread","SET_PROJECTS","SET_PID","SET_PROJECT","SET_MID","SET_MILESTONES","SET_CUSTOM_EID","SET_CUSTOM_ATTRS","SET_CUSTOM_RID","SET_BIZ_DAYS","join","ADD_BIZ_DAY","biz_day","chain","toConsumableArray","uniq","value","REMOVE_BIZ_DAY","reject","SET_TASKS","SET_TASK_STATUSES","SET_ACTIVE_TASK_STATUSES","SET_CUSTOM_VALUE_MAP","SET_USER","RESET_USER","ADD_REJECT_TASK_STATUS_ID","reject_task_status_id","REMOVE_REJECT_TASK_STATUS_ID","OPEN_CONTROLLER","CLOSE_CONTROLLER","UPDATE_DATA","Date","now","SIGN_IN","_action$payload","SET_AUTH_TOKEN","axios","defaults","headers","common","SET_AUTH_ERROR","SIGN_OUT","dispatchSideEffector","dispatch","sideEffector","dispatchSECaller","fetchProjecs","_ref","asyncToGenerator","regenerator_default","a","mark","_callee","_state","_ref2","wrap","_context","prev","next","fetchData","sent","data","t0","console","log","stop","_x","_x2","_x3","apply","this","fetchProject","FETCH_PROJECT","fetchMilestones","FETCH_MILESTONES","params","fetchTasks","milestone","FETCH_TASKS","x-disable-pagination","filter","includes","String","status","fetchTaskStatuses","FETCH_TASK_STATUSES","fetchCustomAttrs","FETCH_CUSTOM_ATTRS","fetchCustomValueMap","_callee2","_context2","FETCH_CUSTOM_VALUE_MAP","Promise","all","map","_ref3","custom_attr_val","id","abrupt","_x4","t1","t2","fetchUser","uid","FETCH_USER","patchCustomValue","version","task","custom_value","attributes_values","PATCH_CUSTOM_VALUE","find","has","get","patchData","defineProperty","patchTask","_patchData","PATCH_TASK","MessageWithIcon","icon","message","react_default","createElement","className","index_es","toastr","toast","success","toastr_MessageWithIcon","faCheck","error","faCheckCircle","signIn","postData","USERNAME","PASSWORD","errToastr","path","config","baseUrl","post","patch","err","response","_error_message","rootSideEffector","FETCH_PROJECTS","removeItem","signOut","replace","initialState","RootContext","createContext","Provider","children","_useSideEffector","slicedToArray","dispatchSE","useCallback","useSideEffector","useReducer","_useSideEffector2","useEffect","orderBy","order","init","preventDefault","e","stopPropagation","ProjectSelector","_useContext","useContext","_useContext$state","handleChange","target","InputGroup","InputGroupAddon","addonType","Input","onChange","name","MilestoneSelector","CustomValuesSelector","dayNameFromIdx","date","idx","getMilestone","items","weekClassName","day","text-danger","text-info","DayItem","checked","format","isPlanning","eleId","Fragment","classNames","table-info","biz","isWeekDay","FormGroup","check","inline","Label","disabled","isWeekendDay","UncontrolledTooltip","indexOf","dayName","DaysSelector","_useContext2","_useContext2$state","_useState","useState","_useState2","setItems","startM","moment","estimated_start","local","daysInSprint","estimated_finish","diff","times","i","clone","add","getDays","weekdays","chunk","Card","CardHeader","Table","bordered","days","DaysSelector_DayItem","StatusItem","defaultChecked","TaskStatusSelector","CardBody","TaskStatusSelector_StatusItem","ToggleIcon","rotation","faChevronCircleRight","Controller","stateUrl","setUrl","handleUrl","handleSubmit","toggle","taskboardUrl","project_extra_info","slug","getTaskboardUrl","styles","onClick","Controller_ToggleIcon","Badge","color","pill","getSpName","head","last","getRange","href","rel","faExternalLinkAlt","Collapse","Form","onSubmit","defaultValue","placeholder","Button","ProjectSelector_ProjectSelector","MilestoneSelector_MilestoneSelector","CustomValuesSelector_CustomValuesSelector","DaysSelector_DaysSelector","TaskStatusSelector_TaskStatusSelector","UpdateButton","updateData","faSyncAlt","InputGroupSpinner","InputGroupText","faSpinner","convToTasksByUserStory","groupBy","user_story","Number","user_story_extra_info","is_closed","every","needAuthMsg","UserStoryLink","usName","ref","subject","title","TaskLink","taskName","ToggleNumberInput","label","valid","invalid","loading","setChecked","_useState3","_useState4","val","setVal","evt","currentTarget","handleVal","num","toggle_input","InputGroupSpinner_InputGroupSpinner","InputGroupText_default","faHandPointRight","onInput","step","min","faCloudUploadAlt","readOnly","switch_next","faEdit","Grade","_ref4","r","display_medal","medal","UserTasks_Medal","TaskStatusItem","_ref5","onSelect","handleClick","DropdownItem","_ref6","_useState5","_useState6","setLoading","handleSelect","Spinner","UncontrolledDropdown","DropdownToggle","caret","status_extra_info","DropdownMenu","UserStory_TaskStatusItem","UserItem","_ref7","UserTasks_AvatarSquare","src","photo","TaskUserSelector","_ref8","_useState7","_useState8","_useContext5","members","size","UserStory_UserItem","NotAssignedButton","_ref9","_useState9","_useState10","faUserTimes","TaskItem","_ref10","_useContext7","_useContext7$state","getCustomValVersion","onSubmitE","onSubmitR","customAttrE","getCustomAttr","customAttrR","getCustomVal","unEstimated","isCustomValValid","isCustomValInvalid","inactive","ListGroupItem_default","UserStory_TaskLink","UserStory_NotAssignedButton","UserStory_TaskStatusSelector","Row","Col","UserStory_ToggleNumberInput","UserStory_Grade","UserStoryView","_ref11","UserStory_UserStoryLink","ListGroup_default","UserStoryWithTaskUser","_ref12","UserStory_TaskUserSelector","UserStory","_ref13","_useState11","_useState12","setIsOpen","alert-primary","UserStory_TaskItem","PersonalTasks","userInfo","userStories","setUserStories","userTasks","assigned_to","b","useMemo","_useMemo","reduce","result","_useMemo2","some","UserStory_UserStory","CardFooter","UserTasks_TaskProgress","PersonalInfo","getTaskCreated","endOf","created_date","getSumVal","sum","Chart","setData","days_len","allTaskVal","estimate","getTaskCreatedToday","finished_date","getTaskFinished","es6","width","height","dataKey","fill","stackId","PersonalChart","setUserTasks","Chart_Chart","SignInForm","sign_in_username","setUsername","setPassword","handleUsername","handlePassword","handleSignOut","faUser","faSignOutAlt","faKey","faSignInAlt","PersonalPage","useRouter","match","Navbar","light","tag","Link","to","faArrowCircleLeft","PersonalPage_SignInForm","UpdateButton_UpdateButton","PersonalInfo_PersonalInfo","PersonalTasks_PersonalTasks","PersonalChart_PersonalChart","Alert","barStyles","getTasksByUser","AvatarSquare","props","Math","random","assign","square","getSumCustomVal","custon_value_map","NameAndWorkLoad","total","imgSrc","tblCls","faGrinBeam","faGrinBeamSweat","faDizzy","Medal","_getGrade","isNumber","abs","getGrade","_getGrade2","grade","faMedal","TaskProgress","allSum","setAllSum","eid","reverse","style","Progress","multi","bar","max","UserRow","sums","isPast","hpd","customTotal","setTotal","sumItem","margedTotal","totalStr","UserTasks_NameAndWorkLoad","bsSize","react_router_dom","UserTasks","setHpd","activeLen","taskSumByUser","rid","mapValues","getTaskSumByUser","notAssignedSum","tasksByUser","faTimes","faEquals","UserTasks_UserRow","faGhost","UnEstimatedTasks","UserStory_UserStoryView","NotAssignedTasks","UserStory_UserStoryWithTaskUser","OverviewChart","OverView","react","UserTasks_UserTasks","NotAssignedTasks_NotAssignedTasks","UnEstimatedTasks_UnEstimatedTasks","OverviewChart_OverviewChart","App","react_toastify","Provider_Provider","Controller_Controller","react_router","exact","component","Boolean","window","location","hostname","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.68542862.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"gold\":\"UserTasks_gold__1MP40\",\"silver\":\"UserTasks_silver__GpK9Y\",\"bronze\":\"UserTasks_bronze__1aHZc\",\"custom_input_td\":\"UserTasks_custom_input_td__1JWmj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Controller_header__33lvE\"};","import {\n  IProject,\n  IMilestone,\n  ICustomAttr,\n  ITask,\n  ICustomValueMap,\n  ITaskStatus,\n  IUser\n} from \"./store\";\n\nexport enum ActionTypes {\n  SET_URL = \"SET_URL\",\n  SIGN_IN = \"SIGN_IN\",\n  SET_AUTH_TOKEN = \"SET_AUTH_TOKEN\",\n  SET_AUTH_ERROR = \"SET_AUTH_ERROR\",\n  SIGN_OUT = \"SIGN_OUT\",\n  FETCH_PROJECTS = \"FETCH_PROJECTS\",\n  SET_PROJECTS = \"SET_PROJECTS\",\n  SET_PID = \"SET_PID\",\n  FETCH_PROJECT = \"FETCH_PROJECT\",\n  SET_PROJECT = \"SET_PROJECT\",\n  FETCH_MILESTONES = \"FETCH_MILESTONES\",\n  SET_MID = \"SET_MID\",\n  SET_MILESTONES = \"SET_MILESTONES\",\n  SET_CUSTOM_EID = \"SET_CUSTOM_EID\",\n  SET_CUSTOM_RID = \"SET_CUSTOM_RID\",\n  FETCH_CUSTOM_ATTRS = \"FETCH_CUSTOM_ATTRS\",\n  SET_CUSTOM_ATTRS = \"SET_CUSTOM_ATTRS\",\n  SET_BIZ_DAYS = \"SET_BIZ_DAYS\",\n  ADD_BIZ_DAY = \"ADD_BIZ_DAY\",\n  REMOVE_BIZ_DAY = \"REMOVE_BIZ_DAY\",\n  FETCH_TASKS = \"FETCH_TASKS\",\n  SET_TASKS = \"SET_TASKS\",\n  PATCH_TASK = \"PATCH_TASK\",\n  FETCH_TASK_STATUSES = \"FETCH_TASK_STATUSES\",\n  SET_TASK_STATUSES = \"SET_TASK_STATUSES\",\n  SET_ACTIVE_TASK_STATUSES = \"SET_ACTIVE_TASK_STATUSES\",\n  FETCH_CUSTOM_VALUE_MAP = \"FETCH_CUSTOM_VALUE_MAP\",\n  SET_CUSTOM_VALUE_MAP = \"SET_CUSTOM_VALUE_MAP\",\n  PATCH_CUSTOM_VALUE = \"PATCH_CUSTOM_VALUE\",\n  FETCH_USER = \"FETCH_USER\",\n  SET_USER = \"SET_USER\",\n  RESET_USER = \"RESET_USER\",\n  ADD_REJECT_TASK_STATUS_ID = \"ADD_REJECT_TASK_STATUS\",\n  REMOVE_REJECT_TASK_STATUS_ID = \"REMOVE_REJECT_TASK_STATUS\",\n  OPEN_CONTROLLER = \"OPEN_CONTROLLER\",\n  CLOSE_CONTROLLER = \"CLOSE_CONTROLLER\",\n  UPDATE_DATA = \"UPDATE_DATA\"\n}\n\nexport interface IAction {\n  type: ActionTypes;\n  payload?: any;\n  meta?: { [key: string]: any };\n}\n\nexport interface SET_URL extends IAction {\n  type: ActionTypes.SET_URL;\n  payload: { url: string };\n}\nexport interface SIGN_IN extends IAction {\n  type: ActionTypes.SIGN_IN;\n  payload: { username: string; password: string };\n}\nexport interface SET_AUTH_TOKEN extends IAction {\n  type: ActionTypes.SET_AUTH_TOKEN;\n  payload: { auth_token: string };\n}\nexport interface SET_AUTH_ERROR extends IAction {\n  type: ActionTypes.SET_AUTH_ERROR;\n}\nexport interface SIGN_OUT extends IAction {\n  type: ActionTypes.SIGN_OUT;\n}\nexport interface FETCH_PROJECTS extends IAction {\n  type: ActionTypes.FETCH_PROJECTS;\n}\nexport interface SET_PROJECTS extends IAction {\n  type: ActionTypes.SET_PROJECTS;\n  payload: { projects: IProject[] };\n}\n\nexport interface SET_PID extends IAction {\n  type: ActionTypes.SET_PID;\n  payload: { pid: string };\n}\nexport interface FETCH_PROJECT extends IAction {\n  type: ActionTypes.FETCH_PROJECT;\n  payload: { pid: string };\n}\nexport interface SET_PROJECT extends IAction {\n  type: ActionTypes.SET_PROJECT;\n  payload: { project: IProject };\n}\nexport interface FETCH_MILESTONES extends IAction {\n  type: ActionTypes.FETCH_MILESTONES;\n  payload: { project: string };\n}\nexport interface SET_MILESTONES extends IAction {\n  type: ActionTypes.SET_MILESTONES;\n  payload: { milestones: IMilestone[] };\n}\n\nexport interface SET_MID extends IAction {\n  type: ActionTypes.SET_MID;\n  payload: { mid: string };\n}\n\nexport interface SET_CUSTOM_EID extends IAction {\n  type: ActionTypes.SET_CUSTOM_EID;\n  payload: { custom_eid: string };\n}\n\nexport interface SET_CUSTOM_RID extends IAction {\n  type: ActionTypes.SET_CUSTOM_RID;\n  payload: { custom_rid: string };\n}\n\nexport interface FETCH_CUSTOM_ATTRS extends IAction {\n  type: ActionTypes.FETCH_CUSTOM_ATTRS;\n  payload: { project: string };\n}\nexport interface SET_CUSTOM_ATTRS extends IAction {\n  type: ActionTypes.SET_CUSTOM_ATTRS;\n  payload: { custom_attrs: ICustomAttr[] };\n}\n\nexport interface SET_BIZ_DAYS extends IAction {\n  type: ActionTypes.SET_BIZ_DAYS;\n  payload: { biz_days: string[] };\n}\n\nexport interface ADD_BIZ_DAY extends IAction {\n  type: ActionTypes.ADD_BIZ_DAY;\n  payload: { biz_day: string };\n}\n\nexport interface REMOVE_BIZ_DAY extends IAction {\n  type: ActionTypes.REMOVE_BIZ_DAY;\n  payload: { biz_day: string };\n}\n\nexport interface FETCH_TASKS extends IAction {\n  type: ActionTypes.FETCH_TASKS;\n  payload: { milestone: string; reject_task_status_ids: string[] };\n}\nexport interface SET_TASKS extends IAction {\n  type: ActionTypes.SET_TASKS;\n  payload: { tasks: ITask[] };\n}\n\nexport interface PATCH_TASK extends IAction {\n  type: ActionTypes.PATCH_TASK;\n  payload: { key: keyof ITask; value: ITask[keyof ITask]; id: number };\n}\nexport interface FETCH_CUSTOM_VALUE_MAP extends IAction {\n  type: ActionTypes.FETCH_CUSTOM_VALUE_MAP;\n  payload: { tasks: ITask[] };\n}\nexport interface SET_CUSTOM_VALUE_MAP extends IAction {\n  type: ActionTypes.SET_CUSTOM_VALUE_MAP;\n  payload: { custom_value_map: ICustomValueMap };\n}\nexport interface PATCH_CUSTOM_VALUE extends IAction {\n  type: ActionTypes.PATCH_CUSTOM_VALUE;\n  payload: {\n    id: string | number;\n    key: string;\n    value: string | number;\n    version: number;\n  };\n}\nexport interface FETCH_TASK_STATUSES extends IAction {\n  type: ActionTypes.FETCH_TASK_STATUSES;\n  payload: { project: string };\n}\nexport interface SET_TASK_STATUSES extends IAction {\n  type: ActionTypes.SET_TASK_STATUSES;\n  payload: { task_statuses: ITaskStatus[] };\n}\nexport interface SET_ACTIVE_TASK_STATUSES extends IAction {\n  type: ActionTypes.SET_ACTIVE_TASK_STATUSES;\n  payload: { active_task_statuses: ITaskStatus[] };\n}\n\nexport interface FETCH_USER extends IAction {\n  type: ActionTypes.FETCH_USER;\n  payload: { uid: string };\n}\nexport interface SET_USER extends IAction {\n  type: ActionTypes.SET_USER;\n  payload: { user: IUser };\n}\nexport interface RESET_USER extends IAction {\n  type: ActionTypes.RESET_USER;\n}\nexport interface ADD_REJECT_TASK_STATUS_ID extends IAction {\n  type: ActionTypes.ADD_REJECT_TASK_STATUS_ID;\n  payload: { reject_task_status_id: string };\n}\n\nexport interface REMOVE_REJECT_TASK_STATUS_ID extends IAction {\n  type: ActionTypes.REMOVE_REJECT_TASK_STATUS_ID;\n  payload: { reject_task_status_id: string };\n}\n\nexport interface OPEN_CONTROLLER extends IAction {\n  type: ActionTypes.OPEN_CONTROLLER;\n}\n\nexport interface CLOSE_CONTROLLER extends IAction {\n  type: ActionTypes.CLOSE_CONTROLLER;\n}\n\nexport interface UPDATE_DATA extends IAction {\n  type: ActionTypes.UPDATE_DATA;\n}\n\nexport type Actions =\n  | SET_URL\n  | SIGN_IN\n  | SET_AUTH_TOKEN\n  | SET_AUTH_ERROR\n  | SIGN_OUT\n  | FETCH_PROJECTS\n  | SET_PROJECTS\n  | SET_PID\n  | FETCH_PROJECT\n  | SET_PROJECT\n  | FETCH_MILESTONES\n  | SET_MILESTONES\n  | SET_MID\n  | SET_CUSTOM_EID\n  | SET_CUSTOM_RID\n  | FETCH_CUSTOM_ATTRS\n  | SET_CUSTOM_ATTRS\n  | PATCH_CUSTOM_VALUE\n  | SET_BIZ_DAYS\n  | SET_BIZ_DAYS\n  | ADD_BIZ_DAY\n  | REMOVE_BIZ_DAY\n  | FETCH_TASKS\n  | SET_TASKS\n  | PATCH_TASK\n  | FETCH_CUSTOM_VALUE_MAP\n  | SET_CUSTOM_VALUE_MAP\n  | FETCH_TASK_STATUSES\n  | SET_TASK_STATUSES\n  | SET_ACTIVE_TASK_STATUSES\n  | FETCH_USER\n  | SET_USER\n  | RESET_USER\n  | ADD_REJECT_TASK_STATUS_ID\n  | REMOVE_REJECT_TASK_STATUS_ID\n  | OPEN_CONTROLLER\n  | CLOSE_CONTROLLER\n  | UPDATE_DATA;\n","import _ from \"lodash\";\nexport interface ICustomAttr {\n  id: number;\n  name: string;\n}\nexport interface IAuthToken {\n  auth_token: string;\n}\nexport interface IMilestone {\n  id: number;\n  name: string;\n  estimated_start: string;\n  estimated_finish: string;\n  slug: string;\n  project: number;\n  project_extra_info: IProjectExtraInfo;\n}\nexport interface IProjectExtraInfo {\n  id: number;\n  name: string;\n  slug: string;\n}\ninterface IStatusExtraInfo {\n  name: string;\n  is_closed: boolean;\n}\nexport interface IUserStoryExtraInfo {\n  id: number;\n  subject: string;\n  epics: any;\n  ref: number;\n}\nexport interface ITask {\n  id: number;\n  assigned_to: number | null;\n  created_date: string;\n  finished_date: string;\n  is_closed: boolean;\n  subject: string;\n  ref: number;\n  project: number;\n  project_extra_info: IProjectExtraInfo;\n  status: number;\n  status_extra_info: IStatusExtraInfo;\n  user_story: number;\n  user_story_extra_info: IUserStoryExtraInfo;\n  version: number;\n}\nexport interface ITasksByUserStory {\n  user_story: number;\n  user_story_extra_info: IUserStoryExtraInfo;\n  project_extra_info: IProjectExtraInfo;\n  tasks: ITask[];\n  is_closed: boolean;\n}\nexport interface ITaskStatus {\n  id: number;\n  color: string;\n  name: string;\n  order: number;\n  project: number;\n  is_closed: boolean;\n  slug: string;\n}\nexport interface IAttrValue {}\nexport interface ICustomValue {\n  attributes_values: {\n    [key: number]: string;\n  };\n  version: number;\n}\nexport interface IUser {\n  id: number;\n  username: string;\n  full_name: string;\n  full_name_display: string;\n  photo: string;\n}\nexport interface IProject {\n  id: number;\n  name: string;\n  members: IUser[];\n}\nexport type ICustomValueMap = WeakMap<ITask, ICustomValue>;\nexport interface IState {\n  url: string;\n  auth_token: string;\n  auth_error: boolean;\n  username: string;\n  password: string;\n  user: IUser | null;\n  projects: IProject[];\n  pid: string; // url\n  project: IProject;\n  mid: string; // url\n  custom_eid: string; //  pid\n  custom_rid: string; // pid\n  custom_attrs: ICustomAttr[]; // pid\n  biz_days: string[]; //mid\n  milestones: IMilestone[]; // pid\n  tasks: ITask[]; //mid\n  task_statuses: ITaskStatus[];\n  active_task_statuses: ITaskStatus[];\n  custom_value_map: ICustomValueMap; // pid\n  reject_task_status_ids: string[]; // pid\n  updated_time: number;\n  isOpen: boolean;\n}\n\nexport enum StorageKey {\n  URL = \"taiga_url\",\n  PID = \"taiga_pid\",\n  MID = \"taiga_mid\",\n  CUSTOM_EID = \"taiga_custom_eid\",\n  CUSTOM_RID = \"taiga_custom_rid\",\n  BIZ_DAYS = \"taiga_biz_days\",\n  REJECT_TASK_STATUS_IDS = \"reject_task_status_ids\",\n  USERNAME = \"taiga_username\",\n  PASSWORD = \"taiga_password\"\n}\n\nexport const getFromStorage = (key: string) => localStorage.getItem(key) || \"\";\n\nexport const getFromStorageWithSubkey = (key: StorageKey, subkey: string) =>\n  subkey ? getFromStorage(`${subkey}/${key}`) : \"\";\n\nexport const setToStorage = (key: string, item: string) => {\n  localStorage.setItem(key, item);\n};\nexport const setToStorageWithSubkey = (\n  key: StorageKey,\n  subkey: string,\n  item: string\n) => (subkey ? setToStorage(`${subkey}/${key}`, item) : null);\nexport const initialStateFn = (): IState => {\n  const url = getFromStorage(StorageKey.URL);\n  const pid = getFromStorage(StorageKey.PID);\n  const mid = getFromStorage(StorageKey.MID);\n  const custom_eid = getFromStorageWithSubkey(StorageKey.CUSTOM_EID, pid);\n  const custom_rid = getFromStorageWithSubkey(StorageKey.CUSTOM_RID, pid);\n  const biz_days_str = getFromStorageWithSubkey(StorageKey.BIZ_DAYS, mid);\n  const biz_days = _.compact(biz_days_str.split(\",\")).sort();\n  const reject_task_status_ids = _.compact(\n    getFromStorageWithSubkey(StorageKey.REJECT_TASK_STATUS_IDS, pid).split(\",\")\n  );\n  const isOpen = !(url && pid && mid && custom_eid && custom_rid);\n  return {\n    url,\n    auth_token: \"\",\n    auth_error: false,\n    username: \"\",\n    password: \"\",\n    user: null,\n    projects: [],\n    pid,\n    project: {} as IProject,\n    mid,\n    custom_eid,\n    custom_rid,\n    custom_attrs: [],\n    biz_days,\n    milestones: [],\n    tasks: [],\n    task_statuses: [],\n    active_task_statuses: [],\n    custom_value_map: new WeakMap(),\n    reject_task_status_ids,\n    updated_time: 0,\n    isOpen\n  };\n};\n","import { Dispatch, useCallback } from \"react\";\n\nexport type SideEffector<S, A> = (\n  action: A,\n  dispatch: Dispatch<A>,\n  state: () => S\n) => void;\nlet ss: any;\nexport const useSideEffector = <S, A>(\n  [state, dispatch]: [S, Dispatch<A>],\n  sideEffector: SideEffector<S, A>\n): [S, Dispatch<A>] => {\n  let dispatchSE: Dispatch<A> | null = null;\n\n  const dispatchSECaller = useCallback(\n    (action: A) => {\n      dispatchSE && dispatchSE(action);\n    },\n    [dispatchSE]\n  );\n  ss = state;\n  const getState = () => ss;\n  dispatchSE = useCallback(\n    dispatchSideEffector<S, A>(\n      getState,\n      dispatch,\n      sideEffector,\n      dispatchSECaller\n    ),\n    []\n  );\n  return [state, dispatchSE];\n};\n\nconst dispatchSideEffector = <S, A>(\n  state: () => S,\n  dispatch: Dispatch<A>,\n  sideEffector: SideEffector<S, A>,\n  dispatchSECaller: Dispatch<A>\n) => (action: A) => {\n  dispatch(action);\n  sideEffector(action, dispatchSECaller, state);\n};\n","import _ from \"lodash\";\nimport axios from \"axios\";\nimport {\n  initialStateFn,\n  StorageKey,\n  IProject,\n  ICustomValueMap,\n  setToStorage,\n  setToStorageWithSubkey,\n  getFromStorageWithSubkey\n} from \"./store\";\nimport { ActionTypes, Actions } from \"./actions\";\nexport const reducer = (state = initialStateFn(), action: Actions) => {\n  switch (action.type) {\n    case ActionTypes.SET_URL: {\n      const { url } = action.payload;\n      setToStorage(StorageKey.URL, url);\n      return { ...state, url };\n    }\n    case ActionTypes.SET_PROJECTS: {\n      const { projects } = action.payload;\n      return {\n        ...state,\n        projects\n      };\n    }\n    case ActionTypes.SET_PID: {\n      const { pid } = action.payload;\n      setToStorage(StorageKey.PID, pid);\n      return {\n        ...state,\n        pid,\n        project: {} as IProject,\n        mid: \"\",\n        custom_eid: getFromStorageWithSubkey(StorageKey.CUSTOM_EID, pid),\n        custom_rid: getFromStorageWithSubkey(StorageKey.CUSTOM_RID, pid),\n        custom_attrs: [],\n        milestones: [],\n        custom_value_map: new WeakMap() as ICustomValueMap\n      };\n    }\n    case ActionTypes.SET_PROJECT: {\n      const { project } = action.payload;\n      return {\n        ...state,\n        project\n      };\n    }\n    case ActionTypes.SET_MID: {\n      const { mid } = action.payload;\n      setToStorage(StorageKey.MID, mid);\n      return {\n        ...state,\n        mid,\n        tasks: [],\n        biz_days: _.compact(\n          getFromStorageWithSubkey(StorageKey.BIZ_DAYS, mid).split(\",\")\n        ).sort()\n      };\n    }\n    case ActionTypes.SET_MILESTONES: {\n      const { milestones } = action.payload;\n      return { ...state, milestones };\n    }\n    case ActionTypes.SET_CUSTOM_EID: {\n      const { custom_eid } = action.payload;\n      setToStorageWithSubkey(StorageKey.CUSTOM_EID, state.pid, custom_eid);\n      return { ...state, custom_eid };\n    }\n    case ActionTypes.SET_CUSTOM_ATTRS: {\n      const { custom_attrs } = action.payload;\n      return { ...state, custom_attrs };\n    }\n    case ActionTypes.SET_CUSTOM_RID: {\n      const { custom_rid } = action.payload;\n      setToStorageWithSubkey(StorageKey.CUSTOM_RID, state.pid, custom_rid);\n      return { ...state, custom_rid };\n    }\n    case ActionTypes.SET_BIZ_DAYS: {\n      const { biz_days } = action.payload;\n      setToStorageWithSubkey(\n        StorageKey.BIZ_DAYS,\n        state.mid,\n        biz_days.join(\",\")\n      );\n      return { ...state, biz_days };\n    }\n    case ActionTypes.ADD_BIZ_DAY: {\n      const { biz_day } = action.payload;\n      const biz_days = _.chain([...state.biz_days, biz_day])\n        .uniq()\n        .sort()\n        .value();\n      setToStorageWithSubkey(\n        StorageKey.BIZ_DAYS,\n        state.mid,\n        biz_days.join(\",\")\n      );\n      return { ...state, biz_days };\n    }\n    case ActionTypes.REMOVE_BIZ_DAY: {\n      const { biz_day } = action.payload;\n      const biz_days = _.reject([...state.biz_days], item => item === biz_day);\n      setToStorageWithSubkey(\n        StorageKey.BIZ_DAYS,\n        state.mid,\n        biz_days.join(\",\")\n      );\n      return { ...state, biz_days };\n    }\n    case ActionTypes.SET_TASKS: {\n      const { tasks } = action.payload;\n      return { ...state, tasks };\n    }\n    case ActionTypes.SET_TASK_STATUSES: {\n      const { task_statuses } = action.payload;\n      return { ...state, task_statuses };\n    }\n    case ActionTypes.SET_ACTIVE_TASK_STATUSES: {\n      const { active_task_statuses } = action.payload;\n      return { ...state, active_task_statuses };\n    }\n    case ActionTypes.SET_CUSTOM_VALUE_MAP: {\n      const { custom_value_map } = action.payload;\n      return { ...state, custom_value_map };\n    }\n    case ActionTypes.SET_USER: {\n      const { user } = action.payload;\n      return { ...state, user };\n    }\n    case ActionTypes.RESET_USER: {\n      return { ...state, user: null };\n    }\n    case ActionTypes.ADD_REJECT_TASK_STATUS_ID: {\n      const { reject_task_status_id } = action.payload;\n      const reject_task_status_ids = _.chain([\n        ...state.reject_task_status_ids,\n        reject_task_status_id\n      ])\n        .compact()\n        .uniq()\n        .value();\n      setToStorageWithSubkey(\n        StorageKey.REJECT_TASK_STATUS_IDS,\n        state.pid,\n        reject_task_status_ids.join(\",\")\n      );\n      return { ...state, reject_task_status_ids };\n    }\n    case ActionTypes.REMOVE_REJECT_TASK_STATUS_ID: {\n      const { reject_task_status_id } = action.payload;\n      const reject_task_status_ids = _.reject(\n        [...state.reject_task_status_ids],\n        item => item === reject_task_status_id\n      );\n      setToStorageWithSubkey(\n        StorageKey.REJECT_TASK_STATUS_IDS,\n        state.pid,\n        reject_task_status_ids.join(\",\")\n      );\n      return { ...state, reject_task_status_ids };\n    }\n    case ActionTypes.OPEN_CONTROLLER: {\n      return { ...state, isOpen: true };\n    }\n    case ActionTypes.CLOSE_CONTROLLER: {\n      return { ...state, isOpen: false };\n    }\n    case ActionTypes.UPDATE_DATA: {\n      return { ...state, updated_time: Date.now() };\n    }\n    case ActionTypes.SIGN_IN: {\n      const { username, password } = action.payload;\n      return { ...state, username, password, auth_error: false };\n    }\n    case ActionTypes.SET_AUTH_TOKEN: {\n      const { auth_token } = action.payload;\n      axios.defaults.headers.common[\"Authorization\"] = `Bearer ${auth_token}`;\n      return { ...state, auth_token };\n    }\n    case ActionTypes.SET_AUTH_ERROR: {\n      return { ...state, auth_error: true };\n    }\n    case ActionTypes.SIGN_OUT: {\n      if (axios.defaults.headers.common[\"Authorization\"]) {\n        delete axios.defaults.headers.common[\"Authorization\"];\n      }\n      return { ...state, auth_token: \"\", username: \"\", password: \"\" };\n    }\n    default: {\n      return state;\n    }\n  }\n};\n","import { IProject } from \"../store\";\nimport { ISideEffector, fetchData, ActionTypes } from \".\";\nexport const fetchProjecs: ISideEffector = async (action, dispatch, state) => {\n  try {\n    const { url } = state();\n    if (url) {\n      const { data: projects } = await fetchData<IProject[]>(url, \"projects\");\n      dispatch({ type: ActionTypes.SET_PROJECTS, payload: { projects } });\n    }\n  } catch (e) {\n    console.log(\"err:fetchProjects\", e);\n  }\n};\n","import { IProject } from \"../store\";\nimport { ISideEffector, fetchData, ActionTypes } from \".\";\nexport const fetchProject: ISideEffector = async (action, dispatch, state) => {\n  if (action.type === ActionTypes.FETCH_PROJECT) {\n    try {\n      const { url } = state();\n      const { pid } = action.payload;\n      if (url && pid) {\n        const { data: project } = await fetchData<IProject>(\n          url,\n          `projects/${pid}`\n        );\n        dispatch({\n          type: ActionTypes.SET_PROJECT,\n          payload: { project }\n        });\n      }\n    } catch (e) {\n      console.log(\"err:fetchProject\", e);\n    }\n  }\n};\n","import { IMilestone } from \"../store\";\nimport { ISideEffector, fetchData, ActionTypes } from \".\";\nexport const fetchMilestones: ISideEffector = async (\n  action,\n  dispatch,\n  state\n) => {\n  if (action.type === ActionTypes.FETCH_MILESTONES) {\n    try {\n      const { url } = state();\n      const { project } = action.payload;\n      if (url && project) {\n        const { data: milestones } = await fetchData<IMilestone[]>(\n          url,\n          \"milestones\",\n          { params: { project } }\n        );\n        dispatch({ type: ActionTypes.SET_MILESTONES, payload: { milestones } });\n      }\n    } catch (e) {\n      console.log(\"err:fetchMilestones\", e);\n    }\n  }\n};\n","import { ITask } from \"../store\";\nimport { ISideEffector, fetchData, ActionTypes } from \".\";\nimport _ from \"lodash\";\nexport const fetchTasks: ISideEffector = async (action, dispatch, state) => {\n  if (action.type === ActionTypes.FETCH_TASKS) {\n    try {\n      const { url, reject_task_status_ids } = state();\n      const { milestone } = action.payload;\n      if (url && milestone) {\n        const { data } = await fetchData<ITask[]>(url, \"tasks\", {\n          headers: { \"x-disable-pagination\": true },\n          params: { milestone }\n        });\n        const tasks = data.filter(\n          item => !_.includes(reject_task_status_ids, String(item.status))\n        );\n        dispatch({ type: ActionTypes.SET_TASKS, payload: { tasks } });\n      }\n    } catch (e) {\n      console.log(\"err:fetchTasks\", e);\n    }\n  }\n};\n","import { ITaskStatus } from \"../store\";\nimport { ISideEffector, fetchData, ActionTypes } from \".\";\nexport const fetchTaskStatuses: ISideEffector = async (\n  action,\n  dispatch,\n  state\n) => {\n  if (action.type === ActionTypes.FETCH_TASK_STATUSES) {\n    try {\n      const { url } = state();\n      const { project } = action.payload;\n      if (url && project) {\n        const { data: task_statuses } = await fetchData<ITaskStatus[]>(\n          url,\n          \"task-statuses\",\n          { params: { project } }\n        );\n        dispatch({\n          type: ActionTypes.SET_TASK_STATUSES,\n          payload: { task_statuses }\n        });\n      }\n    } catch (e) {\n      console.log(\"err:fetchTaskStatuses\", e);\n    }\n  }\n};\n","import { ICustomAttr } from \"../store\";\nimport { ISideEffector, fetchData, ActionTypes } from \".\";\nexport const fetchCustomAttrs: ISideEffector = async (\n  action,\n  dispatch,\n  state\n) => {\n  if (action.type === ActionTypes.FETCH_CUSTOM_ATTRS) {\n    try {\n      const { url } = state();\n      const { project } = action.payload;\n      if (url && project) {\n        const { data: custom_attrs } = await fetchData<ICustomAttr[]>(\n          url,\n          \"task-custom-attributes\",\n          { params: { project } }\n        );\n        dispatch({\n          type: ActionTypes.SET_CUSTOM_ATTRS,\n          payload: { custom_attrs }\n        });\n      }\n    } catch (e) {\n      console.log(\"err:fetchCustomAttrs\", e);\n    }\n  }\n};\n","import { ITask, ICustomValue } from \"../store\";\nimport { ISideEffector, fetchData, ActionTypes } from \".\";\nexport const fetchCustomValueMap: ISideEffector = async (\n  action,\n  dispatch,\n  state\n) => {\n  if (action.type === ActionTypes.FETCH_CUSTOM_VALUE_MAP) {\n    try {\n      const { url, custom_eid, custom_rid } = state();\n      const { tasks } = action.payload;\n      if (url && tasks.length && custom_eid && custom_rid) {\n        const custom_value_map = new WeakMap(\n          await Promise.all(\n            tasks.map(async item => {\n              const { data: custom_attr_val } = await fetchData<ICustomValue>(\n                url,\n                `tasks/custom-attributes-values/${item.id}`\n              );\n              return [item, custom_attr_val] as [ITask, ICustomValue];\n            })\n          )\n        );\n        dispatch({\n          type: ActionTypes.SET_CUSTOM_VALUE_MAP,\n          payload: { custom_value_map }\n        });\n      }\n    } catch (e) {\n      console.log(\"err:fetchCustomValueMap\", e);\n    }\n  }\n};\n","import { IUser } from \"../store\";\nimport { ISideEffector, fetchData, ActionTypes } from \".\";\nexport const fetchUser: ISideEffector = async (action, dispatch, state) => {\n  if (action.type === ActionTypes.FETCH_USER) {\n    try {\n      const { url } = state();\n      const { uid } = action.payload;\n      if (url && uid) {\n        const { data: user } = await fetchData<IUser>(url, `users/${uid}`);\n        dispatch({\n          type: ActionTypes.SET_USER,\n          payload: { user }\n        });\n      }\n    } catch (e) {\n      console.log(\"err:fetchUser\", e);\n    }\n  }\n};\n","import { ISideEffector, patchData, ActionTypes } from \".\";\nexport const patchCustomValue: ISideEffector = async (\n  action,\n  dispatch,\n  state\n) => {\n  if (action.type === ActionTypes.PATCH_CUSTOM_VALUE) {\n    try {\n      const { url, custom_value_map, tasks } = state();\n      const { id, key, value, version } = action.payload;\n      const task = tasks.find(task => task.id === id);\n      if (url && id && key && task && custom_value_map.has(task)) {\n        const custom_value = custom_value_map.get(task);\n        if (custom_value) {\n          const { attributes_values } = custom_value;\n          await patchData(url, `tasks/custom-attributes-values/${id}`, {\n            attributes_values: {\n              ...attributes_values,\n              [key]: String(value)\n            },\n            version\n          });\n          dispatch({ type: ActionTypes.UPDATE_DATA });\n        }\n      }\n    } catch (e) {\n      console.log(\"err:patchCustomValue\", e);\n    }\n  }\n};\n","import { ActionTypes, ISideEffector, patchData } from \".\";\nexport const patchTask: ISideEffector = async (action, dispatch, state) => {\n  if (action.type === ActionTypes.PATCH_TASK) {\n    try {\n      const { url, tasks } = state();\n      const { id, key, value } = action.payload;\n      const task = tasks.find(task => task.id === id);\n      if (url && id && key && task) {\n        await patchData(url, `tasks/${id}`, {\n          [key]: value,\n          version: task.version\n        });\n        dispatch({ type: ActionTypes.UPDATE_DATA });\n      }\n    } catch (e) {\n      console.log(\"err:patchTask\", e);\n    }\n  }\n};\n","import React from \"react\";\nimport { toast } from \"react-toastify\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faInfoCircle,\n  faCheck,\n  faCheckCircle,\n  faExclamationTriangle\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { IconProp } from \"@fortawesome/fontawesome-svg-core\";\ninterface MessageWithIconProps {\n  icon: IconProp;\n  message: string;\n}\nconst MessageWithIcon: React.FC<MessageWithIconProps> = ({ icon, message }) => {\n  return (\n    <div className=\"d-flex\">\n      <h2 className=\"mr-2\">\n        <FontAwesomeIcon icon={icon} />\n      </h2>\n      <div>{message}</div>\n    </div>\n  );\n};\nexport const toastr = {\n  info: (message: string) => {\n    toast.info(<MessageWithIcon icon={faInfoCircle} message={message} />);\n  },\n  success: (message: string) => {\n    toast.success(<MessageWithIcon icon={faCheck} message={message} />);\n  },\n  warn: (message: string) => {\n    toast.warn(\n      <MessageWithIcon icon={faExclamationTriangle} message={message} />\n    );\n  },\n  error: (message: string) => {\n    toast.error(<MessageWithIcon icon={faCheckCircle} message={message} />);\n  }\n};\n","import { IAuthToken, StorageKey, setToStorage } from \"../store\";\nimport { ISideEffector, postData, ActionTypes, errToastr } from \".\";\nimport { toastr } from \"../util/toastr\";\nexport const signIn: ISideEffector = async (action, dispatch, state) => {\n  if (action.type === ActionTypes.SIGN_IN) {\n    try {\n      const { url } = state();\n      const { username, password } = action.payload;\n      if (url && username && password) {\n        const {\n          data: { auth_token }\n        } = await postData<IAuthToken>(url, \"auth\", {\n          username,\n          password,\n          type: \"normal\"\n        });\n        dispatch({ type: ActionTypes.SET_AUTH_TOKEN, payload: { auth_token } });\n        setToStorage(StorageKey.USERNAME, username);\n        setToStorage(StorageKey.PASSWORD, password);\n        toastr.success(`${username} signed in.`);\n      }\n    } catch (e) {\n      dispatch({ type: ActionTypes.SET_AUTH_ERROR });\n      dispatch({ type: ActionTypes.SIGN_OUT });\n      errToastr(e);\n    }\n  }\n};\n","import { Dispatch } from \"react\";\nimport { Actions, ActionTypes } from \"../actions\";\nimport { IState } from \"../store\";\nimport { baseUrl } from \"../Provider\";\nimport { fetchProjecs } from \"./fetchProjects\";\nimport { fetchProject } from \"./fetchProject\";\nimport { fetchMilestones } from \"./fetchMilestones\";\nimport { fetchTasks } from \"./fetchTasks\";\nimport { fetchTaskStatuses } from \"./fetchTaskStatuses\";\nimport { fetchCustomAttrs } from \"./fetchCustomAttrs\";\nimport { fetchCustomValueMap } from \"./fetchCustomValueMap\";\nimport { fetchUser } from \"./fetchUser\";\nimport { patchCustomValue } from \"./patchCustomValue\";\nimport { patchTask } from \"./patchTask\";\nimport { signIn } from \"./signIn\";\nimport { signOut } from \"./signOut\";\nimport axios, { AxiosRequestConfig, AxiosError } from \"axios\";\nimport { toastr } from \"../util/toastr\";\nexport { ActionTypes };\nexport type ISideEffector = (\n  action: Actions,\n  dispatch: Dispatch<Actions>,\n  state: () => IState\n) => void;\nexport const fetchData = <T>(\n  url: string,\n  path: string,\n  config?: AxiosRequestConfig\n) => axios.get<T>(`${baseUrl(url)}/${path}`, config);\nexport const postData = <T>(\n  url: string,\n  path: string,\n  data: object,\n  config?: AxiosRequestConfig\n) => axios.post<T>(`${baseUrl(url)}/${path}`, data, config);\nexport const patchData = (\n  url: string,\n  path: string,\n  data: object,\n  config?: AxiosRequestConfig\n) => axios.patch(`${baseUrl(url)}/${path}`, data, config);\nexport const errToastr = (err: AxiosError) => {\n  const message = err.response ? err.response.data._error_message : \"error\";\n  toastr.error(message);\n};\nexport const rootSideEffector = (\n  action: Actions,\n  dispatch: Dispatch<Actions>,\n  state: () => IState\n) => {\n  switch (action.type) {\n    case ActionTypes.FETCH_PROJECTS: {\n      fetchProjecs(action, dispatch, state);\n      return;\n    }\n    case ActionTypes.FETCH_PROJECT: {\n      fetchProject(action, dispatch, state);\n      return;\n    }\n    case ActionTypes.FETCH_MILESTONES: {\n      fetchMilestones(action, dispatch, state);\n      return;\n    }\n    case ActionTypes.FETCH_TASKS: {\n      fetchTasks(action, dispatch, state);\n      return;\n    }\n    case ActionTypes.FETCH_TASK_STATUSES: {\n      fetchTaskStatuses(action, dispatch, state);\n      return;\n    }\n    case ActionTypes.FETCH_CUSTOM_ATTRS: {\n      fetchCustomAttrs(action, dispatch, state);\n      return;\n    }\n    case ActionTypes.FETCH_CUSTOM_VALUE_MAP: {\n      fetchCustomValueMap(action, dispatch, state);\n      return;\n    }\n    case ActionTypes.FETCH_USER: {\n      fetchUser(action, dispatch, state);\n      return;\n    }\n    case ActionTypes.PATCH_CUSTOM_VALUE: {\n      patchCustomValue(action, dispatch, state);\n      return;\n    }\n    case ActionTypes.SIGN_IN: {\n      signIn(action, dispatch, state);\n      return;\n    }\n    case ActionTypes.PATCH_TASK: {\n      patchTask(action, dispatch, state);\n      return;\n    }\n    case ActionTypes.SIGN_OUT: {\n      signOut(action, dispatch, state);\n      return;\n    }\n\n    default: {\n    }\n  }\n};\n","import { StorageKey } from \"../store\";\nimport { ISideEffector, ActionTypes } from \".\";\nexport const signOut: ISideEffector = (action, dispatch, state) => {\n  if (action.type === ActionTypes.SIGN_OUT) {\n    localStorage.removeItem(StorageKey.USERNAME);\n    localStorage.removeItem(StorageKey.PASSWORD);\n  }\n};\n","import React, { createContext, useReducer, useEffect } from \"react\";\nimport _ from \"lodash\";\nimport { ActionTypes } from \"./actions\";\nimport { initialStateFn } from \"./store\";\nimport { reducer } from \"./reducer\";\nimport { Actions } from \"./actions\";\nimport { useSideEffector } from \"./util/useSideEffector\";\nimport { rootSideEffector } from \"./sideEffectors\";\nimport { init } from \"./init\";\nexport const baseUrl = (url: string) => `${url.replace(/[¥/]$/, \"\")}/api/v1`;\n\nconst initialState = initialStateFn();\nexport const RootContext = createContext({\n  state: initialState,\n  dispatch: (action: Actions) => {}\n});\nexport const Provider = ({ children }: { children: React.ReactNode }) => {\n  const [state, dispatch] = useSideEffector(\n    useReducer(reducer, initialState),\n    rootSideEffector\n  );\n  const value = {\n    state,\n    dispatch\n  };\n\n  useEffect(() => {\n    if (state.url) {\n      dispatch({ type: ActionTypes.FETCH_PROJECTS });\n    }\n  }, [dispatch, state.url]);\n  useEffect(() => {\n    if (state.url && state.pid) {\n      dispatch({\n        type: ActionTypes.FETCH_MILESTONES,\n        payload: { project: state.pid }\n      });\n      dispatch({\n        type: ActionTypes.FETCH_CUSTOM_ATTRS,\n        payload: { project: state.pid }\n      });\n      dispatch({\n        type: ActionTypes.FETCH_TASK_STATUSES,\n        payload: { project: state.pid }\n      });\n      dispatch({\n        type: ActionTypes.FETCH_PROJECT,\n        payload: { pid: state.pid }\n      });\n    }\n  }, [state.url, state.pid, dispatch]);\n  useEffect(() => {\n    if (state.url && state.mid) {\n      dispatch({\n        type: ActionTypes.FETCH_TASKS,\n        payload: {\n          milestone: state.mid,\n          reject_task_status_ids: state.reject_task_status_ids\n        }\n      });\n    }\n  }, [\n    state.url,\n    state.mid,\n    state.updated_time,\n    state.reject_task_status_ids,\n    dispatch\n  ]);\n  useEffect(() => {\n    dispatch({\n      type: ActionTypes.FETCH_CUSTOM_VALUE_MAP,\n      payload: {\n        tasks: state.tasks\n      }\n    });\n  }, [dispatch, state.tasks, state.custom_eid, state.custom_rid]);\n  useEffect(() => {\n    const active_task_statuses = _.chain(state.task_statuses)\n      .reject(item => _.includes(state.reject_task_status_ids, String(item.id)))\n      .orderBy(item => item.order)\n      .value();\n    dispatch({\n      type: ActionTypes.SET_ACTIVE_TASK_STATUSES,\n      payload: { active_task_statuses }\n    });\n  }, [state.task_statuses, state.reject_task_status_ids, dispatch]);\n  useEffect(() => {\n    init(dispatch);\n  }, [dispatch]);\n  return <RootContext.Provider value={value}>{children}</RootContext.Provider>;\n};\n","import { Dispatch } from \"react\";\nimport { Actions, ActionTypes } from \"./actions\";\nimport { getFromStorage, StorageKey } from \"./store\";\nexport const init = (dispatch: Dispatch<Actions>) => {\n  const username = getFromStorage(StorageKey.USERNAME);\n  const password = getFromStorage(StorageKey.PASSWORD);\n  dispatch({ type: ActionTypes.SIGN_IN, payload: { username, password } });\n};\n","import React from \"react\";\nexport const preventDefault = (e: React.FormEvent) => {\n  e.preventDefault();\n};\nexport const stopPropagation = (e: React.FormEvent) => {\n  e.stopPropagation();\n};\n","import React, { useCallback, useContext } from \"react\";\nimport { Input, InputGroup, InputGroupAddon } from \"reactstrap\";\nimport { RootContext } from \"../Provider\";\nimport { ActionTypes } from \"../actions\";\nexport const ProjectSelector = () => {\n  const {\n    state: { pid, projects },\n    dispatch\n  } = useContext(RootContext);\n  const handleChange = useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>) => {\n      const id = e.target.value;\n      if (id) {\n        dispatch({ type: ActionTypes.SET_PID, payload: { pid: id } });\n      }\n    },\n    [dispatch]\n  );\n  return (\n    <InputGroup className=\"col\">\n      <InputGroupAddon addonType=\"prepend\">Project</InputGroupAddon>\n      <Input value={pid} type=\"select\" onChange={handleChange}>\n        <option value=\"\"> --- </option>\n        {projects.map(item => (\n          <option key={item.id} value={item.id}>\n            {item.name}\n          </option>\n        ))}\n      </Input>\n    </InputGroup>\n  );\n};\n","import React, { useCallback, useContext } from \"react\";\nimport { Input, InputGroup, InputGroupAddon } from \"reactstrap\";\nimport { RootContext } from \"../Provider\";\nimport { ActionTypes } from \"../actions\";\n\nexport const MilestoneSelector = () => {\n  const {\n    state: { milestones, mid },\n    dispatch\n  } = useContext(RootContext);\n  const handleChange = useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>) => {\n      const id = e.target.value;\n      if (id) {\n        dispatch({ type: ActionTypes.SET_MID, payload: { mid: id } });\n      }\n    },\n    [dispatch]\n  );\n\n  return (\n    <InputGroup className=\"col\">\n      <InputGroupAddon addonType=\"prepend\">Sprint</InputGroupAddon>\n      <Input type=\"select\" value={mid} onChange={handleChange}>\n        <option value=\"\"> --- </option>\n        {milestones.map(item => (\n          <option key={item.id} value={item.id}>\n            {item.name}\n          </option>\n        ))}\n      </Input>\n    </InputGroup>\n  );\n};\n","import React, { useCallback, useContext } from \"react\";\nimport { Input, InputGroup, InputGroupAddon } from \"reactstrap\";\nimport { RootContext } from \"../Provider\";\nimport { ActionTypes } from \"../actions\";\n\nexport const CustomValuesSelector = () => {\n  const {\n    state: { custom_attrs, custom_eid, custom_rid },\n    dispatch\n  } = useContext(RootContext);\n  const handleChange = useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>) => {\n      const id = e.target.value;\n      if (id) {\n        switch (e.target.name) {\n          case \"eid\": {\n            dispatch({\n              type: ActionTypes.SET_CUSTOM_EID,\n              payload: { custom_eid: id }\n            });\n            break;\n          }\n          case \"rid\": {\n            dispatch({\n              type: ActionTypes.SET_CUSTOM_RID,\n              payload: { custom_rid: id }\n            });\n            break;\n          }\n          default:\n            console.log(\"other id\");\n        }\n      }\n    },\n    [dispatch]\n  );\n  return (\n    <div className=\"row\">\n      <InputGroup className=\"col\">\n        <InputGroupAddon addonType=\"prepend\">Estimate</InputGroupAddon>\n        <Input\n          value={custom_eid}\n          name=\"eid\"\n          type=\"select\"\n          onChange={handleChange}\n        >\n          <option value=\"\"> --- </option>\n          {custom_attrs.map(item => (\n            <option key={item.id} value={item.id}>\n              {item.name}\n            </option>\n          ))}\n        </Input>\n      </InputGroup>\n      <InputGroup className=\"col\">\n        <InputGroupAddon addonType=\"prepend\">Result</InputGroupAddon>\n        <Input\n          value={custom_rid}\n          name=\"rid\"\n          type=\"select\"\n          onChange={handleChange}\n        >\n          <option> --- </option>\n          {custom_attrs.map(item => (\n            <option key={item.id} value={item.id}>\n              {item.name}\n            </option>\n          ))}\n        </Input>\n      </InputGroup>\n    </div>\n  );\n};\n","import React, { useEffect, useState, useContext, useCallback } from \"react\";\nimport classNames from \"classnames\";\nimport {\n  UncontrolledTooltip,\n  Table,\n  Card,\n  CardHeader,\n  Input,\n  Label,\n  FormGroup\n} from \"reactstrap\";\nimport { IMilestone } from \"../store\";\nimport { RootContext } from \"../Provider\";\nimport moment, { Moment } from \"moment\";\nimport biz from \"moment-business\";\nimport _ from \"lodash\";\nimport { ActionTypes } from \"../actions\";\nexport const isToday = (date: string) =>\n  moment()\n    .local()\n    .format(\"YYYY-MM-DD\") ===\n  moment(date)\n    .local()\n    .format(\"YYYY-MM-DD\");\n\nexport const dayNameFromIdx = (date: string, idx: number) => {\n  if (idx === -1) {\n    return \"\";\n  }\n  if (idx === 0) {\n    return \"Planning\";\n  }\n  return `Day ${idx}`;\n};\n\nexport const dayName = (date: string, biz_days: string[]) => {\n  const idx = biz_days.indexOf(date);\n  return dayNameFromIdx(date, idx);\n};\nexport const getMilestone = (mid: string, items: IMilestone[]) =>\n  items.find(item => String(item.id) === mid);\nconst getDays = (item: IMilestone) => {\n  const startM = moment(item.estimated_start).local();\n  const finishM = moment(item.estimated_finish).local();\n  const daysInSprint = finishM.diff(startM, \"days\");\n  return _.times(daysInSprint).map(i => startM.clone().add(i, \"days\"));\n};\nconst getDefaultBizDays = (items: Moment[]) =>\n  items\n    .filter(item => biz.isWeekDay(item))\n    .map(item => item.format(\"YYYY-MM-DD\"));\n\nconst weekClassName = (day: number) => ({\n  \"text-danger\": day === 0,\n  \"text-info\": day === 6\n});\n\nconst DayItem = ({\n  item,\n  biz_days,\n  idx\n}: {\n  item: Moment | null;\n  biz_days: string[];\n  idx: number;\n}) => {\n  const { dispatch } = useContext(RootContext);\n  const handleChange = useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>) => {\n      const biz_day = e.target.value;\n      if (e.target.checked) {\n        dispatch({ type: ActionTypes.ADD_BIZ_DAY, payload: { biz_day } });\n      } else {\n        dispatch({ type: ActionTypes.REMOVE_BIZ_DAY, payload: { biz_day } });\n      }\n    },\n    [dispatch]\n  );\n  if (!item) {\n    return (\n      <td>\n        <br />\n      </td>\n    );\n  }\n  const value = item.format(\"YYYY-MM-DD\");\n  const isPlanning = value === biz_days[0];\n  const eleId = `biz-day-${value}`;\n  return (\n    <>\n      <td\n        className={classNames(weekClassName(idx), { \"table-info\": isPlanning })}\n        id={eleId}\n      >\n        {biz.isWeekDay(item) ? (\n          <FormGroup check inline>\n            <Label check>\n              <Input\n                onChange={handleChange}\n                disabled={biz.isWeekendDay(item)}\n                value={value}\n                type=\"checkbox\"\n                checked={_.includes(biz_days, value)}\n                className=\"form-check-input\"\n              />\n              {value}\n            </Label>\n          </FormGroup>\n        ) : (\n          <span>{value}</span>\n        )}\n      </td>\n      {_.includes(biz_days, value) ? (\n        <UncontrolledTooltip target={eleId}>\n          {dayName(value, biz_days)}\n        </UncontrolledTooltip>\n      ) : null}\n    </>\n  );\n};\n\nexport const DaysSelector = () => {\n  const {\n    state: { mid, milestones, biz_days },\n    dispatch\n  } = useContext(RootContext);\n  const [items, setItems] = useState<Moment[]>([]);\n  useEffect(() => {\n    const milestone = getMilestone(mid, milestones);\n    if (milestone) {\n      const items = getDays(milestone);\n      setItems(items);\n      if (biz_days.length <= 1) {\n        dispatch({\n          type: ActionTypes.SET_BIZ_DAYS,\n          payload: { biz_days: getDefaultBizDays(items) }\n        });\n      }\n    }\n  }, [mid, milestones, biz_days, dispatch]);\n  if (items.length === 0) {\n    return null;\n  } else {\n    const weekdays = _.chunk(\n      [..._.times(items[0].day(), () => null), ...items],\n      7\n    );\n    return (\n      <Card>\n        <CardHeader>Business Days</CardHeader>\n        <Table bordered>\n          <thead>\n            <tr>\n              {moment.weekdays().map((item, idx) => (\n                <th\n                  key={idx}\n                  className={classNames(\"text-center\", weekClassName(idx))}\n                >\n                  {item}\n                </th>\n              ))}\n            </tr>\n          </thead>\n          <tbody>\n            {weekdays.map((days, i) => (\n              <tr key={i}>\n                {days.map((item, idx) => (\n                  <DayItem\n                    idx={idx}\n                    key={idx}\n                    item={item}\n                    biz_days={biz_days}\n                  />\n                ))}\n              </tr>\n            ))}\n          </tbody>\n        </Table>\n      </Card>\n    );\n  }\n};\n","import React, { useCallback, useContext } from \"react\";\nimport _ from \"lodash\";\nimport { RootContext } from \"../Provider\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  Input,\n  FormGroup,\n  Label\n} from \"reactstrap\";\nimport { ITaskStatus } from \"../store\";\nimport { ActionTypes } from \"../actions\";\nconst StatusItem = ({ item }: { item: ITaskStatus }) => {\n  const {\n    state: { reject_task_status_ids },\n    dispatch\n  } = useContext(RootContext);\n  const handleChange = useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>) => {\n      const reject_task_status_id = e.target.value;\n      if (e.target.checked) {\n        dispatch({\n          type: ActionTypes.REMOVE_REJECT_TASK_STATUS_ID,\n          payload: { reject_task_status_id }\n        });\n      } else {\n        dispatch({\n          type: ActionTypes.ADD_REJECT_TASK_STATUS_ID,\n          payload: { reject_task_status_id }\n        });\n      }\n    },\n    [dispatch]\n  );\n  return (\n    <FormGroup check inline>\n      <Label check>\n        <Input\n          onChange={handleChange}\n          type=\"checkbox\"\n          value={item.id}\n          defaultChecked={!_.includes(reject_task_status_ids, String(item.id))}\n        />\n        {item.name}\n      </Label>\n    </FormGroup>\n  );\n};\nexport const TaskStatusSelector = () => {\n  const {\n    state: { task_statuses }\n  } = useContext(RootContext);\n  if (task_statuses.length === 0) {\n    return null;\n  }\n  return (\n    <Card>\n      <CardHeader>Task status</CardHeader>\n      <CardBody>\n        {task_statuses.map(item => (\n          <StatusItem key={item.id} item={item} />\n        ))}\n      </CardBody>\n    </Card>\n  );\n};\n","import React, { useContext, useState, useCallback } from \"react\";\nimport _ from \"lodash\";\nimport classNames from \"classnames\";\nimport { RootContext } from \"../Provider\";\nimport {\n  Card,\n  CardHeader,\n  Collapse,\n  Form,\n  Input,\n  InputGroup,\n  InputGroupAddon,\n  Button,\n  Badge\n} from \"reactstrap\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faChevronCircleRight,\n  faExternalLinkAlt\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { stopPropagation } from \"../util/handler\";\nimport { ProjectSelector } from \"./ProjectSelector\";\nimport { MilestoneSelector } from \"./MilestoneSelector\";\nimport { CustomValuesSelector } from \"./CustomValuesSelector\";\nimport { DaysSelector, getMilestone } from \"./DaysSelector\";\nimport { TaskStatusSelector } from \"./TaskStatusSelector\";\nimport { IMilestone } from \"../store\";\nimport styles from \"./Controller.module.css\";\nimport { ActionTypes } from \"../actions\";\nconst getSpName = (mid: string, items: IMilestone[]) =>\n  _.get(getMilestone(mid, items), \"name\", \"\");\nconst getTaskboardUrl = (url: string, mid: string, items: IMilestone[]) => {\n  const milestone = getMilestone(mid, items);\n  if (url && milestone) {\n    return `${url}/project/${milestone.project_extra_info.slug}/taskboard/${\n      milestone.slug\n    }`;\n  } else {\n    return \"\";\n  }\n};\n\nconst getRange = (biz_days: string[]) => {\n  if (biz_days.length > 1) {\n    return `[${_.head(biz_days)} - ${_.last(biz_days)}]`;\n  } else {\n    return \"\";\n  }\n};\nexport const ToggleIcon = ({ isOpen }: { isOpen: boolean }) => {\n  const rotation = isOpen ? 90 : undefined;\n  return (\n    <FontAwesomeIcon\n      className=\"text-muted mr-2\"\n      rotation={rotation}\n      icon={faChevronCircleRight}\n    />\n  );\n};\nexport const Controller = () => {\n  const {\n    state: { url: stateUrl, isOpen, mid, milestones, biz_days },\n    dispatch\n  } = useContext(RootContext);\n  const [url, setUrl] = useState(\"\");\n  const handleUrl = useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>) => {\n      setUrl(e.target.value);\n    },\n    [setUrl]\n  );\n  const handleSubmit = useCallback(\n    (e: React.FormEvent) => {\n      if (url) {\n        dispatch({ type: ActionTypes.SET_URL, payload: { url } });\n      }\n      e.preventDefault();\n    },\n    [url, dispatch]\n  );\n  const toggle = useCallback(() => {\n    if (isOpen) {\n      dispatch({ type: ActionTypes.CLOSE_CONTROLLER });\n    } else {\n      dispatch({ type: ActionTypes.OPEN_CONTROLLER });\n    }\n  }, [dispatch, isOpen]);\n  const taskboardUrl = getTaskboardUrl(stateUrl, mid, milestones);\n  return (\n    <Card>\n      <CardHeader className={classNames(styles.header)} onClick={toggle}>\n        <ToggleIcon isOpen={isOpen} />\n        <Badge color=\"primary\" pill className=\"p-1 m-1\">\n          <span>{getSpName(mid, milestones)}</span>\n        </Badge>\n        <Badge className=\"p-1 m-1\">\n          <span>{getRange(biz_days)}</span>\n        </Badge>\n        {taskboardUrl ? (\n          <a\n            target=\"_blank\"\n            onClick={stopPropagation}\n            className=\"float-right\"\n            href={taskboardUrl}\n            rel=\"noopener noreferrer\"\n          >\n            <FontAwesomeIcon className=\"mr-1\" icon={faExternalLinkAlt} />\n            Taskboard\n          </a>\n        ) : null}\n      </CardHeader>\n      <Collapse isOpen={isOpen}>\n        <Form onSubmit={handleSubmit}>\n          <InputGroup>\n            <InputGroupAddon addonType=\"prepend\">URL</InputGroupAddon>\n            <Input\n              defaultValue={stateUrl}\n              onChange={handleUrl}\n              placeholder=\"http://hostname:port\"\n            />\n            <InputGroupAddon addonType=\"append\">\n              <Button>Set</Button>\n            </InputGroupAddon>\n          </InputGroup>\n        </Form>\n        <div className=\"row\">\n          <ProjectSelector />\n          <MilestoneSelector />\n        </div>\n        <CustomValuesSelector />\n        <DaysSelector />\n        <TaskStatusSelector />\n      </Collapse>\n    </Card>\n  );\n};\n","import React, { useContext, useCallback } from \"react\";\nimport { Button } from \"reactstrap\";\nimport { faSyncAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { RootContext } from \"../Provider\";\nimport { ActionTypes } from \"../actions\";\nexport const UpdateButton: React.FC = () => {\n  const { dispatch } = useContext(RootContext);\n  const updateData = useCallback(() => {\n    dispatch({ type: ActionTypes.UPDATE_DATA });\n  }, [dispatch]);\n  return (\n    <Button onClick={updateData}>\n      <FontAwesomeIcon icon={faSyncAlt} />\n    </Button>\n  );\n};\n","import React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSpinner } from \"@fortawesome/free-solid-svg-icons\";\nimport { InputGroupAddon, InputGroupText } from \"reactstrap\";\nexport const InputGroupSpinner: React.FC = () => {\n  return (\n    <InputGroupAddon addonType=\"append\">\n      <InputGroupText>\n        <FontAwesomeIcon icon={faSpinner} className=\"fa-pulse\" />\n      </InputGroupText>\n    </InputGroupAddon>\n  );\n};\n","import React, { useContext, useState, useCallback, useEffect } from \"react\";\nimport {\n  Button,\n  Card,\n  CardHeader,\n  Collapse,\n  Row,\n  Col,\n  Input,\n  InputGroup,\n  InputGroupAddon,\n  UncontrolledDropdown,\n  DropdownToggle,\n  DropdownItem,\n  DropdownMenu,\n  Spinner,\n  Form\n} from \"reactstrap\";\nimport classNames from \"classnames\";\nimport {\n  ITasksByUserStory,\n  ITask,\n  ITaskStatus,\n  IUserStoryExtraInfo,\n  IProjectExtraInfo,\n  IUser\n} from \"../store\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faExternalLinkAlt,\n  faCloudUploadAlt,\n  faEdit,\n  faHandPointRight,\n  faUserTimes\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { InputGroupSpinner } from \"./InputGroupSpinner\";\nimport { RootContext } from \"../Provider\";\nimport {\n  getCustomAttr,\n  getCustomVal,\n  getCustomValVersion,\n  isCustomValInvalid,\n  isCustomValValid,\n  Medal,\n  AvatarSquare\n} from \"./UserTasks\";\nimport { ToggleIcon } from \"./Controller\";\nimport ListGroup from \"reactstrap/lib/ListGroup\";\nimport ListGroupItem from \"reactstrap/lib/ListGroupItem\";\nimport styles from \"./UserStory.module.css\";\nimport { Switch } from \"@rmwc/switch\";\nimport InputGroupText from \"reactstrap/lib/InputGroupText\";\nimport { ActionTypes } from \"../actions\";\nimport _ from \"lodash\";\nexport const convToTasksByUserStory = (tasks: ITask[]) =>\n  _.chain(tasks)\n    .groupBy(\"user_story\")\n    .map((items, key) => ({\n      user_story: Number(key),\n      user_story_extra_info: items[0].user_story_extra_info,\n      project_extra_info: items[0].project_extra_info,\n      tasks: items,\n      is_closed: items.every(task => task.is_closed)\n    }))\n    .value();\nconst needAuthMsg = (disabled: boolean | undefined) =>\n  disabled ? \"Need sign in!\" : \"\";\nconst UserStoryLink = ({\n  user_story_extra_info,\n  project_extra_info\n}: {\n  user_story_extra_info: IUserStoryExtraInfo;\n  project_extra_info: IProjectExtraInfo;\n}) => {\n  const {\n    state: { url }\n  } = useContext(RootContext);\n  const { slug } = project_extra_info;\n  const usName = user_story_extra_info\n    ? `#${user_story_extra_info.ref} ${user_story_extra_info.subject}`\n    : undefined;\n  const href = user_story_extra_info\n    ? `${url}/project/${slug}/us/${user_story_extra_info.ref}`\n    : \"#\";\n\n  if (usName) {\n    return (\n      <a href={href} target=\"_blank\" rel=\"noopener noreferrer\" title={usName}>\n        <FontAwesomeIcon icon={faExternalLinkAlt} /> {usName}\n      </a>\n    );\n  } else {\n    return <>(Unassigned tasks)</>;\n  }\n};\n\nconst TaskLink = ({ item }: { item: ITask }) => {\n  const {\n    state: { url }\n  } = useContext(RootContext);\n  const taskName = `#${item.ref} ${item.subject}`;\n  const href = `${url}/project/${item.project_extra_info.slug}/task/${\n    item.ref\n  }`;\n  return (\n    <a href={href} target=\"_blank\" rel=\"noopener noreferrer\" title={taskName}>\n      <FontAwesomeIcon icon={faExternalLinkAlt} /> {taskName}\n    </a>\n  );\n};\n\ninterface ToggleNumberInputProps {\n  label: string;\n  value: number;\n  onSubmit?: (value: number) => void;\n  valid?: boolean;\n  invalid?: boolean;\n  disabled?: boolean;\n  loading?: boolean;\n}\nconst ToggleNumberInput: React.FC<ToggleNumberInputProps> = ({\n  label,\n  value,\n  onSubmit,\n  valid,\n  invalid,\n  disabled,\n  loading\n}) => {\n  const [checked, setChecked] = useState<boolean>(false);\n  const [val, setVal] = useState(\"\");\n  const onChange = useCallback(\n    (evt: React.FormEvent<any>) => {\n      setChecked(evt.currentTarget.checked);\n    },\n    [setChecked]\n  );\n  const handleVal = useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>) => {\n      setVal(e.target.value);\n    },\n    [setVal]\n  );\n  const handleSubmit = useCallback(\n    (e: React.FormEvent) => {\n      const num = Number(val);\n      if (checked && val !== \"\" && num >= 0 && onSubmit) {\n        onSubmit(num);\n        setChecked(false);\n      }\n      e.preventDefault();\n    },\n    [checked, val, onSubmit, setChecked]\n  );\n  useEffect(() => {\n    if (disabled) {\n      setChecked(false);\n    }\n  }, [setChecked, disabled]);\n  const title = needAuthMsg(disabled);\n  return (\n    <Form inline onSubmit={handleSubmit}>\n      <InputGroup className={styles.toggle_input}>\n        <InputGroupAddon addonType=\"prepend\">{label}</InputGroupAddon>\n        {loading ? (\n          <InputGroupSpinner />\n        ) : (\n          <>\n            {checked ? (\n              <>\n                <InputGroupAddon addonType=\"prepend\">\n                  <InputGroupText>{value}</InputGroupText>\n                </InputGroupAddon>\n                <InputGroupAddon addonType=\"prepend\">\n                  <InputGroupText>\n                    <FontAwesomeIcon\n                      className=\"text-info\"\n                      icon={faHandPointRight}\n                    />\n                  </InputGroupText>\n                </InputGroupAddon>\n                <Input\n                  onInput={handleVal}\n                  onChange={handleVal}\n                  defaultValue={String(value)}\n                  type=\"number\"\n                  step=\"0.5\"\n                  min=\"0\"\n                />\n                <InputGroupAddon addonType=\"append\">\n                  <Button color=\"info\">\n                    <FontAwesomeIcon icon={faCloudUploadAlt} />\n                  </Button>\n                </InputGroupAddon>\n              </>\n            ) : (\n              <Input valid={valid} invalid={invalid} readOnly value={value} />\n            )}\n            <InputGroupAddon addonType=\"append\" title={title}>\n              <Switch disabled={disabled} checked={checked} onChange={onChange}>\n                <FontAwesomeIcon className=\"text-info\" icon={faEdit} />\n              </Switch>\n            </InputGroupAddon>\n          </>\n        )}\n      </InputGroup>\n    </Form>\n  );\n};\ninterface GradeProps {\n  e: number;\n  r: number;\n}\nexport const Grade: React.FC<GradeProps> = ({ e, r }) => {\n  return (\n    <InputGroup className={styles.display_medal}>\n      <InputGroupAddon addonType=\"prepend\">Grade</InputGroupAddon>\n      <InputGroupText className={styles.medal}>\n        <Medal e={e} r={r} />\n      </InputGroupText>\n    </InputGroup>\n  );\n};\n\ninterface TaskStatusItemProps {\n  item: ITaskStatus;\n  task: ITask;\n  onSelect?: (id: number) => void;\n}\nconst TaskStatusItem: React.FC<TaskStatusItemProps> = ({\n  item,\n  task,\n  onSelect\n}) => {\n  const { dispatch } = useContext(RootContext);\n  const handleClick = useCallback(() => {\n    dispatch({\n      type: ActionTypes.PATCH_TASK,\n      payload: {\n        key: \"status\",\n        value: item.id,\n        id: task.id\n      }\n    });\n    onSelect && onSelect(item.id);\n  }, [dispatch, item.id, task.id, onSelect]);\n  return <DropdownItem onClick={handleClick}>{item.name}</DropdownItem>;\n};\ninterface TaskStatusSelectorProps {\n  task: ITask;\n  disabled?: boolean;\n}\nconst TaskStatusSelector: React.FC<TaskStatusSelectorProps> = ({\n  task,\n  disabled\n}) => {\n  const [loading, setLoading] = useState<boolean>(false);\n  const {\n    state: { active_task_statuses }\n  } = useContext(RootContext);\n  const handleSelect = useCallback(() => {\n    setLoading(true);\n  }, [setLoading]);\n  useEffect(() => {\n    setLoading(false);\n  }, [task.version, setLoading]);\n  return (\n    <>\n      {loading ? (\n        <Spinner type=\"grow\" color=\"info\" />\n      ) : (\n        <UncontrolledDropdown>\n          <DropdownToggle\n            title={needAuthMsg(disabled)}\n            disabled={disabled}\n            caret={!disabled}\n          >\n            {task.status_extra_info.name}\n          </DropdownToggle>\n          <DropdownMenu>\n            {active_task_statuses.map(item => (\n              <TaskStatusItem\n                item={item}\n                key={item.id}\n                task={task}\n                onSelect={handleSelect}\n              />\n            ))}\n          </DropdownMenu>\n        </UncontrolledDropdown>\n      )}\n    </>\n  );\n};\ninterface UserItemProps {\n  item: IUser;\n  onSelect?: (id: number) => void;\n}\nconst UserItem: React.FC<UserItemProps> = ({ item, onSelect }) => {\n  const handleClick = useCallback(() => {\n    onSelect && onSelect(item.id);\n  }, [item.id, onSelect]);\n  return (\n    <DropdownItem onClick={handleClick}>\n      <AvatarSquare src={item.photo} />\n      {item.username}\n    </DropdownItem>\n  );\n};\ninterface TaskUserSelectorProps {\n  task: ITask;\n  disabled?: boolean;\n}\nexport const TaskUserSelector: React.FC<TaskUserSelectorProps> = ({\n  task,\n  disabled\n}) => {\n  const [loading, setLoading] = useState<boolean>(false);\n  const {\n    state: {\n      project: { members }\n    },\n    dispatch\n  } = useContext(RootContext);\n  const handleSelect = useCallback(\n    (id: number) => {\n      setLoading(true);\n      dispatch({\n        type: ActionTypes.PATCH_TASK,\n        payload: {\n          key: \"assigned_to\",\n          value: id,\n          id: task.id\n        }\n      });\n    },\n    [dispatch, task.id]\n  );\n  useEffect(() => {\n    setLoading(false);\n  }, [task.version, setLoading]);\n  return (\n    <>\n      {loading ? (\n        <Spinner type=\"grow\" color=\"info\" />\n      ) : (\n        <UncontrolledDropdown>\n          <DropdownToggle\n            title={needAuthMsg(disabled)}\n            size=\"sm\"\n            disabled={disabled}\n            caret={!disabled}\n          >\n            Assign To\n          </DropdownToggle>\n          <DropdownMenu>\n            {members.map(item => (\n              <UserItem item={item} onSelect={handleSelect} key={item.id} />\n            ))}\n          </DropdownMenu>\n        </UncontrolledDropdown>\n      )}\n    </>\n  );\n};\ninterface NotAssignedButtonProps {\n  task: ITask;\n}\nconst NotAssignedButton: React.FC<NotAssignedButtonProps> = ({ task }) => {\n  const [loading, setLoading] = useState<boolean>(false);\n  const { dispatch } = useContext(RootContext);\n  const handleClick = useCallback(() => {\n    setLoading(true);\n    dispatch({\n      type: ActionTypes.PATCH_TASK,\n      payload: {\n        key: \"assigned_to\",\n        value: null,\n        id: task.id\n      }\n    });\n  }, [dispatch, task.id]);\n  useEffect(() => {\n    setLoading(false);\n  }, [task.version, setLoading]);\n  return (\n    <>\n      {loading ? (\n        <Spinner type=\"grow\" color=\"danger\" />\n      ) : (\n        <Button\n          className=\"mr-2\"\n          title=\"Not assigned\"\n          color=\"danger\"\n          onClick={handleClick}\n        >\n          <FontAwesomeIcon icon={faUserTimes} />\n        </Button>\n      )}\n    </>\n  );\n};\nexport const TaskItem = ({ item }: { item: ITask }) => {\n  const {\n    state: {\n      custom_attrs,\n      custom_eid,\n      custom_rid,\n      custom_value_map,\n      auth_token\n    },\n    dispatch\n  } = useContext(RootContext);\n  const version = getCustomValVersion(custom_value_map, item);\n  const onSubmitE = useCallback(\n    (value: number) => {\n      if (version) {\n        dispatch({\n          type: ActionTypes.PATCH_CUSTOM_VALUE,\n          payload: {\n            id: item.id,\n            key: custom_eid,\n            value,\n            version\n          }\n        });\n      }\n    },\n    [dispatch, item.id, custom_eid, version]\n  );\n  const onSubmitR = useCallback(\n    (value: number) => {\n      if (version) {\n        dispatch({\n          type: ActionTypes.PATCH_CUSTOM_VALUE,\n          payload: {\n            id: item.id,\n            key: custom_rid,\n            value,\n            version\n          }\n        });\n      }\n    },\n    [custom_rid, dispatch, item.id, version]\n  );\n  const customAttrE = getCustomAttr(custom_attrs, Number(custom_eid));\n  const customAttrR = getCustomAttr(custom_attrs, Number(custom_rid));\n  if (!customAttrE || !customAttrR) {\n    return null;\n  }\n  const e = getCustomVal(custom_value_map, item, customAttrE.id);\n  const r = getCustomVal(custom_value_map, item, customAttrR.id);\n  const unEstimated = !e;\n  const valid = isCustomValValid(e, r, item.is_closed);\n  const invalid = isCustomValInvalid(e, r);\n  const disabled = auth_token === \"\";\n  const loading = !version;\n  const inactive = r === 0 && !item.is_closed && !disabled && !loading;\n  return (\n    <ListGroupItem\n      className={classNames({ [styles.is_closed]: item.is_closed })}\n    >\n      <div className=\"d-flex mb-1\">\n        <div className=\"mr-auto text-truncate\">\n          <TaskLink item={item} />\n        </div>\n        {inactive && <NotAssignedButton task={item} />}\n        <TaskStatusSelector task={item} disabled={disabled} />\n      </div>\n      <Row>\n        <Col>\n          <ToggleNumberInput\n            onSubmit={onSubmitE}\n            label={customAttrE.name}\n            value={e}\n            invalid={unEstimated}\n            disabled={disabled}\n            loading={loading}\n          />\n        </Col>\n        <Col>\n          <ToggleNumberInput\n            onSubmit={onSubmitR}\n            label={customAttrR.name}\n            value={r}\n            valid={valid}\n            invalid={invalid}\n            disabled={disabled}\n            loading={loading}\n          />\n        </Col>\n        <Col>\n          <Grade e={e} r={r} />\n        </Col>\n      </Row>\n    </ListGroupItem>\n  );\n};\ninterface UserStoryProps {\n  item: ITasksByUserStory;\n}\nexport const UserStoryView: React.FC<UserStoryProps> = ({ item }) => {\n  return (\n    <Card>\n      <CardHeader className=\"text-truncate\">\n        <UserStoryLink\n          user_story_extra_info={item.user_story_extra_info}\n          project_extra_info={item.project_extra_info}\n        />\n      </CardHeader>\n      <ListGroup>\n        {item.tasks.map(task => (\n          <ListGroupItem key={task.id} className=\"text-truncate\">\n            <TaskLink item={task} />\n          </ListGroupItem>\n        ))}\n      </ListGroup>\n    </Card>\n  );\n};\nexport const UserStoryWithTaskUser: React.FC<UserStoryProps> = ({ item }) => {\n  const {\n    state: { auth_token }\n  } = useContext(RootContext);\n  const disabled = auth_token === \"\";\n  return (\n    <Card>\n      <CardHeader className=\"text-truncate\">\n        <UserStoryLink\n          user_story_extra_info={item.user_story_extra_info}\n          project_extra_info={item.project_extra_info}\n        />\n      </CardHeader>\n      <Collapse isOpen={true}>\n        <ListGroup>\n          {item.tasks.map(task => (\n            <ListGroupItem key={task.id}>\n              <div className=\"d-flex\">\n                <div className=\"mr-auto text-truncate\">\n                  <TaskLink item={task} />\n                </div>\n                <TaskUserSelector task={task} disabled={disabled} />\n              </div>\n            </ListGroupItem>\n          ))}\n        </ListGroup>\n      </Collapse>\n    </Card>\n  );\n};\n\nexport const UserStory: React.FC<UserStoryProps> = ({ item }) => {\n  const [isOpen, setIsOpen] = useState<boolean>(false);\n  const toggle = useCallback(() => {\n    setIsOpen(!isOpen);\n  }, [isOpen, setIsOpen]);\n  useEffect(() => {\n    setIsOpen(!item.is_closed);\n  }, [item.is_closed, setIsOpen]);\n  return (\n    <Card>\n      <CardHeader\n        className={classNames(styles.header, \"text-truncate\", {\n          \"alert-primary\": item.is_closed\n        })}\n        onClick={toggle}\n      >\n        <ToggleIcon isOpen={isOpen} />\n        <UserStoryLink\n          user_story_extra_info={item.user_story_extra_info}\n          project_extra_info={item.project_extra_info}\n        />\n      </CardHeader>\n      <Collapse isOpen={isOpen}>\n        <ListGroup>\n          {item.tasks.map(task => (\n            <TaskItem item={task} key={task.id} />\n          ))}\n        </ListGroup>\n      </Collapse>\n    </Card>\n  );\n};\n","import React, { useContext, useState, useEffect, useMemo } from \"react\";\nimport { RootContext } from \"../Provider\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardFooter,\n  Input,\n  InputGroup,\n  InputGroupAddon,\n  Row,\n  Col\n} from \"reactstrap\";\nimport classNames from \"classnames\";\nimport { ITask, IUser, ITasksByUserStory } from \"../store\";\nimport { InputGroupSpinner } from \"./InputGroupSpinner\";\nimport {\n  getCustomAttr,\n  getCustomVal,\n  getCustomValVersion,\n  isCustomValInvalid,\n  isCustomValValid,\n  TaskProgress\n} from \"./UserTasks\";\nimport { UserStory, Grade, convToTasksByUserStory } from \"./UserStory\";\nexport const PersonalTasks = ({ userInfo }: { userInfo: IUser }) => {\n  const {\n    state: {\n      tasks,\n      custom_attrs,\n      custom_value_map,\n      custom_eid,\n      custom_rid,\n      biz_days\n    }\n  } = useContext(RootContext);\n  const [items, setItems] = useState<ITask[]>([]);\n  const [userStories, setUserStories] = useState<ITasksByUserStory[]>([]);\n  useEffect(() => {\n    const userTasks = tasks\n      .filter(task => task.assigned_to === userInfo.id)\n      .sort((a, b) => a.user_story - b.user_story);\n    setItems(userTasks);\n    const userStories = convToTasksByUserStory(userTasks);\n    setUserStories(userStories);\n  }, [tasks, userInfo.id]);\n\n  const customAttrE = useMemo(\n    () => getCustomAttr(custom_attrs, Number(custom_eid)),\n    [custom_attrs, custom_eid]\n  );\n  const customAttrR = useMemo(\n    () => getCustomAttr(custom_attrs, Number(custom_rid)),\n    [custom_attrs, custom_rid]\n  );\n  const [e, r] = useMemo(\n    () =>\n      items.reduce(\n        (result, item) => {\n          return [\n            result[0] +\n              (customAttrE\n                ? getCustomVal(custom_value_map, item, customAttrE.id)\n                : 0),\n            result[1] +\n              (customAttrR\n                ? getCustomVal(custom_value_map, item, customAttrR.id)\n                : 0)\n          ];\n        },\n        [0, 0]\n      ),\n    [customAttrE, customAttrR, custom_value_map, items]\n  );\n  const valid = useMemo(\n    () => isCustomValValid(e, r, userStories.every(item => item.is_closed)),\n    [e, r, userStories]\n  );\n  const invalid = useMemo(() => isCustomValInvalid(e, r), [e, r]);\n  const loading = useMemo(\n    () => items.some(item => !getCustomValVersion(custom_value_map, item)),\n    [custom_value_map, items]\n  );\n  if (!customAttrE || !customAttrR || biz_days.length <= 1) {\n    return null;\n  }\n\n  return (\n    <>\n      {userStories.map(item => (\n        <UserStory item={item} key={item.user_story} />\n      ))}\n      <Card>\n        <CardHeader className={classNames(\"alert-info\")}>Total</CardHeader>\n        <CardBody>\n          <Row>\n            <Col>\n              <InputGroup>\n                <InputGroupAddon addonType=\"prepend\">\n                  {customAttrE.name}\n                </InputGroupAddon>\n                {loading ? <InputGroupSpinner /> : <Input readOnly value={e} />}\n              </InputGroup>\n            </Col>\n            <Col>\n              <InputGroup>\n                <InputGroupAddon addonType=\"prepend\">\n                  {customAttrR.name}\n                </InputGroupAddon>\n                {loading ? (\n                  <InputGroupSpinner />\n                ) : (\n                  <Input readOnly value={r} invalid={invalid} valid={valid} />\n                )}\n              </InputGroup>\n            </Col>\n            <Col>\n              <Grade e={e} r={r} />\n            </Col>\n          </Row>\n        </CardBody>\n        <CardFooter>\n          <TaskProgress tasks={items} />\n        </CardFooter>\n      </Card>\n    </>\n  );\n};\n","import React from \"react\";\nimport { Card, CardHeader } from \"reactstrap\";\nimport { IUser } from \"../store\";\n\nimport { AvatarSquare } from \"./UserTasks\";\nexport const PersonalInfo = ({ userInfo }: { userInfo: IUser }) => {\n  return (\n    <Card>\n      <CardHeader>\n        <AvatarSquare src={userInfo.photo} size=\"xlarge\" />\n        {userInfo.username} 's task\n      </CardHeader>\n    </Card>\n  );\n};\n","import React, { useContext, useState, useEffect } from \"react\";\nimport { ComposedChart, Tooltip, Line, XAxis, YAxis, Bar } from \"recharts\";\nimport { ITask, ICustomValueMap } from \"../store\";\nimport _ from \"lodash\";\nimport moment from \"moment\";\nimport { RootContext } from \"../Provider\";\nimport { dayNameFromIdx } from \"./DaysSelector\";\nimport { getCustomVal } from \"./UserTasks\";\nimport { Card, CardHeader } from \"reactstrap\";\ninterface IChartItem {\n  label: string;\n  estimate: number;\n  result?: number;\n  add?: number;\n}\n\nconst getTaskFinished = (tasks: ITask[], date: string) =>\n  tasks.filter(task =>\n    task.finished_date\n      ? moment(date)\n          .local()\n          .endOf(\"days\")\n          .diff(moment(task.finished_date)) > 0\n      : false\n  );\n\nconst getTaskCreatedToday = (tasks: ITask[], date: string) =>\n  tasks.filter(\n    task =>\n      moment(date)\n        .local()\n        .format(\"YYYY-MM-DD\") ===\n      moment(task.created_date)\n        .local()\n        .format(\"YYYY-MM-DD\")\n  );\n\nconst getTaskCreated = (tasks: ITask[], date: string) =>\n  tasks.filter(\n    task =>\n      moment(date)\n        .endOf(\"days\")\n        .diff(moment(task.created_date)) > 0\n  );\n\nconst getSumVal = (\n  custom_value_map: ICustomValueMap,\n  tasks: ITask[],\n  custom_eid: string\n) => {\n  return _.chain(tasks)\n    .map(task => getCustomVal(custom_value_map, task, Number(custom_eid)))\n    .sum()\n    .value();\n};\nexport const Chart = ({ tasks }: { tasks: ITask[] }) => {\n  const [data, setData] = useState<IChartItem[]>([]);\n  const {\n    state: { biz_days, custom_value_map, custom_eid }\n  } = useContext(RootContext);\n  useEffect(() => {\n    const days_len = biz_days.length;\n    if (days_len > 0 && tasks.length > 0 && custom_eid) {\n      const allTaskVal = getSumVal(\n        custom_value_map,\n        getTaskCreated(tasks, biz_days[0]),\n        custom_eid\n      );\n      const data = biz_days.map((day, idx) => {\n        const label = dayNameFromIdx(day, idx);\n        const estimate = allTaskVal - (allTaskVal * idx) / (days_len - 1);\n        if (\n          moment()\n            .local()\n            .endOf(\"days\")\n            .diff(moment(day)) > 0\n        ) {\n          const add =\n            idx === 0\n              ? 0\n              : getSumVal(\n                  custom_value_map,\n                  getTaskCreatedToday(tasks, day),\n                  custom_eid\n                );\n          const result =\n            getSumVal(\n              custom_value_map,\n              getTaskCreated(tasks, day),\n              custom_eid\n            ) -\n            add -\n            getSumVal(\n              custom_value_map,\n              getTaskFinished(tasks, day),\n              custom_eid\n            );\n          return { label, estimate, result, add };\n        } else {\n          return { label, estimate };\n        }\n      });\n      setData(data);\n    } else {\n      setData([]);\n    }\n  }, [tasks, biz_days, custom_eid, custom_value_map, setData]);\n  if (data.length === 0) {\n    return null;\n  } else {\n    return (\n      <Card>\n        <CardHeader>Burn down chart</CardHeader>\n        <ComposedChart data={data} width={800} height={400}>\n          <YAxis />\n          <XAxis dataKey=\"label\" />\n          <Tooltip />\n          <Bar dataKey=\"result\" fill=\"#8884d8\" stackId=\"a\" />\n          <Bar dataKey=\"add\" fill=\"#82ca9d\" stackId=\"a\" />\n          <Line dataKey=\"estimate\" />\n        </ComposedChart>\n      </Card>\n    );\n  }\n};\n","import React, { useContext, useState, useEffect } from \"react\";\nimport { ITask, IUser } from \"../store\";\nimport { RootContext } from \"../Provider\";\nimport { Chart } from \"./Chart\";\n\nexport const PersonalChart = ({ userInfo }: { userInfo: IUser }) => {\n  const [userTasks, setUserTasks] = useState<ITask[]>([]);\n  const {\n    state: { tasks }\n  } = useContext(RootContext);\n  useEffect(() => {\n    const userTasks = tasks\n      .filter(task => task.assigned_to === userInfo.id)\n      .sort((a, b) => a.user_story - b.user_story);\n    setUserTasks(userTasks);\n  }, [tasks, userInfo.id]);\n\n  return <Chart tasks={userTasks} />;\n};\n","import React, { useCallback, useContext, useEffect, useState } from \"react\";\nimport {\n  Button,\n  Alert,\n  Navbar,\n  Form,\n  InputGroup,\n  Input,\n  InputGroupAddon,\n  InputGroupText,\n  Spinner\n} from \"reactstrap\";\nimport { PersonalTasks } from \"./PersonalTasks\";\nimport { PersonalInfo } from \"./PersonalInfo\";\nimport { RootContext } from \"../Provider\";\nimport { PersonalChart } from \"./PersonalChart\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faArrowCircleLeft,\n  faUser,\n  faKey,\n  faSignInAlt,\n  faSignOutAlt\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { Link } from \"react-router-dom\";\nimport { ActionTypes } from \"../actions\";\nimport { UpdateButton } from \"./UpdateButton\";\nimport useRouter from \"use-react-router\";\nimport { preventDefault } from \"../util/handler\";\nexport const SignInForm: React.FC = () => {\n  const {\n    state: { auth_token, auth_error, username: sign_in_username },\n    dispatch\n  } = useContext(RootContext);\n\n  const [username, setUsername] = useState<string>(\"\");\n  const [password, setPassword] = useState<string>(\"\");\n  const [loading, setLoading] = useState<boolean>(false);\n\n  const handleSubmit = useCallback(\n    (e: React.FormEvent) => {\n      if (username && password) {\n        setLoading(true);\n        dispatch({\n          type: ActionTypes.SIGN_IN,\n          payload: {\n            username,\n            password\n          }\n        });\n      }\n      e.preventDefault();\n    },\n    [password, username, dispatch, setLoading]\n  );\n  const handleUsername = useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>) => {\n      setUsername(e.target.value);\n    },\n    [setUsername]\n  );\n  const handlePassword = useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>) => {\n      setPassword(e.target.value);\n    },\n    [setPassword]\n  );\n  const handleSignOut = useCallback(() => {\n    dispatch({ type: ActionTypes.SIGN_OUT });\n  }, [dispatch]);\n  useEffect(() => {\n    if (auth_error || auth_token) {\n      setLoading(false);\n    }\n  }, [auth_error, auth_token, setLoading]);\n  return (\n    <>\n      {auth_token ? (\n        <Form inline onSubmit={preventDefault} className=\"mr-1\">\n          <InputGroup>\n            <InputGroupAddon addonType=\"prepend\">\n              <InputGroupText>\n                <FontAwesomeIcon icon={faUser} />\n              </InputGroupText>\n            </InputGroupAddon>\n            <InputGroupAddon\n              addonType=\"prepend\"\n              className=\"border border-success\"\n            >\n              <InputGroupText>{sign_in_username}</InputGroupText>\n            </InputGroupAddon>\n            <InputGroupAddon addonType=\"append\">\n              <Button title=\"Sign out\" onClick={handleSignOut} color=\"danger\">\n                <FontAwesomeIcon icon={faSignOutAlt} />\n              </Button>\n            </InputGroupAddon>\n          </InputGroup>\n        </Form>\n      ) : (\n        <Form inline onSubmit={handleSubmit} className=\"mr-1\">\n          <InputGroup>\n            <InputGroupAddon addonType=\"prepend\">\n              <InputGroupText>\n                <FontAwesomeIcon icon={faUser} />\n              </InputGroupText>\n            </InputGroupAddon>\n            <Input\n              disabled={loading}\n              onInput={handleUsername}\n              onChange={handleUsername}\n              name=\"username\"\n              placeholder=\"username\"\n              invalid={auth_error}\n            />\n          </InputGroup>\n          <InputGroup>\n            <InputGroupAddon addonType=\"prepend\">\n              <InputGroupText>\n                <FontAwesomeIcon icon={faKey} />\n              </InputGroupText>\n            </InputGroupAddon>\n            <Input\n              disabled={loading}\n              onInput={handlePassword}\n              onChange={handlePassword}\n              name=\"password\"\n              placeholder=\"password\"\n              type=\"password\"\n              invalid={auth_error}\n            />\n          </InputGroup>\n          <Button color=\"info\">\n            {loading ? (\n              <Spinner size=\"sm\" type=\"grow\" />\n            ) : (\n              <FontAwesomeIcon icon={faSignInAlt} />\n            )}\n          </Button>\n        </Form>\n      )}\n    </>\n  );\n};\nexport const PersonalPage: React.FC = () => {\n  const {\n    state: { user },\n    dispatch\n  } = useContext(RootContext);\n  const {\n    match: {\n      params: { uid }\n    }\n  } = useRouter();\n  useEffect(() => {\n    if (uid) {\n      dispatch({ type: ActionTypes.FETCH_USER, payload: { uid } });\n    }\n    return () => {\n      dispatch({ type: ActionTypes.RESET_USER });\n    };\n  }, [dispatch, uid]);\n  return (\n    <>\n      <Navbar color=\"light\" light>\n        <Button tag={Link} to=\"/\" className=\"mr-auto\">\n          <FontAwesomeIcon icon={faArrowCircleLeft} /> Go back\n        </Button>\n        <SignInForm />\n        <UpdateButton />\n      </Navbar>\n      {user ? (\n        <>\n          <PersonalInfo userInfo={user} />\n          <br />\n          <PersonalTasks userInfo={user} />\n          <br />\n          <PersonalChart userInfo={user} />\n        </>\n      ) : (\n        <Alert color=\"danger\">This user does not exist.</Alert>\n      )}\n    </>\n  );\n};\n","import React, { useCallback, useContext, useEffect, useState } from \"react\";\nimport { Avatar, AvatarProps } from \"@rmwc/avatar\";\nimport { ICustomValueMap, IUser, ITask, ICustomAttr } from \"../store\";\nimport { RootContext } from \"../Provider\";\nimport classNames from \"classnames\";\nimport {\n  Table,\n  Navbar,\n  Form,\n  Input,\n  InputGroup,\n  InputGroupAddon,\n  InputGroupText,\n  Progress\n} from \"reactstrap\";\nimport _ from \"lodash\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faMedal,\n  faTimes,\n  faEquals,\n  faGrinBeam,\n  faGrinBeamSweat,\n  faDizzy,\n  faGhost\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { UpdateButton } from \"./UpdateButton\";\nimport styles from \"./UserTasks.module.css\";\nimport moment from \"moment\";\nimport { Link } from \"react-router-dom\";\nimport { preventDefault } from \"../util/handler\";\nimport { SignInForm } from \"./PersonalPage\";\n\nconst barStyles = [\"success\", \"warning\", \"info\", \"danger\"];\nconst getTasksByUser = (items: ITask[]) => _.groupBy(items, \"assigned_to\");\nconst getClosedTasks = (items: ITask[]) => items.filter(item => item.is_closed);\nexport const AvatarSquare: React.FC<AvatarProps> = props => {\n  const src = props.src || `http://i.pravatar.cc/80?u=${Math.random()}`;\n  return <Avatar {...props} src={src} square className=\"mr-1\" />;\n};\nexport const parseCustomVal = (val: string) =>\n  _.chain(val)\n    .replace(/[^0-9.+,]/g, \"\")\n    .replace(/[+]/g, \",\")\n    .split(\",\")\n    .compact()\n    .map(Number)\n    .sum()\n    .value();\n\nexport const getCustomVal = (\n  custom_value_map: ICustomValueMap,\n  task: ITask,\n  id: number\n) => {\n  if (custom_value_map.has(task)) {\n    return parseCustomVal(\n      _.get(custom_value_map.get(task), `attributes_values.${id}`, \"0\")\n    );\n  } else {\n    return 0;\n  }\n};\nexport const getSumCustomVal = (\n  custom_value_map: ICustomValueMap,\n  tasks: ITask[],\n  id: number\n) =>\n  _.chain(tasks)\n    .map(task => getCustomVal(custom_value_map, task, id))\n    .sum()\n    .value();\n\nexport const getCustomValVersion = (\n  custon_value_map: ICustomValueMap,\n  task: ITask\n) => {\n  if (custon_value_map.has(task)) {\n    return _.get(custon_value_map.get(task), \"version\");\n  } else {\n    return undefined;\n  }\n};\nexport const isCustomValValid = (e: number, r: number, is_closed: boolean) =>\n  is_closed && r === e;\nexport const isCustomValInvalid = (e: number, r: number) => r > e;\nconst getGrade = (e: number, r: number): [string | null, number] => {\n  if (_.isNumber(e) && _.isNumber(r) && e > 0) {\n    const diff = Math.abs(e - r) / e;\n    if (diff <= 0.05) {\n      return [\"gold\", 3];\n    }\n    if (diff <= 0.1) {\n      return [\"silver\", 2];\n    }\n    if (diff < 0.2) {\n      return [\"bronze\", 1];\n    }\n  }\n  return [null, 0];\n};\nconst NameAndWorkLoad = ({\n  username,\n  val,\n  total,\n  imgSrc\n}: {\n  username: string;\n  val: number;\n  total: number;\n  imgSrc: string;\n}) => {\n  if (!val) {\n    return (\n      <>\n        <td>\n          <AvatarSquare src={imgSrc} /> {username}\n        </td>\n        <td />\n      </>\n    );\n  }\n  const diff = (val - total) / total;\n  let icon;\n  let tblCls;\n  if (diff < -0.1) {\n    icon = faGrinBeam;\n    tblCls = \"\";\n  } else if (diff <= 0.1) {\n    tblCls = \"table-success\";\n    icon = faGrinBeam;\n  } else if (diff <= 0.2) {\n    tblCls = \"table-warning\";\n    icon = faGrinBeamSweat;\n  } else {\n    tblCls = \"table-danger\";\n    icon = faDizzy;\n  }\n  return (\n    <>\n      <td className={tblCls}>\n        <AvatarSquare src={imgSrc} /> {username}\n        <FontAwesomeIcon className=\"mx-1\" icon={icon} />\n      </td>\n      <td className={classNames(tblCls, \"text-right\")}>{val}</td>\n    </>\n  );\n};\n\nexport const Medal = ({ e, r }: { e: number; r: number }) => {\n  const [grade, num] = getGrade(e, r);\n  if (grade) {\n    return (\n      <>\n        {_.times(num).map(i => (\n          <FontAwesomeIcon key={i} className={styles[grade]} icon={faMedal} />\n        ))}\n      </>\n    );\n  } else {\n    return null;\n  }\n};\ninterface IProgressTotal {\n  status: number;\n  total: number;\n  style?: string;\n  label: string;\n}\ninterface TaskProgressProps {\n  tasks: ITask[];\n}\n\nexport const TaskProgress: React.FC<TaskProgressProps> = ({ tasks }) => {\n  const {\n    state: { active_task_statuses, custom_eid, custom_value_map }\n  } = useContext(RootContext);\n  const [items, setItems] = useState<IProgressTotal[]>([]);\n  const [allSum, setAllSum] = useState<number>(0);\n  const eid = Number(custom_eid);\n  useEffect(() => {\n    const val = _.chain(active_task_statuses)\n      .filter({ is_closed: true })\n      .reverse()\n      .map((item, idx) => ({\n        status: item.id,\n        total: getSumCustomVal(\n          custom_value_map,\n          _.filter(tasks, { status: item.id }),\n          eid\n        ),\n        style: barStyles[idx],\n        label: item.name\n      }))\n      .value();\n    setItems(val);\n  }, [active_task_statuses, eid, custom_value_map, setItems, tasks]);\n  useEffect(() => {\n    const val = getSumCustomVal(custom_value_map, tasks, eid);\n    setAllSum(val);\n  }, [eid, custom_value_map, setAllSum, tasks]);\n  return (\n    <Progress multi>\n      {items.map(item => (\n        <Progress\n          key={item.label}\n          bar\n          max={allSum}\n          value={item.total}\n          color={item.style}\n        >\n          {item.label}\n        </Progress>\n      ))}\n    </Progress>\n  );\n};\nconst UserRow = ({\n  item,\n  sums,\n  isPast,\n  total,\n  hpd,\n  tasks\n}: {\n  item: IUser;\n  sums: { [key: string]: { e: number; r: number } };\n  isPast: boolean;\n  total: number;\n  hpd: number;\n  tasks: ITask[];\n}) => {\n  const [customTotal, setTotal] = useState<number>(0);\n  const handleChange = useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>) => {\n      setTotal(Number(e.target.value) || 0);\n    },\n    [setTotal]\n  );\n  const sumItem = _.get(sums, item.id);\n  const e = _.get(sumItem, \"e\");\n  const r = _.get(sumItem, \"r\");\n  const margedTotal = customTotal || total;\n  const totalStr = String(margedTotal);\n  return (\n    <tr key={item.id}>\n      {total > 0 ? (\n        <>\n          <NameAndWorkLoad\n            username={item.username}\n            val={e}\n            total={margedTotal}\n            imgSrc={item.photo}\n          />\n          <td className=\"text-right\">{total}</td>\n          <td className={styles.custom_input_td}>\n            <Input\n              bsSize=\"sm\"\n              type=\"number\"\n              className=\"text-right\"\n              value={totalStr}\n              step={hpd}\n              onChange={handleChange}\n            />\n          </td>\n        </>\n      ) : (\n        <>\n          <td>\n            <AvatarSquare src={item.photo} />\n            <Link to={`/${item.id}`}>{item.username}</Link>\n          </td>\n          <td className=\"text-right\">{e}</td>\n          <td className=\"text-right\">{r}</td>\n          <td>{_.isNumber(e) && <TaskProgress tasks={tasks} />}</td>\n        </>\n      )}\n\n      {isPast ? (\n        <td>\n          <Medal e={e} r={r} />\n        </td>\n      ) : null}\n    </tr>\n  );\n};\nconst getTaskSumByUser = (\n  items: ITask[],\n  custom_value_map: ICustomValueMap,\n  custom_eid: string,\n  custom_rid: string\n) => {\n  const eid = Number(custom_eid);\n  const rid = Number(custom_rid);\n  const tasksByUser = _.mapValues(getTasksByUser(items), tasks =>\n    _.chain(tasks)\n      .map(task => ({\n        e: getCustomVal(custom_value_map, task, eid),\n        r: getCustomVal(custom_value_map, task, rid)\n      }))\n      .reduce((result, val) => ({ e: result.e + val.e, r: result.r + val.r }), {\n        e: 0,\n        r: 0\n      })\n      .value()\n  );\n  return tasksByUser;\n};\nexport const getCustomAttr = (items: ICustomAttr[], id: number) =>\n  items.find(item => item.id === id);\nexport const UserTasks = () => {\n  const {\n    state: {\n      tasks,\n      custom_value_map,\n      custom_attrs,\n      custom_eid,\n      custom_rid,\n      biz_days,\n      project: { members }\n    }\n  } = useContext(RootContext);\n  const [hpd, setHpd] = useState<number>(0);\n  const [total, setTotal] = useState<number>(0);\n  const activeLen = biz_days.length - 1;\n  const handleChange = useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>) => {\n      setHpd(Number(e.target.value) || 0);\n    },\n    [setHpd]\n  );\n  useEffect(() => {\n    setTotal(hpd * activeLen);\n  }, [hpd, activeLen, setTotal]);\n  const taskSumByUser = getTaskSumByUser(\n    tasks,\n    custom_value_map,\n    custom_eid,\n    custom_rid\n  );\n  const customAttrE = getCustomAttr(custom_attrs, Number(custom_eid));\n  const customAttrR = getCustomAttr(custom_attrs, Number(custom_rid));\n  if (!customAttrE || !customAttrR || biz_days.length <= 1) {\n    return null;\n  }\n  const notAssignedSum = _.get(taskSumByUser, \"null.e\", 0);\n  const isPlanning = total > 0;\n  const isPast =\n    !isPlanning &&\n    moment().diff(\n      moment(_.last(biz_days))\n        .local()\n        .endOf(\"days\")\n    ) > 0;\n  const tasksByUser = getTasksByUser(getClosedTasks(tasks));\n  return (\n    <>\n      <Navbar color=\"light\" light>\n        <Form inline={true} className=\"mr-auto\" onSubmit={preventDefault}>\n          <InputGroup>\n            <Input\n              type=\"number\"\n              step=\"0.5\"\n              placeholder=\"hours / day\"\n              className=\"text-right\"\n              onChange={handleChange}\n            />\n            <InputGroupAddon addonType=\"append\">\n              <InputGroupText>\n                <FontAwesomeIcon className=\"mx-2\" icon={faTimes} />\n                {activeLen} [days]\n                <FontAwesomeIcon className=\"mx-2\" icon={faEquals} />\n              </InputGroupText>\n              {total > 0 ? (\n                <>\n                  <InputGroupText className=\"bg-white\">\n                    <strong>{total}</strong>\n                  </InputGroupText>\n                  <InputGroupText>hours / sprint</InputGroupText>\n                </>\n              ) : null}\n            </InputGroupAddon>\n          </InputGroup>\n        </Form>\n        <SignInForm />\n        <UpdateButton />\n      </Navbar>\n      <Table bordered>\n        <thead>\n          <tr>\n            <th>Name</th>\n            <th>{customAttrE.name}</th>\n            {isPlanning ? (\n              <>\n                <th>Total</th> <th>Custom</th>\n              </>\n            ) : (\n              <>\n                <th>{customAttrR.name}</th>\n                <th>Progress</th>\n              </>\n            )}\n            {isPast ? <th>Grade</th> : null}\n          </tr>\n        </thead>\n        <tbody>\n          {(members || []).map(item => (\n            <UserRow\n              key={item.id}\n              isPast={isPast}\n              item={item}\n              sums={taskSumByUser}\n              total={total}\n              hpd={hpd}\n              tasks={tasksByUser[item.id] || []}\n            />\n          ))}\n          <tr key=\"null\">\n            <td className=\"text-danger\">\n              <FontAwesomeIcon icon={faGhost} className=\"ml-1 mr-2 fa-lg\" />\n              Not assigned\n            </td>\n            <td className=\"text-right text-danger\">{notAssignedSum}</td>\n            <td />\n            <td />\n            {isPast ? <td /> : null}\n          </tr>\n        </tbody>\n      </Table>\n    </>\n  );\n};\n","import React, { useContext, useMemo } from \"react\";\nimport { RootContext } from \"../Provider\";\nimport { Card, CardHeader, CardBody } from \"reactstrap\";\nimport { getCustomVal, getCustomValVersion } from \"./UserTasks\";\nimport { UserStoryView, convToTasksByUserStory } from \"./UserStory\";\nexport const UnEstimatedTasks = () => {\n  const {\n    state: { tasks, custom_value_map, custom_eid }\n  } = useContext(RootContext);\n  const eid = useMemo(() => Number(custom_eid), [custom_eid]);\n  const items = useMemo(\n    () =>\n      eid\n        ? tasks.filter(\n            task =>\n              getCustomValVersion(custom_value_map, task) &&\n              getCustomVal(custom_value_map, task, eid) === 0\n          )\n        : [],\n    [custom_value_map, eid, tasks]\n  );\n  const userStories = useMemo(() => convToTasksByUserStory(items), [items]);\n  if (items.length === 0) {\n    return null;\n  } else {\n    return (\n      <Card>\n        <CardHeader className=\"alert-danger\">Un estimated tasks</CardHeader>\n        <CardBody>\n          {userStories.map(item => (\n            <UserStoryView item={item} key={item.user_story} />\n          ))}\n        </CardBody>\n      </Card>\n    );\n  }\n};\n","import React, { useContext, useMemo } from \"react\";\nimport _ from \"lodash\";\nimport { RootContext } from \"../Provider\";\nimport { UserStoryWithTaskUser, convToTasksByUserStory } from \"./UserStory\";\nimport { Card, CardHeader, CardBody } from \"reactstrap\";\nexport const NotAssignedTasks: React.FC = () => {\n  const {\n    state: { tasks }\n  } = useContext(RootContext);\n  const items = useMemo(() => _.filter(tasks, { assigned_to: null }), [tasks]);\n  const userStories = useMemo(() => convToTasksByUserStory(items), [items]);\n  if (items.length === 0) {\n    return null;\n  } else {\n    return (\n      <Card>\n        <CardHeader className=\"alert-danger\">Not assigned tasks</CardHeader>\n        <CardBody>\n          {userStories.map(item => (\n            <UserStoryWithTaskUser item={item} key={item.user_story} />\n          ))}\n        </CardBody>\n      </Card>\n    );\n  }\n};\n","import React, { useContext } from \"react\";\nimport { RootContext } from \"../Provider\";\nimport { Chart } from \"./Chart\";\n\nexport const OverviewChart = () => {\n  const {\n    state: { tasks }\n  } = useContext(RootContext);\n  return <Chart tasks={tasks} />;\n};\n","import * as React from \"react\";\nimport { UserTasks } from \"./UserTasks\";\nimport { UnEstimatedTasks } from \"./UnEstimatedTasks\";\nimport { NotAssignedTasks } from \"./NotAssignedTasks\";\nimport { OverviewChart } from \"./OverviewChart\";\n\nexport const OverView = () => (\n  <>\n    <UserTasks />\n    <NotAssignedTasks />\n    <br />\n    <UnEstimatedTasks />\n    <br />\n    <OverviewChart />\n  </>\n);\n","import React from \"react\";\nimport { ToastContainer } from \"react-toastify\";\nimport { Controller } from \"./components/Controller\";\nimport { Provider } from \"./Provider\";\nimport { HashRouter, Route } from \"react-router-dom\";\nimport { OverView } from \"./components/OverView\";\nimport { PersonalPage } from \"./components/PersonalPage\";\nexport const App = () => (\n  <div className=\"container\">\n    <ToastContainer />\n    <HashRouter>\n      <Provider>\n        <Controller />\n        <Route exact path=\"/\" component={OverView} />\n        <Route exact path=\"/:uid\" component={PersonalPage} />\n      </Provider>\n    </HashRouter>\n  </div>\n);\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport \"bootstrap-css-only/css/bootstrap.css\";\nimport \"@material/switch/dist/mdc.switch.css\";\nimport \"@material/form-field/dist/mdc.form-field.css\";\nimport \"@rmwc/avatar/avatar.css\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"UserStory_header__3lGFX\",\"toggle_input\":\"UserStory_toggle_input__ARa5d\",\"display_medal\":\"UserStory_display_medal__3t53K\",\"medal\":\"UserStory_medal__2Zi1f\",\"is_closed\":\"UserStory_is_closed__2ABQp\"};"],"sourceRoot":""}