{"version":3,"sources":["components/UserTasks.module.css","components/Controller.module.css","actions.ts","store.ts","reducer.ts","util/useSideEffector.ts","sideEffectors/fetchProjects.ts","sideEffectors/fetchProject.ts","sideEffectors/fetchMilestones.ts","sideEffectors/fetchTasks.ts","sideEffectors/fetchTaskStatuses.ts","sideEffectors/fetchCustomAttrs.ts","sideEffectors/fetchCustomValueMap.ts","sideEffectors/fetchUser.ts","util/toastr.tsx","sideEffectors/patchCustomValue.ts","sideEffectors/patchTask.ts","sideEffectors/signIn.ts","sideEffectors/index.ts","sideEffectors/signOut.ts","sideEffectors/setAuthToken.ts","sideEffectors/setUrl.ts","sideEffectors/setPid.ts","sideEffectors/setMid.ts","sideEffectors/setCustomEid.ts","sideEffectors/setCustomRid.ts","sideEffectors/syncBizDays.ts","sideEffectors/syncRejectTaskStatusIds.ts","Provider.tsx","init.ts","util/handler.ts","components/ProjectSelector.tsx","components/MilestoneSelector.tsx","components/CustomValuesSelector.tsx","components/DaysSelector.tsx","components/TaskStatusSelector.tsx","components/Controller.tsx","components/UpdateButton.tsx","components/InputGroupSpinner.tsx","components/UserStory.tsx","components/PersonalTasks.tsx","components/PersonalInfo.tsx","components/Chart.tsx","components/PersonalChart.tsx","components/PersonalPage.tsx","components/UserTasks.tsx","components/UnEstimatedTasks.tsx","components/NotAssignedTasks.tsx","components/OverviewChart.tsx","components/OverView.tsx","App.tsx","serviceWorker.ts","index.tsx","components/UserStory.module.css"],"names":["module","exports","gold","silver","bronze","custom_input_td","header","ActionTypes","StorageKey","_getFromStorage","key","localStorage","getItem","getFromStorage","getFromStorageWithSubkey","subkey","concat","setToStorage","item","setItem","setToStorageWithSubkey","initialStateFn","url","URL","pid","PID","mid","MID","custom_eid","CUSTOM_EID","custom_rid","CUSTOM_RID","biz_days_str","BIZ_DAYS","biz_days","_","compact","split","sort","reject_task_status_ids","REJECT_TASK_STATUS_IDS","isOpen","auth_token","auth_error","username","password","user","projects","project","custom_attrs","custom_attr_e","custom_attr_r","milestones","tasks","task_statuses","active_task_statuses","custom_value_map","WeakMap","updated_time","reducer","state","arguments","length","undefined","action","type","SET_URL","payload","Object","objectSpread","SET_PROJECTS","SET_PID","SET_PROJECT","SET_MID","SET_MILESTONES","SET_CUSTOM_EID","SET_CUSTOM_ATTRS","SET_CUSTOM_ATTR_E","SET_CUSTOM_ATTR_R","SET_CUSTOM_RID","SET_BIZ_DAYS","ADD_BIZ_DAY","biz_day","chain","toConsumableArray","uniq","value","REMOVE_BIZ_DAY","reject","SET_TASKS","SET_TASK_STATUSES","SET_ACTIVE_TASK_STATUSES","SET_CUSTOM_VALUE_MAP","SET_USER","RESET_USER","ADD_REJECT_TASK_STATUS_ID","reject_task_status_id","REMOVE_REJECT_TASK_STATUS_ID","OPEN_CONTROLLER","CLOSE_CONTROLLER","UPDATE_DATA","Date","now","SIGN_IN","_action$payload","SET_AUTH_TOKEN","SET_AUTH_ERROR","SIGN_OUT","dispatchSideEffector","dispatch","sideEffector","dispatchSECaller","fetchProjecs","_ref","asyncToGenerator","regenerator_default","a","mark","_callee","_state","_ref2","wrap","_context","prev","next","fetchData","sent","data","t0","errToastr","stop","_x","_x2","_x3","apply","this","fetchProject","FETCH_PROJECT","fetchMilestones","FETCH_MILESTONES","params","fetchTasks","milestone","FETCH_TASKS","headers","x-disable-pagination","filter","includes","String","status","fetchTaskStatuses","FETCH_TASK_STATUSES","fetchCustomAttrs","FETCH_CUSTOM_ATTRS","fetchCustomValueMap","_callee2","_context2","FETCH_CUSTOM_VALUE_MAP","Promise","all","map","_ref3","custom_attr_val","id","abrupt","_x4","t1","t2","fetchUser","uid","FETCH_USER","MessageWithIcon","icon","message","react_default","createElement","className","index_es","toastr","toast","success","toastr_MessageWithIcon","faCheck","error","faCheckCircle","patchCustomValue","version","task","custom_value","attributes_values","PATCH_CUSTOM_VALUE","find","has","get","patchData","defineProperty","patchTask","_patchData","PATCH_TASK","signIn","postData","USERNAME","PASSWORD","path","config","axios","baseUrl","post","patch","err","response","_error_message","e","rootSideEffector","FETCH_PROJECTS","removeItem","defaults","common","setAuthToken","setUrl","setPid","setMid","setCustomEid","setCustomRid","dispathc","setTimeout","join","syncBizDays","syncRejectTaskStatusIds","replace","getCustomAttr","items","initialState","RootContext","createContext","Provider","children","_useSideEffector","slicedToArray","dispatchSE","useCallback","stateStore","useMemo","getter","setter","newState","stateStoreFactory","useSideEffector","useReducer","_useSideEffector2","useEffect","orderBy","order","Number","init","preventDefault","stopPropagation","ProjectSelector","_useContext","useContext","_useContext$state","handleChange","target","InputGroup","InputGroupAddon","addonType","Input","onChange","name","MilestoneSelector","CustomValuesSelector","console","log","dayNameFromIdx","date","idx","getMilestone","weekClassName","day","text-danger","text-info","DayItem","checked","format","isPlanning","eleId","Fragment","classNames","table-info","biz","isWeekDay","FormGroup","check","inline","Label","disabled","isWeekendDay","UncontrolledTooltip","indexOf","dayName","DaysSelector","_useContext2","_useContext2$state","_useState","useState","_useState2","setItems","startM","moment","estimated_start","local","daysInSprint","estimated_finish","diff","times","i","clone","add","getDays","weekdays","chunk","Card","CardHeader","Table","bordered","days","DaysSelector_DayItem","StatusItem","defaultChecked","TaskStatusSelector","CardBody","TaskStatusSelector_StatusItem","ToggleIcon","rotation","faChevronCircleRight","Controller","stateUrl","handleUrl","handleSubmit","toggle","taskboardUrl","project_extra_info","slug","getTaskboardUrl","spName","getSpName","range","head","last","getRange","styles","onClick","Controller_ToggleIcon","Badge","color","pill","href","rel","faExternalLinkAlt","Collapse","Form","onSubmit","defaultValue","placeholder","Button","ProjectSelector_ProjectSelector","MilestoneSelector_MilestoneSelector","CustomValuesSelector_CustomValuesSelector","DaysSelector_DaysSelector","TaskStatusSelector_TaskStatusSelector","UpdateButton","updateData","faSyncAlt","InputGroupSpinner","InputGroupText","faSpinner","convToTasksByUserStory","groupBy","user_story","user_story_extra_info","is_closed","every","needAuthMsg","UserStoryLink","usName","ref","subject","title","TaskLink","taskName","ToggleNumberInput","label","valid","invalid","loading","setChecked","_useState3","_useState4","val","setVal","evt","currentTarget","handleVal","num","toggle_input","InputGroupSpinner_InputGroupSpinner","InputGroupText_default","faHandPointRight","onInput","step","min","faCloudUploadAlt","readOnly","switch_next","faEdit","Grade","_ref4","r","display_medal","medal","UserTasks_Medal","TaskStatusItem","_ref5","onSelect","handleClick","DropdownItem","_ref6","_useState5","_useState6","setLoading","handleSelect","Spinner","UncontrolledDropdown","DropdownToggle","caret","status_extra_info","DropdownMenu","UserStory_TaskStatusItem","UserItem","_ref7","UserTasks_AvatarSquare","src","photo","TaskUserSelector","_ref8","_useState7","_useState8","_useContext5","members","size","UserStory_UserItem","NotAssignedButton","_ref9","_useState9","_useState10","faUserTimes","EstimateInput","_ref10","_useContext7","_useContext7$state","getCustomValVersion","onSubmitE","customAttrE","getCustomVal","unEstimated","UserStory_ToggleNumberInput","TaskItem","_ref11","_useContext8","_useContext8$state","onSubmitR","customAttrR","isCustomValValid","isCustomValInvalid","inactive","ListGroupItem_default","UserStory_TaskLink","UserStory_NotAssignedButton","UserStory_TaskStatusSelector","Row","Col","UserStory_Grade","UserStoryWithEstimate","_ref12","UserStory_UserStoryLink","ListGroup_default","UserStory_EstimateInput","UserStoryWithTaskUser","_ref13","UserStory_TaskUserSelector","UserStory","_ref14","_useState11","_useState12","setIsOpen","alert-primary","UserStory_TaskItem","PersonalTasks","userInfo","userStories","setUserStories","userTasks","assigned_to","b","_useMemo","reduce","result","_useMemo2","some","UserStory_UserStory","CardFooter","UserTasks_TaskProgress","PersonalInfo","getTaskCreated","endOf","created_date","getSumVal","sum","Chart","setData","days_len","allTaskVal","estimate","getTaskCreatedToday","finished_date","getTaskFinished","labelFormatter","formatter","toFixed","es6","width","height","dataKey","fill","stackId","PersonalChart","setUserTasks","Chart_Chart","SignInForm","sign_in_username","setUsername","setPassword","handleUsername","handlePassword","handleSignOut","faUser","faSignOutAlt","faKey","faSignInAlt","PersonalPage","useRouter","match","Navbar","light","tag","Link","to","faArrowCircleLeft","PersonalPage_SignInForm","UpdateButton_UpdateButton","PersonalInfo_PersonalInfo","PersonalTasks_PersonalTasks","PersonalChart_PersonalChart","Alert","barStyles","getTasksByUser","AvatarSquare","props","Math","random","assign","square","getSumCustomVal","custon_value_map","NameAndWorkLoad","total","imgSrc","tblCls","faGrinBeam","faGrinBeamSweat","faDizzy","Medal","_getGrade","isNumber","abs","getGrade","_getGrade2","grade","faMedal","TaskProgress","allSum","setAllSum","eid","reverse","style","Progress","multi","bar","max","UserRow","sums","isPast","hpd","customTotal","setTotal","sumItem","margedTotal","totalStr","UserTasks_NameAndWorkLoad","bsSize","react_router_dom","UserTasks","setHpd","activeLen","taskSumByUser","rid","mapValues","getTaskSumByUser","notAssignedSum","tasksByUser","faTimes","faEquals","UserTasks_UserRow","faGhost","UnEstimatedTasks","UserStory_UserStoryWithEstimate","NotAssignedTasks","UserStory_UserStoryWithTaskUser","OverviewChart","OverView","react","UserTasks_UserTasks","NotAssignedTasks_NotAssignedTasks","UnEstimatedTasks_UnEstimatedTasks","OverviewChart_OverviewChart","App","react_toastify","Provider_Provider","Controller_Controller","react_router","exact","component","Boolean","window","location","hostname","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.83866613.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"gold\":\"UserTasks_gold__1MP40\",\"silver\":\"UserTasks_silver__GpK9Y\",\"bronze\":\"UserTasks_bronze__1aHZc\",\"custom_input_td\":\"UserTasks_custom_input_td__1JWmj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Controller_header__33lvE\"};","import {\n  IProject,\n  IMilestone,\n  ICustomAttr,\n  ITask,\n  ICustomValueMap,\n  ITaskStatus,\n  IUser\n} from \"./store\";\n\nexport enum ActionTypes {\n  SET_URL = \"SET_URL\",\n  SIGN_IN = \"SIGN_IN\",\n  SET_AUTH_TOKEN = \"SET_AUTH_TOKEN\",\n  SET_AUTH_ERROR = \"SET_AUTH_ERROR\",\n  SIGN_OUT = \"SIGN_OUT\",\n  FETCH_PROJECTS = \"FETCH_PROJECTS\",\n  SET_PROJECTS = \"SET_PROJECTS\",\n  SET_PID = \"SET_PID\",\n  FETCH_PROJECT = \"FETCH_PROJECT\",\n  SET_PROJECT = \"SET_PROJECT\",\n  FETCH_MILESTONES = \"FETCH_MILESTONES\",\n  SET_MID = \"SET_MID\",\n  SET_MILESTONES = \"SET_MILESTONES\",\n  SET_CUSTOM_EID = \"SET_CUSTOM_EID\",\n  SET_CUSTOM_RID = \"SET_CUSTOM_RID\",\n  FETCH_CUSTOM_ATTRS = \"FETCH_CUSTOM_ATTRS\",\n  SET_CUSTOM_ATTRS = \"SET_CUSTOM_ATTRS\",\n  SET_CUSTOM_ATTR_E = \"SET_CUSTOM_ATTR_E\",\n  SET_CUSTOM_ATTR_R = \"SET_CUSTOM_ATTR_R\",\n  SET_BIZ_DAYS = \"SET_BIZ_DAYS\",\n  ADD_BIZ_DAY = \"ADD_BIZ_DAY\",\n  REMOVE_BIZ_DAY = \"REMOVE_BIZ_DAY\",\n  FETCH_TASKS = \"FETCH_TASKS\",\n  SET_TASKS = \"SET_TASKS\",\n  PATCH_TASK = \"PATCH_TASK\",\n  FETCH_TASK_STATUSES = \"FETCH_TASK_STATUSES\",\n  SET_TASK_STATUSES = \"SET_TASK_STATUSES\",\n  SET_ACTIVE_TASK_STATUSES = \"SET_ACTIVE_TASK_STATUSES\",\n  FETCH_CUSTOM_VALUE_MAP = \"FETCH_CUSTOM_VALUE_MAP\",\n  SET_CUSTOM_VALUE_MAP = \"SET_CUSTOM_VALUE_MAP\",\n  PATCH_CUSTOM_VALUE = \"PATCH_CUSTOM_VALUE\",\n  FETCH_USER = \"FETCH_USER\",\n  SET_USER = \"SET_USER\",\n  RESET_USER = \"RESET_USER\",\n  ADD_REJECT_TASK_STATUS_ID = \"ADD_REJECT_TASK_STATUS\",\n  REMOVE_REJECT_TASK_STATUS_ID = \"REMOVE_REJECT_TASK_STATUS\",\n  OPEN_CONTROLLER = \"OPEN_CONTROLLER\",\n  CLOSE_CONTROLLER = \"CLOSE_CONTROLLER\",\n  UPDATE_DATA = \"UPDATE_DATA\"\n}\n\nexport interface IAction {\n  type: ActionTypes;\n  payload?: any;\n  meta?: { [key: string]: any };\n}\n\nexport interface SET_URL extends IAction {\n  type: ActionTypes.SET_URL;\n  payload: { url: string };\n}\nexport interface SIGN_IN extends IAction {\n  type: ActionTypes.SIGN_IN;\n  payload: { username: string; password: string };\n}\nexport interface SET_AUTH_TOKEN extends IAction {\n  type: ActionTypes.SET_AUTH_TOKEN;\n  payload: { auth_token: string };\n}\nexport interface SET_AUTH_ERROR extends IAction {\n  type: ActionTypes.SET_AUTH_ERROR;\n}\nexport interface SIGN_OUT extends IAction {\n  type: ActionTypes.SIGN_OUT;\n}\nexport interface FETCH_PROJECTS extends IAction {\n  type: ActionTypes.FETCH_PROJECTS;\n}\nexport interface SET_PROJECTS extends IAction {\n  type: ActionTypes.SET_PROJECTS;\n  payload: { projects: IProject[] };\n}\n\nexport interface SET_PID extends IAction {\n  type: ActionTypes.SET_PID;\n  payload: { pid: string };\n}\nexport interface FETCH_PROJECT extends IAction {\n  type: ActionTypes.FETCH_PROJECT;\n  payload: { pid: string };\n}\nexport interface SET_PROJECT extends IAction {\n  type: ActionTypes.SET_PROJECT;\n  payload: { project: IProject };\n}\nexport interface FETCH_MILESTONES extends IAction {\n  type: ActionTypes.FETCH_MILESTONES;\n  payload: { project: string };\n}\nexport interface SET_MILESTONES extends IAction {\n  type: ActionTypes.SET_MILESTONES;\n  payload: { milestones: IMilestone[] };\n}\n\nexport interface SET_MID extends IAction {\n  type: ActionTypes.SET_MID;\n  payload: { mid: string };\n}\n\nexport interface SET_CUSTOM_EID extends IAction {\n  type: ActionTypes.SET_CUSTOM_EID;\n  payload: { custom_eid: string };\n}\n\nexport interface SET_CUSTOM_RID extends IAction {\n  type: ActionTypes.SET_CUSTOM_RID;\n  payload: { custom_rid: string };\n}\n\nexport interface FETCH_CUSTOM_ATTRS extends IAction {\n  type: ActionTypes.FETCH_CUSTOM_ATTRS;\n  payload: { project: string };\n}\nexport interface SET_CUSTOM_ATTRS extends IAction {\n  type: ActionTypes.SET_CUSTOM_ATTRS;\n  payload: { custom_attrs: ICustomAttr[] };\n}\nexport interface SET_CUSTOM_ATTR_E extends IAction {\n  type: ActionTypes.SET_CUSTOM_ATTR_E;\n  payload: { custom_attr_e: ICustomAttr };\n}\nexport interface SET_CUSTOM_ATTR_R extends IAction {\n  type: ActionTypes.SET_CUSTOM_ATTR_R;\n  payload: { custom_attr_r: ICustomAttr };\n}\nexport interface SET_BIZ_DAYS extends IAction {\n  type: ActionTypes.SET_BIZ_DAYS;\n  payload: { biz_days: string[] };\n}\n\nexport interface ADD_BIZ_DAY extends IAction {\n  type: ActionTypes.ADD_BIZ_DAY;\n  payload: { biz_day: string };\n}\n\nexport interface REMOVE_BIZ_DAY extends IAction {\n  type: ActionTypes.REMOVE_BIZ_DAY;\n  payload: { biz_day: string };\n}\n\nexport interface FETCH_TASKS extends IAction {\n  type: ActionTypes.FETCH_TASKS;\n  payload: { milestone: string; reject_task_status_ids: string[] };\n}\nexport interface SET_TASKS extends IAction {\n  type: ActionTypes.SET_TASKS;\n  payload: { tasks: ITask[] };\n}\n\nexport interface PATCH_TASK extends IAction {\n  type: ActionTypes.PATCH_TASK;\n  payload: { key: keyof ITask; value: ITask[keyof ITask]; id: number };\n}\nexport interface FETCH_CUSTOM_VALUE_MAP extends IAction {\n  type: ActionTypes.FETCH_CUSTOM_VALUE_MAP;\n  payload: { tasks: ITask[] };\n}\nexport interface SET_CUSTOM_VALUE_MAP extends IAction {\n  type: ActionTypes.SET_CUSTOM_VALUE_MAP;\n  payload: { custom_value_map: ICustomValueMap };\n}\nexport interface PATCH_CUSTOM_VALUE extends IAction {\n  type: ActionTypes.PATCH_CUSTOM_VALUE;\n  payload: {\n    id: string | number;\n    key: string;\n    value: string | number;\n    version: number;\n  };\n}\nexport interface FETCH_TASK_STATUSES extends IAction {\n  type: ActionTypes.FETCH_TASK_STATUSES;\n  payload: { project: string };\n}\nexport interface SET_TASK_STATUSES extends IAction {\n  type: ActionTypes.SET_TASK_STATUSES;\n  payload: { task_statuses: ITaskStatus[] };\n}\nexport interface SET_ACTIVE_TASK_STATUSES extends IAction {\n  type: ActionTypes.SET_ACTIVE_TASK_STATUSES;\n  payload: { active_task_statuses: ITaskStatus[] };\n}\n\nexport interface FETCH_USER extends IAction {\n  type: ActionTypes.FETCH_USER;\n  payload: { uid: string };\n}\nexport interface SET_USER extends IAction {\n  type: ActionTypes.SET_USER;\n  payload: { user: IUser };\n}\nexport interface RESET_USER extends IAction {\n  type: ActionTypes.RESET_USER;\n}\nexport interface ADD_REJECT_TASK_STATUS_ID extends IAction {\n  type: ActionTypes.ADD_REJECT_TASK_STATUS_ID;\n  payload: { reject_task_status_id: string };\n}\n\nexport interface REMOVE_REJECT_TASK_STATUS_ID extends IAction {\n  type: ActionTypes.REMOVE_REJECT_TASK_STATUS_ID;\n  payload: { reject_task_status_id: string };\n}\n\nexport interface OPEN_CONTROLLER extends IAction {\n  type: ActionTypes.OPEN_CONTROLLER;\n}\n\nexport interface CLOSE_CONTROLLER extends IAction {\n  type: ActionTypes.CLOSE_CONTROLLER;\n}\n\nexport interface UPDATE_DATA extends IAction {\n  type: ActionTypes.UPDATE_DATA;\n}\n\nexport type Actions =\n  | SET_URL\n  | SIGN_IN\n  | SET_AUTH_TOKEN\n  | SET_AUTH_ERROR\n  | SIGN_OUT\n  | FETCH_PROJECTS\n  | SET_PROJECTS\n  | SET_PID\n  | FETCH_PROJECT\n  | SET_PROJECT\n  | FETCH_MILESTONES\n  | SET_MILESTONES\n  | SET_MID\n  | SET_CUSTOM_EID\n  | SET_CUSTOM_RID\n  | FETCH_CUSTOM_ATTRS\n  | SET_CUSTOM_ATTRS\n  | SET_CUSTOM_ATTR_E\n  | SET_CUSTOM_ATTR_R\n  | PATCH_CUSTOM_VALUE\n  | SET_BIZ_DAYS\n  | SET_BIZ_DAYS\n  | ADD_BIZ_DAY\n  | REMOVE_BIZ_DAY\n  | FETCH_TASKS\n  | SET_TASKS\n  | PATCH_TASK\n  | FETCH_CUSTOM_VALUE_MAP\n  | SET_CUSTOM_VALUE_MAP\n  | FETCH_TASK_STATUSES\n  | SET_TASK_STATUSES\n  | SET_ACTIVE_TASK_STATUSES\n  | FETCH_USER\n  | SET_USER\n  | RESET_USER\n  | ADD_REJECT_TASK_STATUS_ID\n  | REMOVE_REJECT_TASK_STATUS_ID\n  | OPEN_CONTROLLER\n  | CLOSE_CONTROLLER\n  | UPDATE_DATA;\n","import _ from \"lodash\";\nexport interface ICustomAttr {\n  id: number;\n  name: string;\n}\nexport interface IAuthToken {\n  auth_token: string;\n}\nexport interface IMilestone {\n  id: number;\n  name: string;\n  estimated_start: string;\n  estimated_finish: string;\n  slug: string;\n  project: number;\n  project_extra_info: IProjectExtraInfo;\n}\nexport interface IProjectExtraInfo {\n  id: number;\n  name: string;\n  slug: string;\n}\ninterface IStatusExtraInfo {\n  name: string;\n  is_closed: boolean;\n}\nexport interface IUserStoryExtraInfo {\n  id: number;\n  subject: string;\n  epics: any;\n  ref: number;\n}\nexport interface ITask {\n  id: number;\n  assigned_to: number | null;\n  created_date: string;\n  finished_date: string;\n  is_closed: boolean;\n  subject: string;\n  ref: number;\n  project: number;\n  project_extra_info: IProjectExtraInfo;\n  status: number;\n  status_extra_info: IStatusExtraInfo;\n  user_story: number;\n  user_story_extra_info: IUserStoryExtraInfo;\n  version: number;\n}\nexport interface ITasksByUserStory {\n  user_story: number;\n  user_story_extra_info: IUserStoryExtraInfo;\n  project_extra_info: IProjectExtraInfo;\n  tasks: ITask[];\n  is_closed: boolean;\n}\nexport interface ITaskStatus {\n  id: number;\n  color: string;\n  name: string;\n  order: number;\n  project: number;\n  is_closed: boolean;\n  slug: string;\n}\nexport interface IAttrValue {}\nexport interface ICustomValue {\n  attributes_values: {\n    [key: number]: string;\n  };\n  version: number;\n}\nexport interface IUser {\n  id: number;\n  username: string;\n  full_name: string;\n  full_name_display: string;\n  photo: string;\n}\nexport interface IProject {\n  id: number;\n  name: string;\n  members: IUser[];\n}\nexport type ICustomValueMap = WeakMap<ITask, ICustomValue>;\nexport interface IState {\n  url: string;\n  auth_token: string;\n  auth_error: boolean;\n  username: string;\n  password: string;\n  user: IUser | null;\n  projects: IProject[];\n  pid: string; // url\n  project: IProject;\n  mid: string; // url\n  custom_eid: string; //  pid\n  custom_rid: string; // pid\n  custom_attrs: ICustomAttr[]; // pid\n  custom_attr_e: ICustomAttr;\n  custom_attr_r: ICustomAttr;\n  biz_days: string[]; //mid\n  milestones: IMilestone[]; // pid\n  tasks: ITask[]; //mid\n  task_statuses: ITaskStatus[];\n  active_task_statuses: ITaskStatus[];\n  custom_value_map: ICustomValueMap; // pid\n  reject_task_status_ids: string[]; // pid\n  updated_time: number;\n  isOpen: boolean;\n}\n\nexport enum StorageKey {\n  URL = \"taiga_url\",\n  PID = \"taiga_pid\",\n  MID = \"taiga_mid\",\n  CUSTOM_EID = \"taiga_custom_eid\",\n  CUSTOM_RID = \"taiga_custom_rid\",\n  BIZ_DAYS = \"taiga_biz_days\",\n  REJECT_TASK_STATUS_IDS = \"reject_task_status_ids\",\n  USERNAME = \"taiga_username\",\n  PASSWORD = \"taiga_password\"\n}\n\nconst _getFromStorage = (key: string) => localStorage.getItem(key) || \"\";\nexport const getFromStorage = (key: StorageKey) => _getFromStorage(key);\nexport const getFromStorageWithSubkey = (key: StorageKey, subkey: string) =>\n  subkey ? _getFromStorage(`${subkey}/${key}`) : \"\";\n\nexport const setToStorage = (key: string, item: string) => {\n  localStorage.setItem(key, item);\n};\nexport const setToStorageWithSubkey = (\n  key: StorageKey,\n  subkey: string,\n  item: string\n) => (subkey ? setToStorage(`${subkey}/${key}`, item) : null);\nexport const initialStateFn = (): IState => {\n  const url = getFromStorage(StorageKey.URL);\n  const pid = getFromStorage(StorageKey.PID);\n  const mid = getFromStorage(StorageKey.MID);\n  const custom_eid = getFromStorageWithSubkey(StorageKey.CUSTOM_EID, pid);\n  const custom_rid = getFromStorageWithSubkey(StorageKey.CUSTOM_RID, pid);\n  const biz_days_str = getFromStorageWithSubkey(StorageKey.BIZ_DAYS, mid);\n  const biz_days = _.compact(biz_days_str.split(\",\")).sort();\n  const reject_task_status_ids = _.compact(\n    getFromStorageWithSubkey(StorageKey.REJECT_TASK_STATUS_IDS, pid).split(\",\")\n  );\n  const isOpen = !(url && pid && mid && custom_eid && custom_rid);\n  return {\n    url,\n    auth_token: \"\",\n    auth_error: false,\n    username: \"\",\n    password: \"\",\n    user: null,\n    projects: [],\n    pid,\n    project: {} as IProject,\n    mid,\n    custom_eid,\n    custom_rid,\n    custom_attrs: [],\n    custom_attr_e: {} as ICustomAttr,\n    custom_attr_r: {} as ICustomAttr,\n    biz_days,\n    milestones: [],\n    tasks: [],\n    task_statuses: [],\n    active_task_statuses: [],\n    custom_value_map: new WeakMap(),\n    reject_task_status_ids,\n    updated_time: 0,\n    isOpen\n  };\n};\n","import _ from \"lodash\";\nimport { initialStateFn, IProject, ICustomValueMap } from \"./store\";\nimport { ActionTypes, Actions } from \"./actions\";\nexport const reducer = (state = initialStateFn(), action: Actions) => {\n  switch (action.type) {\n    case ActionTypes.SET_URL: {\n      const { url } = action.payload;\n      return { ...state, url };\n    }\n    case ActionTypes.SET_PROJECTS: {\n      const { projects } = action.payload;\n      return {\n        ...state,\n        projects\n      };\n    }\n    case ActionTypes.SET_PID: {\n      const { pid } = action.payload;\n      return {\n        ...state,\n        pid,\n        project: {} as IProject,\n        mid: \"\",\n        biz_days: [],\n        custom_attrs: [],\n        milestones: [],\n        custom_value_map: new WeakMap() as ICustomValueMap\n      };\n    }\n    case ActionTypes.SET_PROJECT: {\n      const { project } = action.payload;\n      return {\n        ...state,\n        project\n      };\n    }\n    case ActionTypes.SET_MID: {\n      const { mid } = action.payload;\n      return {\n        ...state,\n        mid,\n        tasks: []\n      };\n    }\n    case ActionTypes.SET_MILESTONES: {\n      const { milestones } = action.payload;\n      return { ...state, milestones };\n    }\n    case ActionTypes.SET_CUSTOM_EID: {\n      const { custom_eid } = action.payload;\n      return { ...state, custom_eid };\n    }\n    case ActionTypes.SET_CUSTOM_ATTRS: {\n      const { custom_attrs } = action.payload;\n      return { ...state, custom_attrs };\n    }\n    case ActionTypes.SET_CUSTOM_ATTR_E: {\n      const { custom_attr_e } = action.payload;\n      return { ...state, custom_attr_e };\n    }\n    case ActionTypes.SET_CUSTOM_ATTR_R: {\n      const { custom_attr_r } = action.payload;\n      return { ...state, custom_attr_r };\n    }\n    case ActionTypes.SET_CUSTOM_RID: {\n      const { custom_rid } = action.payload;\n      return { ...state, custom_rid };\n    }\n    case ActionTypes.SET_BIZ_DAYS: {\n      const { biz_days } = action.payload;\n      return { ...state, biz_days };\n    }\n    case ActionTypes.ADD_BIZ_DAY: {\n      const { biz_day } = action.payload;\n      const biz_days = _.chain([...state.biz_days, biz_day])\n        .uniq()\n        .sort()\n        .value();\n      return { ...state, biz_days };\n    }\n    case ActionTypes.REMOVE_BIZ_DAY: {\n      const { biz_day } = action.payload;\n      const biz_days = _.reject([...state.biz_days], item => item === biz_day);\n      return { ...state, biz_days };\n    }\n    case ActionTypes.SET_TASKS: {\n      const { tasks } = action.payload;\n      return { ...state, tasks };\n    }\n    case ActionTypes.SET_TASK_STATUSES: {\n      const { task_statuses } = action.payload;\n      return { ...state, task_statuses };\n    }\n    case ActionTypes.SET_ACTIVE_TASK_STATUSES: {\n      const { active_task_statuses } = action.payload;\n      return { ...state, active_task_statuses };\n    }\n    case ActionTypes.SET_CUSTOM_VALUE_MAP: {\n      const { custom_value_map } = action.payload;\n      return { ...state, custom_value_map };\n    }\n    case ActionTypes.SET_USER: {\n      const { user } = action.payload;\n      return { ...state, user };\n    }\n    case ActionTypes.RESET_USER: {\n      return { ...state, user: null };\n    }\n    case ActionTypes.ADD_REJECT_TASK_STATUS_ID: {\n      const { reject_task_status_id } = action.payload;\n      const reject_task_status_ids = _.chain([\n        ...state.reject_task_status_ids,\n        reject_task_status_id\n      ])\n        .compact()\n        .uniq()\n        .value();\n      return { ...state, reject_task_status_ids };\n    }\n    case ActionTypes.REMOVE_REJECT_TASK_STATUS_ID: {\n      const { reject_task_status_id } = action.payload;\n      const reject_task_status_ids = _.reject(\n        [...state.reject_task_status_ids],\n        item => item === reject_task_status_id\n      );\n      return { ...state, reject_task_status_ids };\n    }\n    case ActionTypes.OPEN_CONTROLLER: {\n      return { ...state, isOpen: true };\n    }\n    case ActionTypes.CLOSE_CONTROLLER: {\n      return { ...state, isOpen: false };\n    }\n    case ActionTypes.UPDATE_DATA: {\n      return { ...state, updated_time: Date.now() };\n    }\n    case ActionTypes.SIGN_IN: {\n      const { username, password } = action.payload;\n      return { ...state, username, password, auth_error: false };\n    }\n    case ActionTypes.SET_AUTH_TOKEN: {\n      const { auth_token } = action.payload;\n      return { ...state, auth_token };\n    }\n    case ActionTypes.SET_AUTH_ERROR: {\n      return { ...state, auth_error: true };\n    }\n    case ActionTypes.SIGN_OUT: {\n      return { ...state, auth_token: \"\", username: \"\", password: \"\" };\n    }\n    default: {\n      return state;\n    }\n  }\n};\n","import { Dispatch, useCallback, useMemo } from \"react\";\n\nexport type SideEffector<S, A> = (\n  action: A,\n  dispatch: Dispatch<A>,\n  state: () => S\n) => void;\nconst stateStoreFactory = <S>() => {\n  let state: S;\n  return {\n    getter: () => state,\n    setter: (newState: S) => {\n      state = newState;\n    }\n  };\n};\nexport const useSideEffector = <S, A>(\n  [state, dispatch]: [S, Dispatch<A>],\n  sideEffector: SideEffector<S, A>\n): [S, Dispatch<A>] => {\n  let dispatchSE: Dispatch<A> | null = null;\n\n  const dispatchSECaller = useCallback(\n    (action: A) => {\n      dispatchSE && dispatchSE(action);\n    },\n    [dispatchSE]\n  );\n  const stateStore = useMemo(() => stateStoreFactory<S>(), []);\n\n  stateStore.setter(state);\n  dispatchSE = useCallback(\n    dispatchSideEffector<S, A>(\n      stateStore.getter,\n      dispatch,\n      sideEffector,\n      dispatchSECaller\n    ),\n    []\n  );\n  return [state, dispatchSE];\n};\n\nconst dispatchSideEffector = <S, A>(\n  state: () => S,\n  dispatch: Dispatch<A>,\n  sideEffector: SideEffector<S, A>,\n  dispatchSECaller: Dispatch<A>\n) => (action: A) => {\n  dispatch(action);\n  sideEffector(action, dispatchSECaller, state);\n};\n","import { IProject } from \"../store\";\nimport { ISideEffector, fetchData, ActionTypes, errToastr } from \".\";\nexport const fetchProjecs: ISideEffector = async (action, dispatch, state) => {\n  try {\n    const { url } = state();\n    if (url) {\n      const { data: projects } = await fetchData<IProject[]>(url, \"projects\");\n      dispatch({ type: ActionTypes.SET_PROJECTS, payload: { projects } });\n    }\n  } catch (e) {\n    errToastr(e);\n  }\n};\n","import { IProject } from \"../store\";\nimport { ISideEffector, fetchData, ActionTypes, errToastr } from \".\";\nexport const fetchProject: ISideEffector = async (action, dispatch, state) => {\n  if (action.type === ActionTypes.FETCH_PROJECT) {\n    try {\n      const { url } = state();\n      const { pid } = action.payload;\n      if (url && pid) {\n        const { data: project } = await fetchData<IProject>(\n          url,\n          `projects/${pid}`\n        );\n        dispatch({\n          type: ActionTypes.SET_PROJECT,\n          payload: { project }\n        });\n      }\n    } catch (e) {\n      errToastr(e);\n    }\n  }\n};\n","import { IMilestone } from \"../store\";\nimport { ISideEffector, fetchData, ActionTypes, errToastr } from \".\";\nexport const fetchMilestones: ISideEffector = async (\n  action,\n  dispatch,\n  state\n) => {\n  if (action.type === ActionTypes.FETCH_MILESTONES) {\n    try {\n      const { url } = state();\n      const { project } = action.payload;\n      if (url && project) {\n        const { data: milestones } = await fetchData<IMilestone[]>(\n          url,\n          \"milestones\",\n          { params: { project } }\n        );\n        dispatch({ type: ActionTypes.SET_MILESTONES, payload: { milestones } });\n      }\n    } catch (e) {\n      errToastr(e);\n    }\n  }\n};\n","import { ITask } from \"../store\";\nimport { ISideEffector, fetchData, ActionTypes, errToastr } from \".\";\nimport _ from \"lodash\";\nexport const fetchTasks: ISideEffector = async (action, dispatch, state) => {\n  if (action.type === ActionTypes.FETCH_TASKS) {\n    try {\n      const { url, reject_task_status_ids } = state();\n      const { milestone } = action.payload;\n      if (url && milestone) {\n        const { data } = await fetchData<ITask[]>(url, \"tasks\", {\n          headers: { \"x-disable-pagination\": true },\n          params: { milestone }\n        });\n        const tasks = data.filter(\n          item => !_.includes(reject_task_status_ids, String(item.status))\n        );\n        dispatch({ type: ActionTypes.SET_TASKS, payload: { tasks } });\n      }\n    } catch (e) {\n      errToastr(e);\n    }\n  }\n};\n","import { ITaskStatus } from \"../store\";\nimport { ISideEffector, fetchData, ActionTypes, errToastr } from \".\";\nexport const fetchTaskStatuses: ISideEffector = async (\n  action,\n  dispatch,\n  state\n) => {\n  if (action.type === ActionTypes.FETCH_TASK_STATUSES) {\n    try {\n      const { url } = state();\n      const { project } = action.payload;\n      if (url && project) {\n        const { data: task_statuses } = await fetchData<ITaskStatus[]>(\n          url,\n          \"task-statuses\",\n          { params: { project } }\n        );\n        dispatch({\n          type: ActionTypes.SET_TASK_STATUSES,\n          payload: { task_statuses }\n        });\n      }\n    } catch (e) {\n      errToastr(e);\n    }\n  }\n};\n","import { ICustomAttr } from \"../store\";\nimport { ISideEffector, fetchData, ActionTypes, errToastr } from \".\";\nexport const fetchCustomAttrs: ISideEffector = async (\n  action,\n  dispatch,\n  state\n) => {\n  if (action.type === ActionTypes.FETCH_CUSTOM_ATTRS) {\n    try {\n      const { url } = state();\n      const { project } = action.payload;\n      if (url && project) {\n        const { data: custom_attrs } = await fetchData<ICustomAttr[]>(\n          url,\n          \"task-custom-attributes\",\n          { params: { project } }\n        );\n        dispatch({\n          type: ActionTypes.SET_CUSTOM_ATTRS,\n          payload: { custom_attrs }\n        });\n      }\n    } catch (e) {\n      errToastr(e);\n    }\n  }\n};\n","import { ITask, ICustomValue } from \"../store\";\nimport { ISideEffector, fetchData, ActionTypes, errToastr } from \".\";\nexport const fetchCustomValueMap: ISideEffector = async (\n  action,\n  dispatch,\n  state\n) => {\n  if (action.type === ActionTypes.FETCH_CUSTOM_VALUE_MAP) {\n    try {\n      const { url, custom_eid, custom_rid } = state();\n      const { tasks } = action.payload;\n      if (url && tasks.length && custom_eid && custom_rid) {\n        const custom_value_map = new WeakMap(\n          await Promise.all(\n            tasks.map(async item => {\n              const { data: custom_attr_val } = await fetchData<ICustomValue>(\n                url,\n                `tasks/custom-attributes-values/${item.id}`\n              );\n              return [item, custom_attr_val] as [ITask, ICustomValue];\n            })\n          )\n        );\n        dispatch({\n          type: ActionTypes.SET_CUSTOM_VALUE_MAP,\n          payload: { custom_value_map }\n        });\n      }\n    } catch (e) {\n      errToastr(e);\n    }\n  }\n};\n","import { IUser } from \"../store\";\nimport { ISideEffector, fetchData, ActionTypes, errToastr } from \".\";\nexport const fetchUser: ISideEffector = async (action, dispatch, state) => {\n  if (action.type === ActionTypes.FETCH_USER) {\n    try {\n      const { url } = state();\n      const { uid } = action.payload;\n      if (url && uid) {\n        const { data: user } = await fetchData<IUser>(url, `users/${uid}`);\n        dispatch({\n          type: ActionTypes.SET_USER,\n          payload: { user }\n        });\n      }\n    } catch (e) {\n      errToastr(e);\n    }\n  }\n};\n","import React from \"react\";\nimport { toast } from \"react-toastify\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faInfoCircle,\n  faCheck,\n  faCheckCircle,\n  faExclamationTriangle\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { IconProp } from \"@fortawesome/fontawesome-svg-core\";\ninterface MessageWithIconProps {\n  icon: IconProp;\n  message: string;\n}\nconst MessageWithIcon: React.FC<MessageWithIconProps> = ({ icon, message }) => {\n  return (\n    <div className=\"d-flex\">\n      <h2 className=\"mr-2\">\n        <FontAwesomeIcon icon={icon} />\n      </h2>\n      <div>{message}</div>\n    </div>\n  );\n};\nexport const toastr = {\n  info: (message: string) => {\n    toast.info(<MessageWithIcon icon={faInfoCircle} message={message} />);\n  },\n  success: (message: string) => {\n    toast.success(<MessageWithIcon icon={faCheck} message={message} />);\n  },\n  warn: (message: string) => {\n    toast.warn(\n      <MessageWithIcon icon={faExclamationTriangle} message={message} />\n    );\n  },\n  error: (message: string) => {\n    toast.error(<MessageWithIcon icon={faCheckCircle} message={message} />);\n  }\n};\n","import { ISideEffector, patchData, ActionTypes, errToastr } from \".\";\nimport { toastr } from \"../util/toastr\";\nexport const patchCustomValue: ISideEffector = async (\n  action,\n  dispatch,\n  state\n) => {\n  if (action.type === ActionTypes.PATCH_CUSTOM_VALUE) {\n    try {\n      const { url, custom_value_map, tasks } = state();\n      const { id, key, value, version } = action.payload;\n      const task = tasks.find(task => task.id === id);\n      if (url && id && key && task && custom_value_map.has(task)) {\n        const custom_value = custom_value_map.get(task);\n        if (custom_value) {\n          const { attributes_values } = custom_value;\n          await patchData(url, `tasks/custom-attributes-values/${id}`, {\n            attributes_values: {\n              ...attributes_values,\n              [key]: String(value)\n            },\n            version\n          });\n          dispatch({ type: ActionTypes.UPDATE_DATA });\n          toastr.success(`Custom value updated. [${value}]`);\n        }\n      }\n    } catch (e) {\n      errToastr(e);\n    }\n  }\n};\n","import { ActionTypes, ISideEffector, patchData, errToastr } from \".\";\nimport { toastr } from \"../util/toastr\";\nexport const patchTask: ISideEffector = async (action, dispatch, state) => {\n  if (action.type === ActionTypes.PATCH_TASK) {\n    try {\n      const { url, tasks } = state();\n      const { id, key, value } = action.payload;\n      const task = tasks.find(task => task.id === id);\n      if (url && id && key && task) {\n        await patchData(url, `tasks/${id}`, {\n          [key]: value,\n          version: task.version\n        });\n        dispatch({ type: ActionTypes.UPDATE_DATA });\n        toastr.success(`Task updated. [${key}=${value}]`);\n      }\n    } catch (e) {\n      errToastr(e);\n    }\n  }\n};\n","import { IAuthToken, StorageKey, setToStorage } from \"../store\";\nimport { ISideEffector, postData, ActionTypes, errToastr } from \".\";\nimport { toastr } from \"../util/toastr\";\nexport const signIn: ISideEffector = async (action, dispatch, state) => {\n  if (action.type === ActionTypes.SIGN_IN) {\n    try {\n      const { url } = state();\n      const { username, password } = action.payload;\n      if (url && username && password) {\n        const {\n          data: { auth_token }\n        } = await postData<IAuthToken>(url, \"auth\", {\n          username,\n          password,\n          type: \"normal\"\n        });\n        dispatch({ type: ActionTypes.SET_AUTH_TOKEN, payload: { auth_token } });\n        setToStorage(StorageKey.USERNAME, username);\n        setToStorage(StorageKey.PASSWORD, password);\n        toastr.success(`${username} signed in.`);\n      }\n    } catch (e) {\n      dispatch({ type: ActionTypes.SET_AUTH_ERROR });\n      dispatch({ type: ActionTypes.SIGN_OUT });\n      errToastr(e);\n    }\n  }\n};\n","import { Dispatch } from \"react\";\nimport { Actions, ActionTypes } from \"../actions\";\nimport { IState } from \"../store\";\nimport { baseUrl } from \"../Provider\";\nimport { fetchProjecs } from \"./fetchProjects\";\nimport { fetchProject } from \"./fetchProject\";\nimport { fetchMilestones } from \"./fetchMilestones\";\nimport { fetchTasks } from \"./fetchTasks\";\nimport { fetchTaskStatuses } from \"./fetchTaskStatuses\";\nimport { fetchCustomAttrs } from \"./fetchCustomAttrs\";\nimport { fetchCustomValueMap } from \"./fetchCustomValueMap\";\nimport { fetchUser } from \"./fetchUser\";\nimport { patchCustomValue } from \"./patchCustomValue\";\nimport { patchTask } from \"./patchTask\";\nimport { signIn } from \"./signIn\";\nimport { signOut } from \"./signOut\";\nimport { setAuthToken } from \"./setAuthToken\";\nimport { setUrl } from \"./setUrl\";\nimport { setPid } from \"./setPid\";\nimport { setMid } from \"./setMid\";\nimport { setCustomEid } from \"./setCustomEid\";\nimport { setCustomRid } from \"./setCustomRid\";\nimport { syncBizDays } from \"./syncBizDays\";\nimport { syncRejectTaskStatusIds } from \"./syncRejectTaskStatusIds\";\nimport axios, { AxiosRequestConfig, AxiosError } from \"axios\";\nimport { toastr } from \"../util/toastr\";\nexport { ActionTypes };\nexport type ISideEffector = (\n  action: Actions,\n  dispatch: Dispatch<Actions>,\n  state: () => IState\n) => void;\nexport const fetchData = <T>(\n  url: string,\n  path: string,\n  config?: AxiosRequestConfig\n) => axios.get<T>(`${baseUrl(url)}/${path}`, config);\nexport const postData = <T>(\n  url: string,\n  path: string,\n  data: object,\n  config?: AxiosRequestConfig\n) => axios.post<T>(`${baseUrl(url)}/${path}`, data, config);\nexport const patchData = (\n  url: string,\n  path: string,\n  data: object,\n  config?: AxiosRequestConfig\n) => axios.patch(`${baseUrl(url)}/${path}`, data, config);\nexport const errToastr = (err: AxiosError) => {\n  let message: string;\n  try {\n    message = err.response ? err.response.data._error_message : \"error\";\n  } catch (e) {\n    message = e.message || e;\n  }\n  toastr.error(message);\n};\nexport const rootSideEffector = (\n  action: Actions,\n  dispatch: Dispatch<Actions>,\n  state: () => IState\n) => {\n  switch (action.type) {\n    case ActionTypes.FETCH_PROJECTS: {\n      fetchProjecs(action, dispatch, state);\n      return;\n    }\n    case ActionTypes.FETCH_PROJECT: {\n      fetchProject(action, dispatch, state);\n      return;\n    }\n    case ActionTypes.FETCH_MILESTONES: {\n      fetchMilestones(action, dispatch, state);\n      return;\n    }\n    case ActionTypes.FETCH_TASKS: {\n      fetchTasks(action, dispatch, state);\n      return;\n    }\n    case ActionTypes.FETCH_TASK_STATUSES: {\n      fetchTaskStatuses(action, dispatch, state);\n      return;\n    }\n    case ActionTypes.FETCH_CUSTOM_ATTRS: {\n      fetchCustomAttrs(action, dispatch, state);\n      return;\n    }\n    case ActionTypes.FETCH_CUSTOM_VALUE_MAP: {\n      fetchCustomValueMap(action, dispatch, state);\n      return;\n    }\n    case ActionTypes.FETCH_USER: {\n      fetchUser(action, dispatch, state);\n      return;\n    }\n    case ActionTypes.PATCH_CUSTOM_VALUE: {\n      patchCustomValue(action, dispatch, state);\n      return;\n    }\n    case ActionTypes.SIGN_IN: {\n      signIn(action, dispatch, state);\n      return;\n    }\n    case ActionTypes.PATCH_TASK: {\n      patchTask(action, dispatch, state);\n      return;\n    }\n    case ActionTypes.SIGN_OUT: {\n      signOut(action, dispatch, state);\n      return;\n    }\n    case ActionTypes.SET_AUTH_TOKEN: {\n      setAuthToken(action, dispatch, state);\n      return;\n    }\n    case ActionTypes.SET_URL: {\n      setUrl(action, dispatch, state);\n      return;\n    }\n    case ActionTypes.SET_PID: {\n      setPid(action, dispatch, state);\n      break;\n    }\n    case ActionTypes.SET_MID: {\n      setMid(action, dispatch, state);\n      break;\n    }\n    case ActionTypes.SET_CUSTOM_EID: {\n      setCustomEid(action, dispatch, state);\n      break;\n    }\n    case ActionTypes.SET_CUSTOM_RID: {\n      setCustomRid(action, dispatch, state);\n      break;\n    }\n    case ActionTypes.SET_BIZ_DAYS:\n    case ActionTypes.ADD_BIZ_DAY:\n    case ActionTypes.REMOVE_BIZ_DAY: {\n      syncBizDays(action, dispatch, state);\n      break;\n    }\n    case ActionTypes.ADD_REJECT_TASK_STATUS_ID:\n    case ActionTypes.REMOVE_REJECT_TASK_STATUS_ID: {\n      syncRejectTaskStatusIds(action, dispatch, state);\n      break;\n    }\n    default: {\n    }\n  }\n};\n","import { StorageKey } from \"../store\";\nimport { ISideEffector } from \".\";\nimport axios from \"axios\";\nexport const signOut: ISideEffector = (action, dispatch, state) => {\n  localStorage.removeItem(StorageKey.USERNAME);\n  localStorage.removeItem(StorageKey.PASSWORD);\n  if (axios.defaults.headers.common[\"Authorization\"]) {\n    delete axios.defaults.headers.common[\"Authorization\"];\n  }\n};\n","import { ISideEffector, ActionTypes } from \".\";\nimport axios from \"axios\";\nexport const setAuthToken: ISideEffector = (action, dispatch, state) => {\n  if (action.type === ActionTypes.SET_AUTH_TOKEN) {\n    const { auth_token } = action.payload;\n    axios.defaults.headers.common[\"Authorization\"] = `Bearer ${auth_token}`;\n  }\n};\n","import { StorageKey, setToStorage } from \"../store\";\nimport { ISideEffector, ActionTypes } from \".\";\nexport const setUrl: ISideEffector = (action, dispatch, state) => {\n  if (action.type === ActionTypes.SET_URL) {\n    const { url } = action.payload;\n    setToStorage(StorageKey.URL, url);\n  }\n};\n","import { StorageKey, setToStorage, getFromStorageWithSubkey } from \"../store\";\nimport { ISideEffector, ActionTypes } from \".\";\nexport const setPid: ISideEffector = (action, dispatch, state) => {\n  if (action.type === ActionTypes.SET_PID) {\n    const { pid } = action.payload;\n    setToStorage(StorageKey.PID, pid);\n    const custom_eid = getFromStorageWithSubkey(StorageKey.CUSTOM_EID, pid);\n    const custom_rid = getFromStorageWithSubkey(StorageKey.CUSTOM_RID, pid);\n    dispatch({ type: ActionTypes.SET_CUSTOM_EID, payload: { custom_eid } });\n    dispatch({ type: ActionTypes.SET_CUSTOM_RID, payload: { custom_rid } });\n  }\n};\n","import { StorageKey, setToStorage, getFromStorageWithSubkey } from \"../store\";\nimport { ISideEffector, ActionTypes } from \".\";\nimport _ from \"lodash\";\nexport const setMid: ISideEffector = (action, dispatch, state) => {\n  if (action.type === ActionTypes.SET_MID) {\n    const { mid } = action.payload;\n    setToStorage(StorageKey.MID, mid);\n    const biz_days = _.compact(\n      getFromStorageWithSubkey(StorageKey.BIZ_DAYS, mid).split(\",\")\n    ).sort();\n    dispatch({ type: ActionTypes.SET_BIZ_DAYS, payload: { biz_days } });\n  }\n};\n","import { StorageKey, setToStorageWithSubkey, getFromStorage } from \"../store\";\nimport { ISideEffector, ActionTypes } from \".\";\nexport const setCustomEid: ISideEffector = (action, dispatch, state) => {\n  if (action.type === ActionTypes.SET_CUSTOM_EID) {\n    const { custom_eid } = action.payload;\n    const pid = getFromStorage(StorageKey.PID);\n    setToStorageWithSubkey(StorageKey.CUSTOM_EID, pid, custom_eid);\n  }\n};\n","import { StorageKey, setToStorageWithSubkey, getFromStorage } from \"../store\";\nimport { ISideEffector, ActionTypes } from \".\";\nexport const setCustomRid: ISideEffector = (action, dispatch, state) => {\n  if (action.type === ActionTypes.SET_CUSTOM_RID) {\n    const { custom_rid } = action.payload;\n    const pid = getFromStorage(StorageKey.PID);\n    setToStorageWithSubkey(StorageKey.CUSTOM_RID, pid, custom_rid);\n  }\n};\n","import { StorageKey, setToStorageWithSubkey } from \"../store\";\nimport { ISideEffector } from \".\";\nexport const syncBizDays: ISideEffector = (action, dispathc, state) => {\n  setTimeout(() => {\n    const { mid, biz_days } = state();\n    setToStorageWithSubkey(StorageKey.BIZ_DAYS, mid, biz_days.join(\",\"));\n  }, 1);\n};\n","import { StorageKey, setToStorageWithSubkey } from \"../store\";\nimport { ISideEffector } from \".\";\nexport const syncRejectTaskStatusIds: ISideEffector = (\n  action,\n  dispatch,\n  state\n) => {\n  setTimeout(() => {\n    const { pid, reject_task_status_ids } = state();\n    setToStorageWithSubkey(\n      StorageKey.REJECT_TASK_STATUS_IDS,\n      pid,\n      reject_task_status_ids.join(\",\")\n    );\n  }, 1);\n};\n","import React, { createContext, useReducer, useEffect } from \"react\";\nimport _ from \"lodash\";\nimport { ActionTypes } from \"./actions\";\nimport { initialStateFn, ICustomAttr } from \"./store\";\nimport { reducer } from \"./reducer\";\nimport { Actions } from \"./actions\";\nimport { useSideEffector } from \"./util/useSideEffector\";\nimport { rootSideEffector } from \"./sideEffectors\";\nimport { init } from \"./init\";\nexport const baseUrl = (url: string) => `${url.replace(/[¥/]$/, \"\")}/api/v1`;\nconst getCustomAttr = (items: ICustomAttr[], id: number) =>\n  _.find(items, { id });\nconst initialState = initialStateFn();\nexport const RootContext = createContext({\n  state: initialState,\n  dispatch: (action: Actions) => {}\n});\nexport const Provider = ({ children }: { children: React.ReactNode }) => {\n  const [state, dispatch] = useSideEffector(\n    useReducer(reducer, initialState),\n    rootSideEffector\n  );\n  const value = {\n    state,\n    dispatch\n  };\n\n  useEffect(() => {\n    if (state.url) {\n      dispatch({ type: ActionTypes.FETCH_PROJECTS });\n    }\n  }, [dispatch, state.url]);\n  useEffect(() => {\n    if (state.url && state.pid) {\n      dispatch({\n        type: ActionTypes.FETCH_MILESTONES,\n        payload: { project: state.pid }\n      });\n      dispatch({\n        type: ActionTypes.FETCH_CUSTOM_ATTRS,\n        payload: { project: state.pid }\n      });\n      dispatch({\n        type: ActionTypes.FETCH_TASK_STATUSES,\n        payload: { project: state.pid }\n      });\n      dispatch({\n        type: ActionTypes.FETCH_PROJECT,\n        payload: { pid: state.pid }\n      });\n    }\n  }, [state.url, state.pid, dispatch]);\n  useEffect(() => {\n    if (state.url && state.mid) {\n      dispatch({\n        type: ActionTypes.FETCH_TASKS,\n        payload: {\n          milestone: state.mid,\n          reject_task_status_ids: state.reject_task_status_ids\n        }\n      });\n    }\n  }, [\n    state.url,\n    state.mid,\n    state.updated_time,\n    state.reject_task_status_ids,\n    dispatch\n  ]);\n  useEffect(() => {\n    dispatch({\n      type: ActionTypes.FETCH_CUSTOM_VALUE_MAP,\n      payload: {\n        tasks: state.tasks\n      }\n    });\n  }, [dispatch, state.tasks, state.custom_eid, state.custom_rid]);\n  useEffect(() => {\n    const active_task_statuses = _.chain(state.task_statuses)\n      .reject(item => _.includes(state.reject_task_status_ids, String(item.id)))\n      .orderBy(item => item.order)\n      .value();\n    dispatch({\n      type: ActionTypes.SET_ACTIVE_TASK_STATUSES,\n      payload: { active_task_statuses }\n    });\n  }, [state.task_statuses, state.reject_task_status_ids, dispatch]);\n  useEffect(() => {\n    const custom_attr_e = getCustomAttr(\n      state.custom_attrs,\n      Number(state.custom_eid)\n    );\n    if (custom_attr_e) {\n      dispatch({\n        type: ActionTypes.SET_CUSTOM_ATTR_E,\n        payload: { custom_attr_e }\n      });\n    }\n  }, [dispatch, state.custom_attrs, state.custom_eid]);\n  useEffect(() => {\n    const custom_attr_r = getCustomAttr(\n      state.custom_attrs,\n      Number(state.custom_rid)\n    );\n    if (custom_attr_r) {\n      dispatch({\n        type: ActionTypes.SET_CUSTOM_ATTR_R,\n        payload: { custom_attr_r }\n      });\n    }\n  }, [dispatch, state.custom_attrs, state.custom_rid]);\n\n  useEffect(() => {\n    init(dispatch);\n  }, [dispatch]);\n  return <RootContext.Provider value={value}>{children}</RootContext.Provider>;\n};\n","import { Dispatch } from \"react\";\nimport { Actions, ActionTypes } from \"./actions\";\nimport { getFromStorage, StorageKey } from \"./store\";\nexport const init = (dispatch: Dispatch<Actions>) => {\n  const username = getFromStorage(StorageKey.USERNAME);\n  const password = getFromStorage(StorageKey.PASSWORD);\n  dispatch({ type: ActionTypes.SIGN_IN, payload: { username, password } });\n};\n","import React from \"react\";\nexport const preventDefault = (e: React.FormEvent) => {\n  e.preventDefault();\n};\nexport const stopPropagation = (e: React.FormEvent) => {\n  e.stopPropagation();\n};\n","import React, { useCallback, useContext } from \"react\";\nimport { Input, InputGroup, InputGroupAddon } from \"reactstrap\";\nimport { RootContext } from \"../Provider\";\nimport { ActionTypes } from \"../actions\";\nexport const ProjectSelector = () => {\n  const {\n    state: { pid, projects },\n    dispatch\n  } = useContext(RootContext);\n  const handleChange = useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>) => {\n      const id = e.target.value;\n      if (id) {\n        dispatch({ type: ActionTypes.SET_PID, payload: { pid: id } });\n      }\n    },\n    [dispatch]\n  );\n  return (\n    <InputGroup className=\"col\">\n      <InputGroupAddon addonType=\"prepend\">Project</InputGroupAddon>\n      <Input value={pid} type=\"select\" onChange={handleChange}>\n        <option value=\"\"> --- </option>\n        {projects.map(item => (\n          <option key={item.id} value={item.id}>\n            {item.name}\n          </option>\n        ))}\n      </Input>\n    </InputGroup>\n  );\n};\n","import React, { useCallback, useContext } from \"react\";\nimport { Input, InputGroup, InputGroupAddon } from \"reactstrap\";\nimport { RootContext } from \"../Provider\";\nimport { ActionTypes } from \"../actions\";\n\nexport const MilestoneSelector = () => {\n  const {\n    state: { milestones, mid },\n    dispatch\n  } = useContext(RootContext);\n  const handleChange = useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>) => {\n      const id = e.target.value;\n      if (id) {\n        dispatch({ type: ActionTypes.SET_MID, payload: { mid: id } });\n      }\n    },\n    [dispatch]\n  );\n\n  return (\n    <InputGroup className=\"col\">\n      <InputGroupAddon addonType=\"prepend\">Sprint</InputGroupAddon>\n      <Input type=\"select\" value={mid} onChange={handleChange}>\n        <option value=\"\"> --- </option>\n        {milestones.map(item => (\n          <option key={item.id} value={item.id}>\n            {item.name}\n          </option>\n        ))}\n      </Input>\n    </InputGroup>\n  );\n};\n","import React, { useCallback, useContext } from \"react\";\nimport { Input, InputGroup, InputGroupAddon } from \"reactstrap\";\nimport { RootContext } from \"../Provider\";\nimport { ActionTypes } from \"../actions\";\n\nexport const CustomValuesSelector = () => {\n  const {\n    state: { custom_attrs, custom_eid, custom_rid },\n    dispatch\n  } = useContext(RootContext);\n  const handleChange = useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>) => {\n      const id = e.target.value;\n      if (id) {\n        switch (e.target.name) {\n          case \"eid\": {\n            dispatch({\n              type: ActionTypes.SET_CUSTOM_EID,\n              payload: { custom_eid: id }\n            });\n            break;\n          }\n          case \"rid\": {\n            dispatch({\n              type: ActionTypes.SET_CUSTOM_RID,\n              payload: { custom_rid: id }\n            });\n            break;\n          }\n          default:\n            console.log(\"other id\");\n        }\n      }\n    },\n    [dispatch]\n  );\n  return (\n    <div className=\"row\">\n      <InputGroup className=\"col\">\n        <InputGroupAddon addonType=\"prepend\">Estimate</InputGroupAddon>\n        <Input\n          value={custom_eid}\n          name=\"eid\"\n          type=\"select\"\n          onChange={handleChange}\n        >\n          <option value=\"\"> --- </option>\n          {custom_attrs.map(item => (\n            <option key={item.id} value={item.id}>\n              {item.name}\n            </option>\n          ))}\n        </Input>\n      </InputGroup>\n      <InputGroup className=\"col\">\n        <InputGroupAddon addonType=\"prepend\">Result</InputGroupAddon>\n        <Input\n          value={custom_rid}\n          name=\"rid\"\n          type=\"select\"\n          onChange={handleChange}\n        >\n          <option> --- </option>\n          {custom_attrs.map(item => (\n            <option key={item.id} value={item.id}>\n              {item.name}\n            </option>\n          ))}\n        </Input>\n      </InputGroup>\n    </div>\n  );\n};\n","import React, { useEffect, useState, useContext, useCallback } from \"react\";\nimport classNames from \"classnames\";\nimport {\n  UncontrolledTooltip,\n  Table,\n  Card,\n  CardHeader,\n  Input,\n  Label,\n  FormGroup\n} from \"reactstrap\";\nimport { IMilestone } from \"../store\";\nimport { RootContext } from \"../Provider\";\nimport moment, { Moment } from \"moment\";\nimport biz from \"moment-business\";\nimport _ from \"lodash\";\nimport { ActionTypes } from \"../actions\";\nexport const isToday = (date: string) =>\n  moment()\n    .local()\n    .format(\"YYYY-MM-DD\") ===\n  moment(date)\n    .local()\n    .format(\"YYYY-MM-DD\");\n\nexport const dayNameFromIdx = (date: string, idx: number) => {\n  if (idx === -1) {\n    return \"\";\n  }\n  if (idx === 0) {\n    return \"Planning\";\n  }\n  return `Day ${idx}`;\n};\n\nexport const dayName = (date: string, biz_days: string[]) => {\n  const idx = biz_days.indexOf(date);\n  return dayNameFromIdx(date, idx);\n};\nexport const getMilestone = (mid: string, items: IMilestone[]) =>\n  items.find(item => String(item.id) === mid);\nconst getDays = (item: IMilestone) => {\n  const startM = moment(item.estimated_start).local();\n  const finishM = moment(item.estimated_finish).local();\n  const daysInSprint = finishM.diff(startM, \"days\");\n  return _.times(daysInSprint).map(i => startM.clone().add(i, \"days\"));\n};\nconst getDefaultBizDays = (items: Moment[]) =>\n  items\n    .filter(item => biz.isWeekDay(item))\n    .map(item => item.format(\"YYYY-MM-DD\"));\n\nconst weekClassName = (day: number) => ({\n  \"text-danger\": day === 0,\n  \"text-info\": day === 6\n});\n\nconst DayItem = ({\n  item,\n  biz_days,\n  idx\n}: {\n  item: Moment | null;\n  biz_days: string[];\n  idx: number;\n}) => {\n  const { dispatch } = useContext(RootContext);\n  const handleChange = useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>) => {\n      const biz_day = e.target.value;\n      if (e.target.checked) {\n        dispatch({ type: ActionTypes.ADD_BIZ_DAY, payload: { biz_day } });\n      } else {\n        dispatch({ type: ActionTypes.REMOVE_BIZ_DAY, payload: { biz_day } });\n      }\n    },\n    [dispatch]\n  );\n  if (!item) {\n    return (\n      <td>\n        <br />\n      </td>\n    );\n  }\n  const value = item.format(\"YYYY-MM-DD\");\n  const isPlanning = value === biz_days[0];\n  const eleId = `biz-day-${value}`;\n  return (\n    <>\n      <td\n        className={classNames(weekClassName(idx), { \"table-info\": isPlanning })}\n        id={eleId}\n      >\n        {biz.isWeekDay(item) ? (\n          <FormGroup check inline>\n            <Label check>\n              <Input\n                onChange={handleChange}\n                disabled={biz.isWeekendDay(item)}\n                value={value}\n                type=\"checkbox\"\n                checked={_.includes(biz_days, value)}\n                className=\"form-check-input\"\n              />\n              {value}\n            </Label>\n          </FormGroup>\n        ) : (\n          <span>{value}</span>\n        )}\n      </td>\n      {_.includes(biz_days, value) ? (\n        <UncontrolledTooltip target={eleId}>\n          {dayName(value, biz_days)}\n        </UncontrolledTooltip>\n      ) : null}\n    </>\n  );\n};\n\nexport const DaysSelector = () => {\n  const {\n    state: { mid, milestones, biz_days },\n    dispatch\n  } = useContext(RootContext);\n  const [items, setItems] = useState<Moment[]>([]);\n  useEffect(() => {\n    const milestone = getMilestone(mid, milestones);\n    if (milestone) {\n      const items = getDays(milestone);\n      setItems(items);\n      if (biz_days.length <= 1) {\n        dispatch({\n          type: ActionTypes.SET_BIZ_DAYS,\n          payload: { biz_days: getDefaultBizDays(items) }\n        });\n      }\n    }\n  }, [mid, milestones, biz_days, dispatch]);\n  if (items.length === 0) {\n    return null;\n  } else {\n    const weekdays = _.chunk(\n      [..._.times(items[0].day(), () => null), ...items],\n      7\n    );\n    return (\n      <Card>\n        <CardHeader>Business Days</CardHeader>\n        <Table bordered>\n          <thead>\n            <tr>\n              {moment.weekdays().map((item, idx) => (\n                <th\n                  key={idx}\n                  className={classNames(\"text-center\", weekClassName(idx))}\n                >\n                  {item}\n                </th>\n              ))}\n            </tr>\n          </thead>\n          <tbody>\n            {weekdays.map((days, i) => (\n              <tr key={i}>\n                {days.map((item, idx) => (\n                  <DayItem\n                    idx={idx}\n                    key={idx}\n                    item={item}\n                    biz_days={biz_days}\n                  />\n                ))}\n              </tr>\n            ))}\n          </tbody>\n        </Table>\n      </Card>\n    );\n  }\n};\n","import React, { useCallback, useContext } from \"react\";\nimport _ from \"lodash\";\nimport { RootContext } from \"../Provider\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  Input,\n  FormGroup,\n  Label\n} from \"reactstrap\";\nimport { ITaskStatus } from \"../store\";\nimport { ActionTypes } from \"../actions\";\nconst StatusItem = ({ item }: { item: ITaskStatus }) => {\n  const {\n    state: { reject_task_status_ids },\n    dispatch\n  } = useContext(RootContext);\n  const handleChange = useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>) => {\n      const reject_task_status_id = e.target.value;\n      if (e.target.checked) {\n        dispatch({\n          type: ActionTypes.REMOVE_REJECT_TASK_STATUS_ID,\n          payload: { reject_task_status_id }\n        });\n      } else {\n        dispatch({\n          type: ActionTypes.ADD_REJECT_TASK_STATUS_ID,\n          payload: { reject_task_status_id }\n        });\n      }\n    },\n    [dispatch]\n  );\n  return (\n    <FormGroup check inline>\n      <Label check>\n        <Input\n          onChange={handleChange}\n          type=\"checkbox\"\n          value={item.id}\n          defaultChecked={!_.includes(reject_task_status_ids, String(item.id))}\n        />\n        {item.name}\n      </Label>\n    </FormGroup>\n  );\n};\nexport const TaskStatusSelector = () => {\n  const {\n    state: { task_statuses }\n  } = useContext(RootContext);\n  if (task_statuses.length === 0) {\n    return null;\n  }\n  return (\n    <Card>\n      <CardHeader>Task status</CardHeader>\n      <CardBody>\n        {task_statuses.map(item => (\n          <StatusItem key={item.id} item={item} />\n        ))}\n      </CardBody>\n    </Card>\n  );\n};\n","import React, { useContext, useState, useCallback, useMemo } from \"react\";\nimport _ from \"lodash\";\nimport classNames from \"classnames\";\nimport { RootContext } from \"../Provider\";\nimport {\n  Card,\n  CardHeader,\n  Collapse,\n  Form,\n  Input,\n  InputGroup,\n  InputGroupAddon,\n  Button,\n  Badge\n} from \"reactstrap\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faChevronCircleRight,\n  faExternalLinkAlt\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { stopPropagation } from \"../util/handler\";\nimport { ProjectSelector } from \"./ProjectSelector\";\nimport { MilestoneSelector } from \"./MilestoneSelector\";\nimport { CustomValuesSelector } from \"./CustomValuesSelector\";\nimport { DaysSelector, getMilestone } from \"./DaysSelector\";\nimport { TaskStatusSelector } from \"./TaskStatusSelector\";\nimport { IMilestone } from \"../store\";\nimport styles from \"./Controller.module.css\";\nimport { ActionTypes } from \"../actions\";\nconst getSpName = (mid: string, items: IMilestone[]) =>\n  _.get(getMilestone(mid, items), \"name\", \"\");\nconst getTaskboardUrl = (url: string, mid: string, items: IMilestone[]) => {\n  const milestone = getMilestone(mid, items);\n  if (url && milestone) {\n    return `${url}/project/${milestone.project_extra_info.slug}/taskboard/${\n      milestone.slug\n    }`;\n  } else {\n    return \"\";\n  }\n};\n\nconst getRange = (biz_days: string[]) => {\n  if (biz_days.length > 1) {\n    return `[${_.head(biz_days)} - ${_.last(biz_days)}]`;\n  } else {\n    return \"\";\n  }\n};\nexport const ToggleIcon = ({ isOpen }: { isOpen: boolean }) => {\n  const rotation = isOpen ? 90 : undefined;\n  return (\n    <FontAwesomeIcon\n      className=\"text-muted mr-2\"\n      rotation={rotation}\n      icon={faChevronCircleRight}\n    />\n  );\n};\nexport const Controller = () => {\n  const {\n    state: { url: stateUrl, isOpen, mid, milestones, biz_days },\n    dispatch\n  } = useContext(RootContext);\n  const [url, setUrl] = useState(\"\");\n  const handleUrl = useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>) => {\n      setUrl(e.target.value);\n    },\n    [setUrl]\n  );\n  const handleSubmit = useCallback(\n    (e: React.FormEvent) => {\n      if (url) {\n        dispatch({ type: ActionTypes.SET_URL, payload: { url } });\n      }\n      e.preventDefault();\n    },\n    [url, dispatch]\n  );\n  const toggle = useCallback(() => {\n    if (isOpen) {\n      dispatch({ type: ActionTypes.CLOSE_CONTROLLER });\n    } else {\n      dispatch({ type: ActionTypes.OPEN_CONTROLLER });\n    }\n  }, [dispatch, isOpen]);\n  const taskboardUrl = useMemo(\n    () => getTaskboardUrl(stateUrl, mid, milestones),\n    [mid, milestones, stateUrl]\n  );\n  const spName = useMemo(() => getSpName(mid, milestones), [mid, milestones]);\n  const range = useMemo(() => getRange(biz_days), [biz_days]);\n  return (\n    <Card>\n      <CardHeader className={classNames(styles.header)} onClick={toggle}>\n        <ToggleIcon isOpen={isOpen} />\n        {spName && (\n          <Badge color=\"primary\" pill className=\"p-1 m-1\">\n            <span>{spName}</span>\n          </Badge>\n        )}\n        {range && (\n          <Badge className=\"p-1 m-1\">\n            <span>{range}</span>\n          </Badge>\n        )}\n        {taskboardUrl ? (\n          <a\n            target=\"_blank\"\n            onClick={stopPropagation}\n            className=\"float-right\"\n            href={taskboardUrl}\n            rel=\"noopener noreferrer\"\n          >\n            <FontAwesomeIcon className=\"mr-1\" icon={faExternalLinkAlt} />\n            Taskboard\n          </a>\n        ) : null}\n      </CardHeader>\n      <Collapse isOpen={isOpen}>\n        <Form onSubmit={handleSubmit}>\n          <InputGroup>\n            <InputGroupAddon addonType=\"prepend\">URL</InputGroupAddon>\n            <Input\n              defaultValue={stateUrl}\n              onChange={handleUrl}\n              placeholder=\"http://hostname:port\"\n            />\n            <InputGroupAddon addonType=\"append\">\n              <Button>Set</Button>\n            </InputGroupAddon>\n          </InputGroup>\n        </Form>\n        <div className=\"row\">\n          <ProjectSelector />\n          <MilestoneSelector />\n        </div>\n        <CustomValuesSelector />\n        <DaysSelector />\n        <TaskStatusSelector />\n      </Collapse>\n    </Card>\n  );\n};\n","import React, { useContext, useCallback } from \"react\";\nimport { Button } from \"reactstrap\";\nimport { faSyncAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { RootContext } from \"../Provider\";\nimport { ActionTypes } from \"../actions\";\nexport const UpdateButton: React.FC = () => {\n  const { dispatch } = useContext(RootContext);\n  const updateData = useCallback(() => {\n    dispatch({ type: ActionTypes.UPDATE_DATA });\n  }, [dispatch]);\n  return (\n    <Button onClick={updateData}>\n      <FontAwesomeIcon icon={faSyncAlt} />\n    </Button>\n  );\n};\n","import React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSpinner } from \"@fortawesome/free-solid-svg-icons\";\nimport { InputGroupAddon, InputGroupText } from \"reactstrap\";\nexport const InputGroupSpinner: React.FC = () => {\n  return (\n    <InputGroupAddon addonType=\"append\">\n      <InputGroupText>\n        <FontAwesomeIcon icon={faSpinner} className=\"fa-pulse\" />\n      </InputGroupText>\n    </InputGroupAddon>\n  );\n};\n","import React, { useContext, useState, useCallback, useEffect } from \"react\";\nimport {\n  Button,\n  Card,\n  CardHeader,\n  Collapse,\n  Row,\n  Col,\n  Input,\n  InputGroup,\n  InputGroupAddon,\n  UncontrolledDropdown,\n  DropdownToggle,\n  DropdownItem,\n  DropdownMenu,\n  Spinner,\n  Form\n} from \"reactstrap\";\nimport classNames from \"classnames\";\nimport {\n  ITasksByUserStory,\n  ITask,\n  ITaskStatus,\n  IUserStoryExtraInfo,\n  IProjectExtraInfo,\n  IUser\n} from \"../store\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faExternalLinkAlt,\n  faCloudUploadAlt,\n  faEdit,\n  faHandPointRight,\n  faUserTimes\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { InputGroupSpinner } from \"./InputGroupSpinner\";\nimport { RootContext } from \"../Provider\";\nimport {\n  getCustomAttr,\n  getCustomVal,\n  getCustomValVersion,\n  isCustomValInvalid,\n  isCustomValValid,\n  Medal,\n  AvatarSquare\n} from \"./UserTasks\";\nimport { ToggleIcon } from \"./Controller\";\nimport ListGroup from \"reactstrap/lib/ListGroup\";\nimport ListGroupItem from \"reactstrap/lib/ListGroupItem\";\nimport styles from \"./UserStory.module.css\";\nimport { Switch } from \"@rmwc/switch\";\nimport InputGroupText from \"reactstrap/lib/InputGroupText\";\nimport { ActionTypes } from \"../actions\";\nimport _ from \"lodash\";\nexport const convToTasksByUserStory = (tasks: ITask[]) =>\n  _.chain(tasks)\n    .groupBy(\"user_story\")\n    .map((items, key) => ({\n      user_story: Number(key),\n      user_story_extra_info: items[0].user_story_extra_info,\n      project_extra_info: items[0].project_extra_info,\n      tasks: items,\n      is_closed: items.every(task => task.is_closed)\n    }))\n    .value();\nconst needAuthMsg = (disabled: boolean | undefined) =>\n  disabled ? \"Need sign in!\" : \"\";\nconst UserStoryLink = ({\n  user_story_extra_info,\n  project_extra_info\n}: {\n  user_story_extra_info: IUserStoryExtraInfo;\n  project_extra_info: IProjectExtraInfo;\n}) => {\n  const {\n    state: { url }\n  } = useContext(RootContext);\n  const { slug } = project_extra_info;\n  const usName = user_story_extra_info\n    ? `#${user_story_extra_info.ref} ${user_story_extra_info.subject}`\n    : undefined;\n  const href = user_story_extra_info\n    ? `${url}/project/${slug}/us/${user_story_extra_info.ref}`\n    : \"#\";\n\n  if (usName) {\n    return (\n      <a href={href} target=\"_blank\" rel=\"noopener noreferrer\" title={usName}>\n        <FontAwesomeIcon icon={faExternalLinkAlt} /> {usName}\n      </a>\n    );\n  } else {\n    return <>(Unassigned tasks)</>;\n  }\n};\n\nconst TaskLink = ({ item }: { item: ITask }) => {\n  const {\n    state: { url }\n  } = useContext(RootContext);\n  const taskName = `#${item.ref} ${item.subject}`;\n  const href = `${url}/project/${item.project_extra_info.slug}/task/${\n    item.ref\n  }`;\n  return (\n    <a href={href} target=\"_blank\" rel=\"noopener noreferrer\" title={taskName}>\n      <FontAwesomeIcon icon={faExternalLinkAlt} /> {taskName}\n    </a>\n  );\n};\n\ninterface ToggleNumberInputProps {\n  label: string;\n  value: number;\n  onSubmit?: (value: number) => void;\n  valid?: boolean;\n  invalid?: boolean;\n  disabled?: boolean;\n  loading?: boolean;\n}\nconst ToggleNumberInput: React.FC<ToggleNumberInputProps> = ({\n  label,\n  value,\n  onSubmit,\n  valid,\n  invalid,\n  disabled,\n  loading\n}) => {\n  const [checked, setChecked] = useState<boolean>(false);\n  const [val, setVal] = useState(\"\");\n  const onChange = useCallback(\n    (evt: React.FormEvent<any>) => {\n      setChecked(evt.currentTarget.checked);\n    },\n    [setChecked]\n  );\n  const handleVal = useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>) => {\n      setVal(e.target.value);\n    },\n    [setVal]\n  );\n  const handleSubmit = useCallback(\n    (e: React.FormEvent) => {\n      const num = Number(val);\n      if (checked && val !== \"\" && num >= 0 && onSubmit) {\n        onSubmit(num);\n        setChecked(false);\n      }\n      e.preventDefault();\n    },\n    [checked, val, onSubmit, setChecked]\n  );\n  useEffect(() => {\n    if (disabled) {\n      setChecked(false);\n    }\n  }, [setChecked, disabled]);\n  const title = needAuthMsg(disabled);\n  return (\n    <Form inline onSubmit={handleSubmit}>\n      <InputGroup className={styles.toggle_input}>\n        <InputGroupAddon addonType=\"prepend\">{label}</InputGroupAddon>\n        {loading ? (\n          <InputGroupSpinner />\n        ) : (\n          <>\n            {checked ? (\n              <>\n                <InputGroupAddon addonType=\"prepend\">\n                  <InputGroupText>{value}</InputGroupText>\n                </InputGroupAddon>\n                <InputGroupAddon addonType=\"prepend\">\n                  <InputGroupText>\n                    <FontAwesomeIcon\n                      className=\"text-info\"\n                      icon={faHandPointRight}\n                    />\n                  </InputGroupText>\n                </InputGroupAddon>\n                <Input\n                  onInput={handleVal}\n                  onChange={handleVal}\n                  defaultValue={String(value)}\n                  type=\"number\"\n                  step=\"0.5\"\n                  min=\"0\"\n                />\n                <InputGroupAddon addonType=\"append\">\n                  <Button color=\"info\">\n                    <FontAwesomeIcon icon={faCloudUploadAlt} />\n                  </Button>\n                </InputGroupAddon>\n              </>\n            ) : (\n              <Input valid={valid} invalid={invalid} readOnly value={value} />\n            )}\n            <InputGroupAddon addonType=\"append\" title={title}>\n              <Switch disabled={disabled} checked={checked} onChange={onChange}>\n                <FontAwesomeIcon className=\"text-info\" icon={faEdit} />\n              </Switch>\n            </InputGroupAddon>\n          </>\n        )}\n      </InputGroup>\n    </Form>\n  );\n};\ninterface GradeProps {\n  e: number;\n  r: number;\n}\nexport const Grade: React.FC<GradeProps> = ({ e, r }) => {\n  return (\n    <InputGroup className={styles.display_medal}>\n      <InputGroupAddon addonType=\"prepend\">Grade</InputGroupAddon>\n      <InputGroupText className={styles.medal}>\n        <Medal e={e} r={r} />\n      </InputGroupText>\n    </InputGroup>\n  );\n};\n\ninterface TaskStatusItemProps {\n  item: ITaskStatus;\n  task: ITask;\n  onSelect?: (id: number) => void;\n}\nconst TaskStatusItem: React.FC<TaskStatusItemProps> = ({\n  item,\n  task,\n  onSelect\n}) => {\n  const { dispatch } = useContext(RootContext);\n  const handleClick = useCallback(() => {\n    dispatch({\n      type: ActionTypes.PATCH_TASK,\n      payload: {\n        key: \"status\",\n        value: item.id,\n        id: task.id\n      }\n    });\n    onSelect && onSelect(item.id);\n  }, [dispatch, item.id, task.id, onSelect]);\n  return <DropdownItem onClick={handleClick}>{item.name}</DropdownItem>;\n};\ninterface TaskStatusSelectorProps {\n  task: ITask;\n  disabled?: boolean;\n}\nconst TaskStatusSelector: React.FC<TaskStatusSelectorProps> = ({\n  task,\n  disabled\n}) => {\n  const [loading, setLoading] = useState<boolean>(false);\n  const {\n    state: { active_task_statuses }\n  } = useContext(RootContext);\n  const handleSelect = useCallback(() => {\n    setLoading(true);\n  }, [setLoading]);\n  useEffect(() => {\n    setLoading(false);\n  }, [task.version, setLoading]);\n  return (\n    <>\n      {loading ? (\n        <Spinner type=\"grow\" color=\"info\" />\n      ) : (\n        <UncontrolledDropdown>\n          <DropdownToggle\n            title={needAuthMsg(disabled)}\n            disabled={disabled}\n            caret={!disabled}\n          >\n            {task.status_extra_info.name}\n          </DropdownToggle>\n          <DropdownMenu>\n            {active_task_statuses.map(item => (\n              <TaskStatusItem\n                item={item}\n                key={item.id}\n                task={task}\n                onSelect={handleSelect}\n              />\n            ))}\n          </DropdownMenu>\n        </UncontrolledDropdown>\n      )}\n    </>\n  );\n};\ninterface UserItemProps {\n  item: IUser;\n  onSelect?: (id: number) => void;\n}\nconst UserItem: React.FC<UserItemProps> = ({ item, onSelect }) => {\n  const handleClick = useCallback(() => {\n    onSelect && onSelect(item.id);\n  }, [item.id, onSelect]);\n  return (\n    <DropdownItem onClick={handleClick}>\n      <AvatarSquare src={item.photo} />\n      {item.username}\n    </DropdownItem>\n  );\n};\ninterface TaskUserSelectorProps {\n  task: ITask;\n  disabled?: boolean;\n}\nexport const TaskUserSelector: React.FC<TaskUserSelectorProps> = ({\n  task,\n  disabled\n}) => {\n  const [loading, setLoading] = useState<boolean>(false);\n  const {\n    state: {\n      project: { members }\n    },\n    dispatch\n  } = useContext(RootContext);\n  const handleSelect = useCallback(\n    (id: number) => {\n      setLoading(true);\n      dispatch({\n        type: ActionTypes.PATCH_TASK,\n        payload: {\n          key: \"assigned_to\",\n          value: id,\n          id: task.id\n        }\n      });\n    },\n    [dispatch, task.id]\n  );\n  useEffect(() => {\n    setLoading(false);\n  }, [task.version, setLoading]);\n  return (\n    <>\n      {loading ? (\n        <Spinner type=\"grow\" color=\"info\" />\n      ) : (\n        <UncontrolledDropdown>\n          <DropdownToggle\n            title={needAuthMsg(disabled)}\n            size=\"sm\"\n            disabled={disabled}\n            caret={!disabled}\n          >\n            Assign To\n          </DropdownToggle>\n          <DropdownMenu>\n            {(members || []).map(item => (\n              <UserItem item={item} onSelect={handleSelect} key={item.id} />\n            ))}\n          </DropdownMenu>\n        </UncontrolledDropdown>\n      )}\n    </>\n  );\n};\ninterface NotAssignedButtonProps {\n  task: ITask;\n}\nconst NotAssignedButton: React.FC<NotAssignedButtonProps> = ({ task }) => {\n  const [loading, setLoading] = useState<boolean>(false);\n  const { dispatch } = useContext(RootContext);\n  const handleClick = useCallback(() => {\n    setLoading(true);\n    dispatch({\n      type: ActionTypes.PATCH_TASK,\n      payload: {\n        key: \"assigned_to\",\n        value: null,\n        id: task.id\n      }\n    });\n  }, [dispatch, task.id]);\n  useEffect(() => {\n    setLoading(false);\n  }, [task.version, setLoading]);\n  return (\n    <>\n      {loading ? (\n        <Spinner type=\"grow\" color=\"danger\" />\n      ) : (\n        <Button\n          className=\"mr-2\"\n          title=\"Not assigned\"\n          color=\"danger\"\n          onClick={handleClick}\n        >\n          <FontAwesomeIcon icon={faUserTimes} />\n        </Button>\n      )}\n    </>\n  );\n};\ninterface CustomValueInputProps {\n  item: ITask;\n}\nconst EstimateInput: React.FC<CustomValueInputProps> = ({ item }) => {\n  const {\n    state: { custom_attrs, custom_eid, custom_value_map, auth_token },\n    dispatch\n  } = useContext(RootContext);\n  const version = getCustomValVersion(custom_value_map, item);\n  const onSubmitE = useCallback(\n    (value: number) => {\n      if (version) {\n        dispatch({\n          type: ActionTypes.PATCH_CUSTOM_VALUE,\n          payload: {\n            id: item.id,\n            key: custom_eid,\n            value,\n            version\n          }\n        });\n      }\n    },\n    [dispatch, item.id, custom_eid, version]\n  );\n  const customAttrE = getCustomAttr(custom_attrs, Number(custom_eid));\n  if (!customAttrE) {\n    return null;\n  }\n  const e = getCustomVal(custom_value_map, item, customAttrE.id);\n  const unEstimated = !e;\n  const disabled = auth_token === \"\";\n  const loading = !version;\n\n  return (\n    <ToggleNumberInput\n      onSubmit={onSubmitE}\n      label={customAttrE.name}\n      value={e}\n      invalid={unEstimated}\n      disabled={disabled}\n      loading={loading}\n    />\n  );\n};\n\nexport const TaskItem = ({ item }: { item: ITask }) => {\n  const {\n    state: {\n      custom_attrs,\n      custom_eid,\n      custom_rid,\n      custom_value_map,\n      auth_token\n    },\n    dispatch\n  } = useContext(RootContext);\n  const version = getCustomValVersion(custom_value_map, item);\n  const onSubmitE = useCallback(\n    (value: number) => {\n      if (version) {\n        dispatch({\n          type: ActionTypes.PATCH_CUSTOM_VALUE,\n          payload: {\n            id: item.id,\n            key: custom_eid,\n            value,\n            version\n          }\n        });\n      }\n    },\n    [dispatch, item.id, custom_eid, version]\n  );\n  const onSubmitR = useCallback(\n    (value: number) => {\n      if (version) {\n        dispatch({\n          type: ActionTypes.PATCH_CUSTOM_VALUE,\n          payload: {\n            id: item.id,\n            key: custom_rid,\n            value,\n            version\n          }\n        });\n      }\n    },\n    [custom_rid, dispatch, item.id, version]\n  );\n  const customAttrE = getCustomAttr(custom_attrs, Number(custom_eid));\n  const customAttrR = getCustomAttr(custom_attrs, Number(custom_rid));\n  if (!customAttrE || !customAttrR) {\n    return null;\n  }\n  const e = getCustomVal(custom_value_map, item, customAttrE.id);\n  const r = getCustomVal(custom_value_map, item, customAttrR.id);\n  const unEstimated = !e;\n  const valid = isCustomValValid(e, r, item.is_closed);\n  const invalid = isCustomValInvalid(e, r);\n  const disabled = auth_token === \"\";\n  const loading = !version;\n  const inactive = r === 0 && !item.is_closed && !disabled && !loading;\n  return (\n    <ListGroupItem\n      className={classNames({ [styles.is_closed]: item.is_closed })}\n    >\n      <div className=\"d-flex mb-1\">\n        <div className=\"mr-auto text-truncate\">\n          <TaskLink item={item} />\n        </div>\n        {inactive && <NotAssignedButton task={item} />}\n        <TaskStatusSelector task={item} disabled={disabled} />\n      </div>\n      <Row>\n        <Col>\n          <ToggleNumberInput\n            onSubmit={onSubmitE}\n            label={customAttrE.name}\n            value={e}\n            invalid={unEstimated}\n            disabled={disabled}\n            loading={loading}\n          />\n        </Col>\n        <Col>\n          <ToggleNumberInput\n            onSubmit={onSubmitR}\n            label={customAttrR.name}\n            value={r}\n            valid={valid}\n            invalid={invalid}\n            disabled={disabled}\n            loading={loading}\n          />\n        </Col>\n        <Col>\n          <Grade e={e} r={r} />\n        </Col>\n      </Row>\n    </ListGroupItem>\n  );\n};\ninterface UserStoryProps {\n  item: ITasksByUserStory;\n}\nexport const UserStoryWithEstimate: React.FC<UserStoryProps> = ({ item }) => {\n  return (\n    <Card>\n      <CardHeader className=\"text-truncate\">\n        <UserStoryLink\n          user_story_extra_info={item.user_story_extra_info}\n          project_extra_info={item.project_extra_info}\n        />\n      </CardHeader>\n      <ListGroup>\n        {item.tasks.map(task => (\n          <ListGroupItem key={task.id} className=\"text-truncate\">\n            <div className=\"d-flex\">\n              <div className=\"mr-auto text-truncate\">\n                <TaskLink item={task} />\n              </div>\n              <EstimateInput item={task} />\n            </div>\n          </ListGroupItem>\n        ))}\n      </ListGroup>\n    </Card>\n  );\n};\nexport const UserStoryWithTaskUser: React.FC<UserStoryProps> = ({ item }) => {\n  const {\n    state: { auth_token }\n  } = useContext(RootContext);\n  const disabled = auth_token === \"\";\n  return (\n    <Card>\n      <CardHeader className=\"text-truncate\">\n        <UserStoryLink\n          user_story_extra_info={item.user_story_extra_info}\n          project_extra_info={item.project_extra_info}\n        />\n      </CardHeader>\n      <Collapse isOpen={true}>\n        <ListGroup>\n          {item.tasks.map(task => (\n            <ListGroupItem key={task.id}>\n              <div className=\"d-flex\">\n                <div className=\"mr-auto text-truncate\">\n                  <TaskLink item={task} />\n                </div>\n                <TaskUserSelector task={task} disabled={disabled} />\n              </div>\n            </ListGroupItem>\n          ))}\n        </ListGroup>\n      </Collapse>\n    </Card>\n  );\n};\n\nexport const UserStory: React.FC<UserStoryProps> = ({ item }) => {\n  const [isOpen, setIsOpen] = useState<boolean>(false);\n  const toggle = useCallback(() => {\n    setIsOpen(!isOpen);\n  }, [isOpen, setIsOpen]);\n  useEffect(() => {\n    setIsOpen(!item.is_closed);\n  }, [item.is_closed, setIsOpen]);\n  return (\n    <Card>\n      <CardHeader\n        className={classNames(styles.header, \"text-truncate\", {\n          \"alert-primary\": item.is_closed\n        })}\n        onClick={toggle}\n      >\n        <ToggleIcon isOpen={isOpen} />\n        <UserStoryLink\n          user_story_extra_info={item.user_story_extra_info}\n          project_extra_info={item.project_extra_info}\n        />\n      </CardHeader>\n      <Collapse isOpen={isOpen}>\n        <ListGroup>\n          {item.tasks.map(task => (\n            <TaskItem item={task} key={task.id} />\n          ))}\n        </ListGroup>\n      </Collapse>\n    </Card>\n  );\n};\n","import React, { useContext, useState, useEffect, useMemo } from \"react\";\nimport { RootContext } from \"../Provider\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardFooter,\n  Input,\n  InputGroup,\n  InputGroupAddon,\n  Row,\n  Col\n} from \"reactstrap\";\nimport classNames from \"classnames\";\nimport { ITask, IUser, ITasksByUserStory } from \"../store\";\nimport { InputGroupSpinner } from \"./InputGroupSpinner\";\nimport {\n  getCustomAttr,\n  getCustomVal,\n  getCustomValVersion,\n  isCustomValInvalid,\n  isCustomValValid,\n  TaskProgress\n} from \"./UserTasks\";\nimport { UserStory, Grade, convToTasksByUserStory } from \"./UserStory\";\nexport const PersonalTasks = ({ userInfo }: { userInfo: IUser }) => {\n  const {\n    state: {\n      tasks,\n      custom_attrs,\n      custom_value_map,\n      custom_eid,\n      custom_rid,\n      biz_days\n    }\n  } = useContext(RootContext);\n  const [items, setItems] = useState<ITask[]>([]);\n  const [userStories, setUserStories] = useState<ITasksByUserStory[]>([]);\n  useEffect(() => {\n    const userTasks = tasks\n      .filter(task => task.assigned_to === userInfo.id)\n      .sort((a, b) => a.user_story - b.user_story);\n    setItems(userTasks);\n    const userStories = convToTasksByUserStory(userTasks);\n    setUserStories(userStories);\n  }, [tasks, userInfo.id]);\n\n  const customAttrE = useMemo(\n    () => getCustomAttr(custom_attrs, Number(custom_eid)),\n    [custom_attrs, custom_eid]\n  );\n  const customAttrR = useMemo(\n    () => getCustomAttr(custom_attrs, Number(custom_rid)),\n    [custom_attrs, custom_rid]\n  );\n  const [e, r] = useMemo(\n    () =>\n      items.reduce(\n        (result, item) => {\n          return [\n            result[0] +\n              (customAttrE\n                ? getCustomVal(custom_value_map, item, customAttrE.id)\n                : 0),\n            result[1] +\n              (customAttrR\n                ? getCustomVal(custom_value_map, item, customAttrR.id)\n                : 0)\n          ];\n        },\n        [0, 0]\n      ),\n    [customAttrE, customAttrR, custom_value_map, items]\n  );\n  const valid = useMemo(\n    () => isCustomValValid(e, r, userStories.every(item => item.is_closed)),\n    [e, r, userStories]\n  );\n  const invalid = useMemo(() => isCustomValInvalid(e, r), [e, r]);\n  const loading = useMemo(\n    () => items.some(item => !getCustomValVersion(custom_value_map, item)),\n    [custom_value_map, items]\n  );\n  if (!customAttrE || !customAttrR || biz_days.length <= 1) {\n    return null;\n  }\n\n  return (\n    <>\n      {userStories.map(item => (\n        <UserStory item={item} key={item.user_story} />\n      ))}\n      <Card>\n        <CardHeader className={classNames(\"alert-info\")}>Total</CardHeader>\n        <CardBody>\n          <Row>\n            <Col>\n              <InputGroup>\n                <InputGroupAddon addonType=\"prepend\">\n                  {customAttrE.name}\n                </InputGroupAddon>\n                {loading ? <InputGroupSpinner /> : <Input readOnly value={e} />}\n              </InputGroup>\n            </Col>\n            <Col>\n              <InputGroup>\n                <InputGroupAddon addonType=\"prepend\">\n                  {customAttrR.name}\n                </InputGroupAddon>\n                {loading ? (\n                  <InputGroupSpinner />\n                ) : (\n                  <Input readOnly value={r} invalid={invalid} valid={valid} />\n                )}\n              </InputGroup>\n            </Col>\n            <Col>\n              <Grade e={e} r={r} />\n            </Col>\n          </Row>\n        </CardBody>\n        <CardFooter>\n          <TaskProgress tasks={items} />\n        </CardFooter>\n      </Card>\n    </>\n  );\n};\n","import React from \"react\";\nimport { Card, CardHeader } from \"reactstrap\";\nimport { IUser } from \"../store\";\n\nimport { AvatarSquare } from \"./UserTasks\";\nexport const PersonalInfo = ({ userInfo }: { userInfo: IUser }) => {\n  return (\n    <Card>\n      <CardHeader>\n        <AvatarSquare src={userInfo.photo} size=\"xlarge\" />\n        {userInfo.username} 's task\n      </CardHeader>\n    </Card>\n  );\n};\n","import React, { useContext, useState, useEffect, useCallback } from \"react\";\nimport {\n  ComposedChart,\n  Tooltip,\n  Line,\n  XAxis,\n  YAxis,\n  Bar,\n  Legend,\n  TooltipFormatter,\n  LegendValueFormatter\n} from \"recharts\";\nimport { ITask, ICustomValueMap } from \"../store\";\nimport _ from \"lodash\";\nimport moment from \"moment\";\nimport { RootContext } from \"../Provider\";\nimport { dayNameFromIdx } from \"./DaysSelector\";\nimport { getCustomVal } from \"./UserTasks\";\nimport { Card, CardHeader } from \"reactstrap\";\ninterface IChartItem {\n  label: string;\n  estimate: number;\n  result?: number;\n  add?: number;\n}\n\nconst getTaskFinished = (tasks: ITask[], date: string) =>\n  tasks.filter(task =>\n    task.finished_date\n      ? moment(date)\n          .local()\n          .endOf(\"days\")\n          .diff(moment(task.finished_date)) > 0\n      : false\n  );\n\nconst getTaskCreatedToday = (tasks: ITask[], date: string) =>\n  tasks.filter(\n    task =>\n      moment(date)\n        .local()\n        .format(\"YYYY-MM-DD\") ===\n      moment(task.created_date)\n        .local()\n        .format(\"YYYY-MM-DD\")\n  );\n\nconst getTaskCreated = (tasks: ITask[], date: string) =>\n  tasks.filter(\n    task =>\n      moment(date)\n        .endOf(\"days\")\n        .diff(moment(task.created_date)) > 0\n  );\n\nconst getSumVal = (\n  custom_value_map: ICustomValueMap,\n  tasks: ITask[],\n  custom_eid: string\n) => {\n  return _.chain(tasks)\n    .map(task => getCustomVal(custom_value_map, task, Number(custom_eid)))\n    .sum()\n    .value();\n};\nexport const Chart = ({ tasks }: { tasks: ITask[] }) => {\n  const [data, setData] = useState<IChartItem[]>([]);\n  const {\n    state: {\n      biz_days,\n      custom_value_map,\n      custom_eid,\n      custom_attr_e,\n      custom_attr_r\n    }\n  } = useContext(RootContext);\n  useEffect(() => {\n    const days_len = biz_days.length;\n    if (days_len > 0 && tasks.length > 0 && custom_eid) {\n      const allTaskVal = getSumVal(\n        custom_value_map,\n        getTaskCreated(tasks, biz_days[0]),\n        custom_eid\n      );\n      const data = biz_days.map((day, idx) => {\n        const label = dayNameFromIdx(day, idx);\n        const estimate = allTaskVal - (allTaskVal * idx) / (days_len - 1);\n        if (\n          moment()\n            .local()\n            .endOf(\"days\")\n            .diff(moment(day)) > 0\n        ) {\n          const add =\n            idx === 0\n              ? 0\n              : getSumVal(\n                  custom_value_map,\n                  getTaskCreatedToday(tasks, day),\n                  custom_eid\n                );\n          const result =\n            getSumVal(\n              custom_value_map,\n              getTaskCreated(tasks, day),\n              custom_eid\n            ) -\n            add -\n            getSumVal(\n              custom_value_map,\n              getTaskFinished(tasks, day),\n              custom_eid\n            );\n          return { label, estimate, result, add };\n        } else {\n          return { label, estimate };\n        }\n      });\n      setData(data);\n    } else {\n      setData([]);\n    }\n  }, [tasks, biz_days, custom_eid, custom_value_map, setData]);\n  const labelFormatter: LegendValueFormatter = useCallback(\n    (name: string) => {\n      switch (name) {\n        case \"estimate\": {\n          return custom_attr_e.name || name;\n        }\n        case \"result\": {\n          return custom_attr_r.name || name;\n        }\n        default: {\n          return name;\n        }\n      }\n    },\n    [custom_attr_e.name, custom_attr_r.name]\n  );\n  const formatter: TooltipFormatter = useCallback(\n    (value, name) => [Number(value).toFixed(1), labelFormatter(name)],\n    [labelFormatter]\n  );\n  if (data.length === 0) {\n    return null;\n  } else {\n    return (\n      <Card className=\"mb-2\">\n        <CardHeader>Burn down chart</CardHeader>\n        <ComposedChart data={data} width={800} height={400}>\n          <YAxis />\n          <XAxis dataKey=\"label\" />\n          <Tooltip formatter={formatter} />\n          <Legend formatter={labelFormatter} />\n          <Bar dataKey=\"result\" fill=\"#8884d8\" stackId=\"a\" />\n          <Bar dataKey=\"add\" fill=\"#82ca9d\" stackId=\"a\" />\n          <Line dataKey=\"estimate\" />\n        </ComposedChart>\n      </Card>\n    );\n  }\n};\n","import React, { useContext, useState, useEffect } from \"react\";\nimport { ITask, IUser } from \"../store\";\nimport { RootContext } from \"../Provider\";\nimport { Chart } from \"./Chart\";\n\nexport const PersonalChart = ({ userInfo }: { userInfo: IUser }) => {\n  const [userTasks, setUserTasks] = useState<ITask[]>([]);\n  const {\n    state: { tasks }\n  } = useContext(RootContext);\n  useEffect(() => {\n    const userTasks = tasks\n      .filter(task => task.assigned_to === userInfo.id)\n      .sort((a, b) => a.user_story - b.user_story);\n    setUserTasks(userTasks);\n  }, [tasks, userInfo.id]);\n\n  return <Chart tasks={userTasks} />;\n};\n","import React, { useCallback, useContext, useEffect, useState } from \"react\";\nimport {\n  Button,\n  Alert,\n  Navbar,\n  Form,\n  InputGroup,\n  Input,\n  InputGroupAddon,\n  InputGroupText,\n  Spinner\n} from \"reactstrap\";\nimport { PersonalTasks } from \"./PersonalTasks\";\nimport { PersonalInfo } from \"./PersonalInfo\";\nimport { RootContext } from \"../Provider\";\nimport { PersonalChart } from \"./PersonalChart\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faArrowCircleLeft,\n  faUser,\n  faKey,\n  faSignInAlt,\n  faSignOutAlt\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { Link } from \"react-router-dom\";\nimport { ActionTypes } from \"../actions\";\nimport { UpdateButton } from \"./UpdateButton\";\nimport useRouter from \"use-react-router\";\nimport { preventDefault } from \"../util/handler\";\nexport const SignInForm: React.FC = () => {\n  const {\n    state: { auth_token, auth_error, username: sign_in_username },\n    dispatch\n  } = useContext(RootContext);\n\n  const [username, setUsername] = useState<string>(\"\");\n  const [password, setPassword] = useState<string>(\"\");\n  const [loading, setLoading] = useState<boolean>(false);\n\n  const handleSubmit = useCallback(\n    (e: React.FormEvent) => {\n      if (username && password) {\n        setLoading(true);\n        dispatch({\n          type: ActionTypes.SIGN_IN,\n          payload: {\n            username,\n            password\n          }\n        });\n      }\n      e.preventDefault();\n    },\n    [password, username, dispatch, setLoading]\n  );\n  const handleUsername = useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>) => {\n      setUsername(e.target.value);\n    },\n    [setUsername]\n  );\n  const handlePassword = useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>) => {\n      setPassword(e.target.value);\n    },\n    [setPassword]\n  );\n  const handleSignOut = useCallback(() => {\n    dispatch({ type: ActionTypes.SIGN_OUT });\n  }, [dispatch]);\n  useEffect(() => {\n    if (auth_error || auth_token) {\n      setLoading(false);\n    }\n  }, [auth_error, auth_token, setLoading]);\n  return (\n    <>\n      {auth_token ? (\n        <Form inline onSubmit={preventDefault} className=\"mr-1\">\n          <InputGroup>\n            <InputGroupAddon addonType=\"prepend\">\n              <InputGroupText>\n                <FontAwesomeIcon icon={faUser} />\n              </InputGroupText>\n            </InputGroupAddon>\n            <InputGroupAddon\n              addonType=\"prepend\"\n              className=\"border border-success\"\n            >\n              <InputGroupText>{sign_in_username}</InputGroupText>\n            </InputGroupAddon>\n            <InputGroupAddon addonType=\"append\">\n              <Button title=\"Sign out\" onClick={handleSignOut} color=\"danger\">\n                <FontAwesomeIcon icon={faSignOutAlt} />\n              </Button>\n            </InputGroupAddon>\n          </InputGroup>\n        </Form>\n      ) : (\n        <Form inline onSubmit={handleSubmit} className=\"mr-1\">\n          <InputGroup>\n            <InputGroupAddon addonType=\"prepend\">\n              <InputGroupText>\n                <FontAwesomeIcon icon={faUser} />\n              </InputGroupText>\n            </InputGroupAddon>\n            <Input\n              disabled={loading}\n              onInput={handleUsername}\n              onChange={handleUsername}\n              name=\"username\"\n              placeholder=\"username\"\n              invalid={auth_error}\n            />\n          </InputGroup>\n          <InputGroup>\n            <InputGroupAddon addonType=\"prepend\">\n              <InputGroupText>\n                <FontAwesomeIcon icon={faKey} />\n              </InputGroupText>\n            </InputGroupAddon>\n            <Input\n              disabled={loading}\n              onInput={handlePassword}\n              onChange={handlePassword}\n              name=\"password\"\n              placeholder=\"password\"\n              type=\"password\"\n              invalid={auth_error}\n            />\n          </InputGroup>\n          <Button color=\"info\">\n            {loading ? (\n              <Spinner size=\"sm\" type=\"grow\" />\n            ) : (\n              <FontAwesomeIcon icon={faSignInAlt} />\n            )}\n          </Button>\n        </Form>\n      )}\n    </>\n  );\n};\nexport const PersonalPage: React.FC = () => {\n  const {\n    state: { user },\n    dispatch\n  } = useContext(RootContext);\n  const {\n    match: {\n      params: { uid }\n    }\n  } = useRouter();\n  useEffect(() => {\n    if (uid) {\n      dispatch({ type: ActionTypes.FETCH_USER, payload: { uid } });\n    }\n    return () => {\n      dispatch({ type: ActionTypes.RESET_USER });\n    };\n  }, [dispatch, uid]);\n  return (\n    <>\n      <Navbar color=\"light\" light>\n        <Button tag={Link} to=\"/\" className=\"mr-auto\">\n          <FontAwesomeIcon icon={faArrowCircleLeft} /> Go back\n        </Button>\n        <SignInForm />\n        <UpdateButton />\n      </Navbar>\n      {user ? (\n        <>\n          <PersonalInfo userInfo={user} />\n          <br />\n          <PersonalTasks userInfo={user} />\n          <br />\n          <PersonalChart userInfo={user} />\n        </>\n      ) : (\n        <Alert color=\"danger\">This user does not exist.</Alert>\n      )}\n    </>\n  );\n};\n","import React, { useCallback, useContext, useEffect, useState } from \"react\";\nimport { Avatar, AvatarProps } from \"@rmwc/avatar\";\nimport { ICustomValueMap, IUser, ITask, ICustomAttr } from \"../store\";\nimport { RootContext } from \"../Provider\";\nimport classNames from \"classnames\";\nimport {\n  Table,\n  Navbar,\n  Form,\n  Input,\n  InputGroup,\n  InputGroupAddon,\n  InputGroupText,\n  Progress\n} from \"reactstrap\";\nimport _ from \"lodash\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faMedal,\n  faTimes,\n  faEquals,\n  faGrinBeam,\n  faGrinBeamSweat,\n  faDizzy,\n  faGhost\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { UpdateButton } from \"./UpdateButton\";\nimport styles from \"./UserTasks.module.css\";\nimport moment from \"moment\";\nimport { Link } from \"react-router-dom\";\nimport { preventDefault } from \"../util/handler\";\nimport { SignInForm } from \"./PersonalPage\";\n\nconst barStyles = [\"success\", \"warning\", \"info\", \"danger\"];\nconst getTasksByUser = (items: ITask[]) => _.groupBy(items, \"assigned_to\");\nconst getClosedTasks = (items: ITask[]) => items.filter(item => item.is_closed);\nexport const AvatarSquare: React.FC<AvatarProps> = props => {\n  const src = props.src || `http://i.pravatar.cc/80?u=${Math.random()}`;\n  return <Avatar {...props} src={src} square className=\"mr-1\" />;\n};\nexport const parseCustomVal = (val: string) =>\n  _.chain(val)\n    .replace(/[^0-9.+,]/g, \"\")\n    .replace(/[+]/g, \",\")\n    .split(\",\")\n    .compact()\n    .map(Number)\n    .sum()\n    .value();\n\nexport const getCustomVal = (\n  custom_value_map: ICustomValueMap,\n  task: ITask,\n  id: number\n) => {\n  if (custom_value_map.has(task)) {\n    return parseCustomVal(\n      _.get(custom_value_map.get(task), `attributes_values.${id}`, \"0\")\n    );\n  } else {\n    return 0;\n  }\n};\nexport const getSumCustomVal = (\n  custom_value_map: ICustomValueMap,\n  tasks: ITask[],\n  id: number\n) =>\n  _.chain(tasks)\n    .map(task => getCustomVal(custom_value_map, task, id))\n    .sum()\n    .value();\n\nexport const getCustomValVersion = (\n  custon_value_map: ICustomValueMap,\n  task: ITask\n) => {\n  if (custon_value_map.has(task)) {\n    return _.get(custon_value_map.get(task), \"version\");\n  } else {\n    return undefined;\n  }\n};\nexport const isCustomValValid = (e: number, r: number, is_closed: boolean) =>\n  is_closed && r === e;\nexport const isCustomValInvalid = (e: number, r: number) => r > e;\nconst getGrade = (e: number, r: number): [string | null, number] => {\n  if (_.isNumber(e) && _.isNumber(r) && e > 0) {\n    const diff = Math.abs(e - r) / e;\n    if (diff <= 0.05) {\n      return [\"gold\", 3];\n    }\n    if (diff <= 0.1) {\n      return [\"silver\", 2];\n    }\n    if (diff < 0.2) {\n      return [\"bronze\", 1];\n    }\n  }\n  return [null, 0];\n};\nconst NameAndWorkLoad = ({\n  username,\n  val,\n  total,\n  imgSrc\n}: {\n  username: string;\n  val: number;\n  total: number;\n  imgSrc: string;\n}) => {\n  if (!val) {\n    return (\n      <>\n        <td>\n          <AvatarSquare src={imgSrc} /> {username}\n        </td>\n        <td />\n      </>\n    );\n  }\n  const diff = (val - total) / total;\n  let icon;\n  let tblCls;\n  if (diff < -0.1) {\n    icon = faGrinBeam;\n    tblCls = \"\";\n  } else if (diff <= 0.1) {\n    tblCls = \"table-success\";\n    icon = faGrinBeam;\n  } else if (diff <= 0.2) {\n    tblCls = \"table-warning\";\n    icon = faGrinBeamSweat;\n  } else {\n    tblCls = \"table-danger\";\n    icon = faDizzy;\n  }\n  return (\n    <>\n      <td className={tblCls}>\n        <AvatarSquare src={imgSrc} /> {username}\n        <FontAwesomeIcon className=\"mx-1\" icon={icon} />\n      </td>\n      <td className={classNames(tblCls, \"text-right\")}>{val}</td>\n    </>\n  );\n};\n\nexport const Medal = ({ e, r }: { e: number; r: number }) => {\n  const [grade, num] = getGrade(e, r);\n  if (grade) {\n    return (\n      <>\n        {_.times(num).map(i => (\n          <FontAwesomeIcon key={i} className={styles[grade]} icon={faMedal} />\n        ))}\n      </>\n    );\n  } else {\n    return null;\n  }\n};\ninterface IProgressTotal {\n  status: number;\n  total: number;\n  style?: string;\n  label: string;\n}\ninterface TaskProgressProps {\n  tasks: ITask[];\n}\n\nexport const TaskProgress: React.FC<TaskProgressProps> = ({ tasks }) => {\n  const {\n    state: { active_task_statuses, custom_eid, custom_value_map }\n  } = useContext(RootContext);\n  const [items, setItems] = useState<IProgressTotal[]>([]);\n  const [allSum, setAllSum] = useState<number>(0);\n  const eid = Number(custom_eid);\n  useEffect(() => {\n    const val = _.chain(active_task_statuses)\n      .filter({ is_closed: true })\n      .reverse()\n      .map((item, idx) => ({\n        status: item.id,\n        total: getSumCustomVal(\n          custom_value_map,\n          _.filter(tasks, { status: item.id }),\n          eid\n        ),\n        style: barStyles[idx],\n        label: item.name\n      }))\n      .value();\n    setItems(val);\n  }, [active_task_statuses, eid, custom_value_map, setItems, tasks]);\n  useEffect(() => {\n    const val = getSumCustomVal(custom_value_map, tasks, eid);\n    setAllSum(val);\n  }, [eid, custom_value_map, setAllSum, tasks]);\n  return (\n    <Progress multi>\n      {items.map(item => (\n        <Progress\n          key={item.label}\n          bar\n          max={allSum}\n          value={item.total}\n          color={item.style}\n        >\n          {item.label}\n        </Progress>\n      ))}\n    </Progress>\n  );\n};\nconst UserRow = ({\n  item,\n  sums,\n  isPast,\n  total,\n  hpd,\n  tasks\n}: {\n  item: IUser;\n  sums: { [key: string]: { e: number; r: number } };\n  isPast: boolean;\n  total: number;\n  hpd: number;\n  tasks: ITask[];\n}) => {\n  const [customTotal, setTotal] = useState<number>(0);\n  const handleChange = useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>) => {\n      setTotal(Number(e.target.value) || 0);\n    },\n    [setTotal]\n  );\n  const sumItem = _.get(sums, item.id);\n  const e = _.get(sumItem, \"e\");\n  const r = _.get(sumItem, \"r\");\n  const margedTotal = customTotal || total;\n  const totalStr = String(margedTotal);\n  return (\n    <tr key={item.id}>\n      {total > 0 ? (\n        <>\n          <NameAndWorkLoad\n            username={item.username}\n            val={e}\n            total={margedTotal}\n            imgSrc={item.photo}\n          />\n          <td className=\"text-right\">{total}</td>\n          <td className={styles.custom_input_td}>\n            <Input\n              bsSize=\"sm\"\n              type=\"number\"\n              className=\"text-right\"\n              value={totalStr}\n              step={hpd}\n              onChange={handleChange}\n            />\n          </td>\n        </>\n      ) : (\n        <>\n          <td>\n            <AvatarSquare src={item.photo} />\n            <Link to={`/${item.id}`}>{item.username}</Link>\n          </td>\n          <td className=\"text-right\">{e}</td>\n          <td className=\"text-right\">{r}</td>\n          <td>{_.isNumber(e) && <TaskProgress tasks={tasks} />}</td>\n        </>\n      )}\n\n      {isPast ? (\n        <td>\n          <Medal e={e} r={r} />\n        </td>\n      ) : null}\n    </tr>\n  );\n};\nconst getTaskSumByUser = (\n  items: ITask[],\n  custom_value_map: ICustomValueMap,\n  custom_eid: string,\n  custom_rid: string\n) => {\n  const eid = Number(custom_eid);\n  const rid = Number(custom_rid);\n  const tasksByUser = _.mapValues(getTasksByUser(items), tasks =>\n    _.chain(tasks)\n      .map(task => ({\n        e: getCustomVal(custom_value_map, task, eid),\n        r: getCustomVal(custom_value_map, task, rid)\n      }))\n      .reduce((result, val) => ({ e: result.e + val.e, r: result.r + val.r }), {\n        e: 0,\n        r: 0\n      })\n      .value()\n  );\n  return tasksByUser;\n};\nexport const getCustomAttr = (items: ICustomAttr[], id: number) =>\n  items.find(item => item.id === id);\nexport const UserTasks = () => {\n  const {\n    state: {\n      tasks,\n      custom_value_map,\n      custom_attrs,\n      custom_eid,\n      custom_rid,\n      biz_days,\n      project: { members }\n    }\n  } = useContext(RootContext);\n  const [hpd, setHpd] = useState<number>(0);\n  const [total, setTotal] = useState<number>(0);\n  const activeLen = biz_days.length - 1;\n  const handleChange = useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>) => {\n      setHpd(Number(e.target.value) || 0);\n    },\n    [setHpd]\n  );\n  useEffect(() => {\n    setTotal(hpd * activeLen);\n  }, [hpd, activeLen, setTotal]);\n  const taskSumByUser = getTaskSumByUser(\n    tasks,\n    custom_value_map,\n    custom_eid,\n    custom_rid\n  );\n  const customAttrE = getCustomAttr(custom_attrs, Number(custom_eid));\n  const customAttrR = getCustomAttr(custom_attrs, Number(custom_rid));\n  if (!customAttrE || !customAttrR || biz_days.length <= 1) {\n    return null;\n  }\n  const notAssignedSum = _.get(taskSumByUser, \"null.e\", 0);\n  const isPlanning = total > 0;\n  const isPast =\n    !isPlanning &&\n    moment().diff(\n      moment(_.last(biz_days))\n        .local()\n        .endOf(\"days\")\n    ) > 0;\n  const tasksByUser = getTasksByUser(getClosedTasks(tasks));\n  return (\n    <>\n      <Navbar color=\"light\" light>\n        <Form inline={true} className=\"mr-auto\" onSubmit={preventDefault}>\n          <InputGroup>\n            <Input\n              type=\"number\"\n              step=\"0.5\"\n              placeholder=\"hours / day\"\n              className=\"text-right\"\n              onChange={handleChange}\n            />\n            <InputGroupAddon addonType=\"append\">\n              <InputGroupText>\n                <FontAwesomeIcon className=\"mx-2\" icon={faTimes} />\n                {activeLen} [days]\n                <FontAwesomeIcon className=\"mx-2\" icon={faEquals} />\n              </InputGroupText>\n              {total > 0 ? (\n                <>\n                  <InputGroupText className=\"bg-white\">\n                    <strong>{total}</strong>\n                  </InputGroupText>\n                  <InputGroupText>hours / sprint</InputGroupText>\n                </>\n              ) : null}\n            </InputGroupAddon>\n          </InputGroup>\n        </Form>\n        <SignInForm />\n        <UpdateButton />\n      </Navbar>\n      <Table bordered>\n        <thead>\n          <tr>\n            <th>Name</th>\n            <th>{customAttrE.name}</th>\n            {isPlanning ? (\n              <>\n                <th>Total</th> <th>Custom</th>\n              </>\n            ) : (\n              <>\n                <th>{customAttrR.name}</th>\n                <th>Progress</th>\n              </>\n            )}\n            {isPast ? <th>Grade</th> : null}\n          </tr>\n        </thead>\n        <tbody>\n          {(members || []).map(item => (\n            <UserRow\n              key={item.id}\n              isPast={isPast}\n              item={item}\n              sums={taskSumByUser}\n              total={total}\n              hpd={hpd}\n              tasks={tasksByUser[item.id] || []}\n            />\n          ))}\n          <tr key=\"null\">\n            <td className=\"text-danger\">\n              <FontAwesomeIcon icon={faGhost} className=\"ml-1 mr-2 fa-lg\" />\n              Not assigned\n            </td>\n            <td className=\"text-right text-danger\">{notAssignedSum}</td>\n            <td />\n            <td />\n            {isPast ? <td /> : null}\n          </tr>\n        </tbody>\n      </Table>\n    </>\n  );\n};\n","import React, { useContext, useMemo } from \"react\";\nimport { RootContext } from \"../Provider\";\nimport { Card, CardHeader, CardBody } from \"reactstrap\";\nimport { getCustomVal, getCustomValVersion } from \"./UserTasks\";\nimport { UserStoryWithEstimate, convToTasksByUserStory } from \"./UserStory\";\nexport const UnEstimatedTasks = () => {\n  const {\n    state: { tasks, custom_value_map, custom_eid }\n  } = useContext(RootContext);\n  const eid = useMemo(() => Number(custom_eid), [custom_eid]);\n  const items = useMemo(\n    () =>\n      eid\n        ? tasks.filter(\n            task =>\n              getCustomValVersion(custom_value_map, task) &&\n              getCustomVal(custom_value_map, task, eid) === 0\n          )\n        : [],\n    [custom_value_map, eid, tasks]\n  );\n  const userStories = useMemo(() => convToTasksByUserStory(items), [items]);\n  if (items.length === 0) {\n    return null;\n  } else {\n    return (\n      <Card>\n        <CardHeader className=\"alert-danger\">Un estimated tasks</CardHeader>\n        <CardBody>\n          {userStories.map(item => (\n            <UserStoryWithEstimate item={item} key={item.user_story} />\n          ))}\n        </CardBody>\n      </Card>\n    );\n  }\n};\n","import React, { useContext, useMemo } from \"react\";\nimport _ from \"lodash\";\nimport { RootContext } from \"../Provider\";\nimport { UserStoryWithTaskUser, convToTasksByUserStory } from \"./UserStory\";\nimport { Card, CardHeader, CardBody } from \"reactstrap\";\nexport const NotAssignedTasks: React.FC = () => {\n  const {\n    state: { tasks }\n  } = useContext(RootContext);\n  const items = useMemo(() => _.filter(tasks, { assigned_to: null }), [tasks]);\n  const userStories = useMemo(() => convToTasksByUserStory(items), [items]);\n  if (items.length === 0) {\n    return null;\n  } else {\n    return (\n      <Card>\n        <CardHeader className=\"alert-danger\">Not assigned tasks</CardHeader>\n        <CardBody>\n          {userStories.map(item => (\n            <UserStoryWithTaskUser item={item} key={item.user_story} />\n          ))}\n        </CardBody>\n      </Card>\n    );\n  }\n};\n","import React, { useContext } from \"react\";\nimport { RootContext } from \"../Provider\";\nimport { Chart } from \"./Chart\";\n\nexport const OverviewChart = () => {\n  const {\n    state: { tasks }\n  } = useContext(RootContext);\n  return <Chart tasks={tasks} />;\n};\n","import * as React from \"react\";\nimport { UserTasks } from \"./UserTasks\";\nimport { UnEstimatedTasks } from \"./UnEstimatedTasks\";\nimport { NotAssignedTasks } from \"./NotAssignedTasks\";\nimport { OverviewChart } from \"./OverviewChart\";\n\nexport const OverView = () => (\n  <>\n    <UserTasks />\n    <NotAssignedTasks />\n    <br />\n    <UnEstimatedTasks />\n    <br />\n    <OverviewChart />\n  </>\n);\n","import React from \"react\";\nimport { ToastContainer } from \"react-toastify\";\nimport { Controller } from \"./components/Controller\";\nimport { Provider } from \"./Provider\";\nimport { HashRouter, Route } from \"react-router-dom\";\nimport { OverView } from \"./components/OverView\";\nimport { PersonalPage } from \"./components/PersonalPage\";\nexport const App = () => (\n  <div className=\"container\">\n    <ToastContainer />\n    <HashRouter>\n      <Provider>\n        <Controller />\n        <Route exact path=\"/\" component={OverView} />\n        <Route exact path=\"/:uid\" component={PersonalPage} />\n      </Provider>\n    </HashRouter>\n  </div>\n);\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport \"bootstrap-css-only/css/bootstrap.css\";\nimport \"@material/switch/dist/mdc.switch.css\";\nimport \"@material/form-field/dist/mdc.form-field.css\";\nimport \"@rmwc/avatar/avatar.css\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"UserStory_header__3lGFX\",\"toggle_input\":\"UserStory_toggle_input__ARa5d\",\"display_medal\":\"UserStory_display_medal__3t53K\",\"medal\":\"UserStory_medal__2Zi1f\",\"is_closed\":\"UserStory_is_closed__2ABQp\"};"],"sourceRoot":""}