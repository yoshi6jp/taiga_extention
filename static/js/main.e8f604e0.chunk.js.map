{"version":3,"sources":["components/Controller.module.css","components/PersonalInfo.module.css","actions.ts","store.ts","util/useSideEffector.ts","reducer.ts","sideEffectors/fetchProjects.ts","sideEffectors/fetchProject.ts","sideEffectors/fetchMilestones.ts","sideEffectors/fetchTasks.ts","sideEffectors/fetchTaskStatuses.ts","sideEffectors/fetchCustomAttrs.ts","sideEffectors/fetchCustomValueMap.ts","sideEffectors/fetchUser.ts","sideEffectors/patchCustomValue.ts","sideEffectors/patchTask.ts","util/toastr.tsx","sideEffectors/signIn.ts","sideEffectors/index.ts","sideEffectors/signOut.ts","Provider.tsx","init.ts","util/handler.ts","components/ProjectSelector.tsx","components/MilestoneSelector.tsx","components/CustomValuesSelector.tsx","components/DaysSelector.tsx","components/TaskStatusSelector.tsx","components/Controller.tsx","components/UpdateButton.tsx","components/UserTasks.tsx","components/UnEstimatedTasks.tsx","components/Chart.tsx","components/OverviewChart.tsx","components/OverView.tsx","components/InputGroupSpinner.tsx","components/UserStory.tsx","components/PersonalTasks.tsx","components/PersonalInfo.tsx","components/PersonalChart.tsx","components/PersonalPage.tsx","App.tsx","serviceWorker.ts","index.tsx","components/UserStory.module.css","components/UserTasks.module.css"],"names":["module","exports","header","avator","ActionTypes","StorageKey","ss","getFromStorage","key","localStorage","getItem","getFromStorageWithSubkey","subkey","concat","setToStorage","item","setItem","setToStorageWithSubkey","initialStateFn","url","URL","pid","PID","mid","MID","custom_eid","CUSTOM_EID","custom_rid","CUSTOM_RID","biz_days_str","BIZ_DAYS","biz_days","_","compact","split","sort","reject_task_status_ids","REJECT_TASK_STATUS_IDS","isOpen","auth_token","auth_error","username","password","user","projects","project","custom_attrs","milestones","tasks","task_statuses","active_task_statuses","custom_value_map","WeakMap","updated_time","reducer","state","arguments","length","undefined","action","type","SET_URL","payload","Object","objectSpread","SET_PROJECTS","SET_PID","SET_PROJECT","SET_MID","SET_MILESTONES","SET_CUSTOM_EID","SET_CUSTOM_ATTRS","SET_CUSTOM_RID","SET_BIZ_DAYS","join","ADD_BIZ_DAY","biz_day","chain","toConsumableArray","uniq","value","REMOVE_BIZ_DAY","reject","SET_TASKS","SET_TASK_STATUSES","SET_ACTIVE_TASK_STATUSES","SET_CUSTOM_VALUE_MAP","SET_USER","RESET_USER","ADD_REJECT_TASK_STATUS_ID","reject_task_status_id","REMOVE_REJECT_TASK_STATUS_ID","OPEN_CONTROLLER","CLOSE_CONTROLLER","UPDATE_DATA","Date","now","SIGN_IN","_action$payload","SET_AUTH_TOKEN","axios","defaults","headers","common","SET_AUTH_ERROR","SIGN_OUT","dispatchSideEffector","dispatch","sideEffector","dispatchSECaller","fetchProjecs","_ref","asyncToGenerator","regenerator_default","a","mark","_callee","_state","_ref2","wrap","_context","prev","next","fetchData","sent","data","t0","console","log","stop","_x","_x2","_x3","apply","this","fetchProject","FETCH_PROJECT","fetchMilestones","FETCH_MILESTONES","params","fetchTasks","milestone","FETCH_TASKS","x-disable-pagination","filter","includes","String","status","fetchTaskStatuses","FETCH_TASK_STATUSES","fetchCustomAttrs","FETCH_CUSTOM_ATTRS","fetchCustomValueMap","_callee2","_context2","FETCH_CUSTOM_VALUE_MAP","Promise","all","map","_ref3","custom_attr_val","id","abrupt","_x4","t1","t2","fetchUser","uid","FETCH_USER","patchCustomValue","version","task","custom_value","attributes_values","PATCH_CUSTOM_VALUE","find","has","get","patchData","defineProperty","patchTask","_patchData","PATCH_TASK","MessageWithIcon","icon","message","react_default","createElement","className","index_es","toastr","toast","success","toastr_MessageWithIcon","faCheck","error","faCheckCircle","signIn","postData","USERNAME","PASSWORD","errToastr","path","config","baseUrl","post","patch","err","response","_error_message","rootSideEffector","FETCH_PROJECTS","removeItem","signOut","replace","initialState","RootContext","createContext","Provider","children","_useSideEffector","slicedToArray","dispatchSE","useCallback","useSideEffector","useReducer","_useSideEffector2","useEffect","orderBy","init","preventDefault","e","stopPropagation","ProjectSelector","_useContext","useContext","_useContext$state","handleChange","target","InputGroup","InputGroupAddon","addonType","Input","onChange","name","MilestoneSelector","CustomValuesSelector","dayNameFromIdx","date","idx","getMilestone","items","weekClassName","day","text-danger","text-info","DayItem","checked","format","isPlanning","eleId","Fragment","classNames","table-info","biz","isWeekDay","FormGroup","check","inline","Label","disabled","isWeekendDay","UncontrolledTooltip","indexOf","dayName","DaysSelector","_useContext2","_useContext2$state","_useState","useState","_useState2","setItems","startM","moment","estimated_start","local","daysInSprint","estimated_finish","diff","times","i","clone","add","getDays","weekdays","chunk","Card","CardHeader","Table","bordered","days","DaysSelector_DayItem","StatusItem","defaultChecked","TaskStatusSelector","CardBody","TaskStatusSelector_StatusItem","ToggleIcon","rotation","faChevronCircleRight","Controller","stateUrl","setUrl","handleUrl","handleSubmit","toggle","taskboardUrl","project_extra_info","slug","getTaskboardUrl","styles","onClick","Controller_ToggleIcon","Badge","color","pill","getSpName","head","last","getRange","href","rel","faExternalLinkAlt","Collapse","Form","onSubmit","defaultValue","placeholder","Button","ProjectSelector_ProjectSelector","MilestoneSelector_MilestoneSelector","CustomValuesSelector_CustomValuesSelector","DaysSelector_DaysSelector","TaskStatusSelector_TaskStatusSelector","UpdateButton","updateData","faSyncAlt","barStyles","getTasksByUser","groupBy","getCustomVal","val","Number","sum","getSumCustomVal","getCustomValVersion","custon_value_map","isCustomValValid","r","is_closed","isCustomValInvalid","NameAndWorkLoad","total","imgSrc","src","alt","tblCls","faGrinBeam","faGrinBeamSweat","faDizzy","Medal","_getGrade","isNumber","Math","abs","getGrade","_getGrade2","grade","num","faMedal","TaskProgress","_useState3","_useState4","allSum","setAllSum","eid","reverse","style","label","Progress","multi","bar","max","UserRow","_ref4","sums","isPast","hpd","_useState5","_useState6","customTotal","setTotal","sumItem","margedTotal","totalStr","photo","random","UserTasks_NameAndWorkLoad","custom_input_td","bsSize","step","react_router_dom","to","UserTasks_TaskProgress","UserTasks_Medal","getCustomAttr","UserTasks","members","_useState7","_useState8","setHpd","_useState9","_useState10","activeLen","taskSumByUser","rid","mapValues","reduce","result","getTaskSumByUser","customAttrE","customAttrR","unassignedSum","endOf","tasksByUser","Navbar","light","InputGroupText","faTimes","faEquals","UpdateButton_UpdateButton","UserTasks_UserRow","TaskItem","ref","ListGroupItem","tag","subject","UnEstimatedTasks","ListGroup","UnEstimatedTasks_TaskItem","getTaskCreated","created_date","getSumVal","Chart","setData","days_len","allTaskVal","estimate","getTaskCreatedToday","finished_date","getTaskFinished","es6","width","height","dataKey","fill","stackId","OverviewChart","Chart_Chart","OverView","react","UserTasks_UserTasks","UnEstimatedTasks_UnEstimatedTasks","OverviewChart_OverviewChart","InputGroupSpinner","faSpinner","UserStoryLink","user_story_extra_info","usName","title","TaskLink","taskName","ToggleNumberInput","valid","invalid","loading","setChecked","setVal","evt","currentTarget","handleVal","toggle_input","InputGroupSpinner_InputGroupSpinner","InputGroupText_default","faHandPointRight","onInput","min","faCloudUploadAlt","readOnly","faEdit","Grade","display_medal","medal","TaskStatusItem","_ref5","onSelect","handleClick","DropdownItem","_ref6","setLoading","handleSelect","Spinner","UncontrolledDropdown","DropdownToggle","caret","status_extra_info","DropdownMenu","UserStory_TaskStatusItem","_ref7","_useContext3","_useContext3$state","onSubmitE","onSubmitR","ListGroupItem_default","UserStory_TaskLink","UserStory_TaskStatusSelector","Row","Col","UserStory_ToggleNumberInput","UserStory_Grade","UserStory","_ref8","setIsOpen","UserStory_UserStoryLink","ListGroup_default","UserStory_TaskItem","PersonalTasks","userInfo","userStories","setUserStories","userTasks","assigned_to","b","user_story","every","_items$reduce","_items$reduce2","some","UserStory_UserStory","CardFooter","PersonalInfo","PersonalChart","setUserTasks","SignInForm","sign_in_username","setUsername","setPassword","handleUsername","handlePassword","handleSignOut","faUser","faSignOutAlt","faKey","size","faSignInAlt","PersonalPage","useRouter","match","Link","faArrowCircleLeft","PersonalPage_SignInForm","PersonalInfo_PersonalInfo","PersonalTasks_PersonalTasks","PersonalChart_PersonalChart","Alert","App","react_toastify","Provider_Provider","Controller_Controller","react_router","exact","component","Boolean","window","location","hostname","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","gold","silver","bronze"],"mappings":"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","file":"static/js/main.e8f604e0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Controller_header__1l3a3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"avator\":\"PersonalInfo_avator__YLWcN\"};","import {\n  IProject,\n  IMilestone,\n  ICustomAttr,\n  ITask,\n  ICustomValueMap,\n  ITaskStatus,\n  IUser\n} from \"./store\";\n\nexport enum ActionTypes {\n  SET_URL = \"SET_URL\",\n  SIGN_IN = \"SIGN_IN\",\n  SET_AUTH_TOKEN = \"SET_AUTH_TOKEN\",\n  SET_AUTH_ERROR = \"SET_AUTH_ERROR\",\n  SIGN_OUT = \"SIGN_OUT\",\n  FETCH_PROJECTS = \"FETCH_PROJECTS\",\n  SET_PROJECTS = \"SET_PROJECTS\",\n  SET_PID = \"SET_PID\",\n  FETCH_PROJECT = \"FETCH_PROJECT\",\n  SET_PROJECT = \"SET_PROJECT\",\n  FETCH_MILESTONES = \"FETCH_MILESTONES\",\n  SET_MID = \"SET_MID\",\n  SET_MILESTONES = \"SET_MILESTONES\",\n  SET_CUSTOM_EID = \"SET_CUSTOM_EID\",\n  SET_CUSTOM_RID = \"SET_CUSTOM_RID\",\n  FETCH_CUSTOM_ATTRS = \"FETCH_CUSTOM_ATTRS\",\n  SET_CUSTOM_ATTRS = \"SET_CUSTOM_ATTRS\",\n  SET_BIZ_DAYS = \"SET_BIZ_DAYS\",\n  ADD_BIZ_DAY = \"ADD_BIZ_DAY\",\n  REMOVE_BIZ_DAY = \"REMOVE_BIZ_DAY\",\n  FETCH_TASKS = \"FETCH_TASKS\",\n  SET_TASKS = \"SET_TASKS\",\n  PATCH_TASK = \"PATCH_TASK\",\n  FETCH_TASK_STATUSES = \"FETCH_TASK_STATUSES\",\n  SET_TASK_STATUSES = \"SET_TASK_STATUSES\",\n  SET_ACTIVE_TASK_STATUSES = \"SET_ACTIVE_TASK_STATUSES\",\n  FETCH_CUSTOM_VALUE_MAP = \"FETCH_CUSTOM_VALUE_MAP\",\n  SET_CUSTOM_VALUE_MAP = \"SET_CUSTOM_VALUE_MAP\",\n  PATCH_CUSTOM_VALUE = \"PATCH_CUSTOM_VALUE\",\n  FETCH_USER = \"FETCH_USER\",\n  SET_USER = \"SET_USER\",\n  RESET_USER = \"RESET_USER\",\n  ADD_REJECT_TASK_STATUS_ID = \"ADD_REJECT_TASK_STATUS\",\n  REMOVE_REJECT_TASK_STATUS_ID = \"REMOVE_REJECT_TASK_STATUS\",\n  OPEN_CONTROLLER = \"OPEN_CONTROLLER\",\n  CLOSE_CONTROLLER = \"CLOSE_CONTROLLER\",\n  UPDATE_DATA = \"UPDATE_DATA\"\n}\n\nexport interface IAction {\n  type: ActionTypes;\n  payload?: any;\n  meta?: { [key: string]: any };\n}\n\nexport interface SET_URL extends IAction {\n  type: ActionTypes.SET_URL;\n  payload: { url: string };\n}\nexport interface SIGN_IN extends IAction {\n  type: ActionTypes.SIGN_IN;\n  payload: { username: string; password: string };\n}\nexport interface SET_AUTH_TOKEN extends IAction {\n  type: ActionTypes.SET_AUTH_TOKEN;\n  payload: { auth_token: string };\n}\nexport interface SET_AUTH_ERROR extends IAction {\n  type: ActionTypes.SET_AUTH_ERROR;\n}\nexport interface SIGN_OUT extends IAction {\n  type: ActionTypes.SIGN_OUT;\n}\nexport interface FETCH_PROJECTS extends IAction {\n  type: ActionTypes.FETCH_PROJECTS;\n}\nexport interface SET_PROJECTS extends IAction {\n  type: ActionTypes.SET_PROJECTS;\n  payload: { projects: IProject[] };\n}\n\nexport interface SET_PID extends IAction {\n  type: ActionTypes.SET_PID;\n  payload: { pid: string };\n}\nexport interface FETCH_PROJECT extends IAction {\n  type: ActionTypes.FETCH_PROJECT;\n  payload: { pid: string };\n}\nexport interface SET_PROJECT extends IAction {\n  type: ActionTypes.SET_PROJECT;\n  payload: { project: IProject };\n}\nexport interface FETCH_MILESTONES extends IAction {\n  type: ActionTypes.FETCH_MILESTONES;\n  payload: { project: string };\n}\nexport interface SET_MILESTONES extends IAction {\n  type: ActionTypes.SET_MILESTONES;\n  payload: { milestones: IMilestone[] };\n}\n\nexport interface SET_MID extends IAction {\n  type: ActionTypes.SET_MID;\n  payload: { mid: string };\n}\n\nexport interface SET_CUSTOM_EID extends IAction {\n  type: ActionTypes.SET_CUSTOM_EID;\n  payload: { custom_eid: string };\n}\n\nexport interface SET_CUSTOM_RID extends IAction {\n  type: ActionTypes.SET_CUSTOM_RID;\n  payload: { custom_rid: string };\n}\n\nexport interface FETCH_CUSTOM_ATTRS extends IAction {\n  type: ActionTypes.FETCH_CUSTOM_ATTRS;\n  payload: { project: string };\n}\nexport interface SET_CUSTOM_ATTRS extends IAction {\n  type: ActionTypes.SET_CUSTOM_ATTRS;\n  payload: { custom_attrs: ICustomAttr[] };\n}\n\nexport interface SET_BIZ_DAYS extends IAction {\n  type: ActionTypes.SET_BIZ_DAYS;\n  payload: { biz_days: string[] };\n}\n\nexport interface ADD_BIZ_DAY extends IAction {\n  type: ActionTypes.ADD_BIZ_DAY;\n  payload: { biz_day: string };\n}\n\nexport interface REMOVE_BIZ_DAY extends IAction {\n  type: ActionTypes.REMOVE_BIZ_DAY;\n  payload: { biz_day: string };\n}\n\nexport interface FETCH_TASKS extends IAction {\n  type: ActionTypes.FETCH_TASKS;\n  payload: { milestone: string; reject_task_status_ids: string[] };\n}\nexport interface SET_TASKS extends IAction {\n  type: ActionTypes.SET_TASKS;\n  payload: { tasks: ITask[] };\n}\n\nexport interface PATCH_TASK extends IAction {\n  type: ActionTypes.PATCH_TASK;\n  payload: { key: string; value: string | number; id: number };\n}\nexport interface FETCH_CUSTOM_VALUE_MAP extends IAction {\n  type: ActionTypes.FETCH_CUSTOM_VALUE_MAP;\n  payload: { tasks: ITask[] };\n}\nexport interface SET_CUSTOM_VALUE_MAP extends IAction {\n  type: ActionTypes.SET_CUSTOM_VALUE_MAP;\n  payload: { custom_value_map: ICustomValueMap };\n}\nexport interface PATCH_CUSTOM_VALUE extends IAction {\n  type: ActionTypes.PATCH_CUSTOM_VALUE;\n  payload: {\n    id: string | number;\n    key: string;\n    value: string | number;\n    version: number;\n  };\n}\nexport interface FETCH_TASK_STATUSES extends IAction {\n  type: ActionTypes.FETCH_TASK_STATUSES;\n  payload: { project: string };\n}\nexport interface SET_TASK_STATUSES extends IAction {\n  type: ActionTypes.SET_TASK_STATUSES;\n  payload: { task_statuses: ITaskStatus[] };\n}\nexport interface SET_ACTIVE_TASK_STATUSES extends IAction {\n  type: ActionTypes.SET_ACTIVE_TASK_STATUSES;\n  payload: { active_task_statuses: ITaskStatus[] };\n}\n\nexport interface FETCH_USER extends IAction {\n  type: ActionTypes.FETCH_USER;\n  payload: { uid: string };\n}\nexport interface SET_USER extends IAction {\n  type: ActionTypes.SET_USER;\n  payload: { user: IUser };\n}\nexport interface RESET_USER extends IAction {\n  type: ActionTypes.RESET_USER;\n}\nexport interface ADD_REJECT_TASK_STATUS_ID extends IAction {\n  type: ActionTypes.ADD_REJECT_TASK_STATUS_ID;\n  payload: { reject_task_status_id: string };\n}\n\nexport interface REMOVE_REJECT_TASK_STATUS_ID extends IAction {\n  type: ActionTypes.REMOVE_REJECT_TASK_STATUS_ID;\n  payload: { reject_task_status_id: string };\n}\n\nexport interface OPEN_CONTROLLER extends IAction {\n  type: ActionTypes.OPEN_CONTROLLER;\n}\n\nexport interface CLOSE_CONTROLLER extends IAction {\n  type: ActionTypes.CLOSE_CONTROLLER;\n}\n\nexport interface UPDATE_DATA extends IAction {\n  type: ActionTypes.UPDATE_DATA;\n}\n\nexport type Actions =\n  | SET_URL\n  | SIGN_IN\n  | SET_AUTH_TOKEN\n  | SET_AUTH_ERROR\n  | SIGN_OUT\n  | FETCH_PROJECTS\n  | SET_PROJECTS\n  | SET_PID\n  | FETCH_PROJECT\n  | SET_PROJECT\n  | FETCH_MILESTONES\n  | SET_MILESTONES\n  | SET_MID\n  | SET_CUSTOM_EID\n  | SET_CUSTOM_RID\n  | FETCH_CUSTOM_ATTRS\n  | SET_CUSTOM_ATTRS\n  | PATCH_CUSTOM_VALUE\n  | SET_BIZ_DAYS\n  | SET_BIZ_DAYS\n  | ADD_BIZ_DAY\n  | REMOVE_BIZ_DAY\n  | FETCH_TASKS\n  | SET_TASKS\n  | PATCH_TASK\n  | FETCH_CUSTOM_VALUE_MAP\n  | SET_CUSTOM_VALUE_MAP\n  | FETCH_TASK_STATUSES\n  | SET_TASK_STATUSES\n  | SET_ACTIVE_TASK_STATUSES\n  | FETCH_USER\n  | SET_USER\n  | RESET_USER\n  | ADD_REJECT_TASK_STATUS_ID\n  | REMOVE_REJECT_TASK_STATUS_ID\n  | OPEN_CONTROLLER\n  | CLOSE_CONTROLLER\n  | UPDATE_DATA;\n","import _ from \"lodash\";\nexport interface ICustomAttr {\n  id: number;\n  name: string;\n}\nexport interface IAuthToken {\n  auth_token: string;\n}\nexport interface IMilestone {\n  id: number;\n  name: string;\n  estimated_start: string;\n  estimated_finish: string;\n  slug: string;\n  project: number;\n  project_extra_info: IProjectExtraInfo;\n}\ninterface IProjectExtraInfo {\n  id: number;\n  name: string;\n  slug: string;\n}\ninterface IStatusExtraInfo {\n  name: string;\n  is_closed: boolean;\n}\ninterface IUserStoryExtraInfo {\n  id: number;\n  subject: string;\n  epics: any;\n  ref: number;\n}\nexport interface ITask {\n  id: number;\n  assigned_to: number | null;\n  created_date: string;\n  finished_date: string;\n  is_closed: boolean;\n  subject: string;\n  ref: number;\n  project: number;\n  project_extra_info: IProjectExtraInfo;\n  status: number;\n  status_extra_info: IStatusExtraInfo;\n  user_story: number;\n  user_story_extra_info?: IUserStoryExtraInfo;\n  version: number;\n}\nexport interface ITasksByUserStory {\n  user_story: number;\n  user_story_extra_info?: IUserStoryExtraInfo;\n  tasks: ITask[];\n  is_closed: boolean;\n}\nexport interface ITaskStatus {\n  id: number;\n  color: string;\n  name: string;\n  order: number;\n  project: number;\n  is_closed: boolean;\n  slug: string;\n}\nexport interface IAttrValue {}\nexport interface ICustomValue {\n  attributes_values: {\n    [key: number]: string;\n  };\n  version: number;\n}\nexport interface IUser {\n  id: number;\n  username: string;\n  full_name: string;\n  full_name_display: string;\n  photo: string;\n}\nexport interface IProject {\n  id: number;\n  name: string;\n  members: IUser[];\n}\nexport type ICustomValueMap = WeakMap<ITask, ICustomValue>;\nexport interface IState {\n  url: string;\n  auth_token: string;\n  auth_error: boolean;\n  username: string;\n  password: string;\n  user: IUser | null;\n  projects: IProject[];\n  pid: string; // url\n  project: IProject;\n  mid: string; // url\n  custom_eid: string; //  pid\n  custom_rid: string; // pid\n  custom_attrs: ICustomAttr[]; // pid\n  biz_days: string[]; //mid\n  milestones: IMilestone[]; // pid\n  tasks: ITask[]; //mid\n  task_statuses: ITaskStatus[];\n  active_task_statuses: ITaskStatus[];\n  custom_value_map: ICustomValueMap; // pid\n  reject_task_status_ids: string[]; // pid\n  updated_time: number;\n  isOpen: boolean;\n}\n\nexport enum StorageKey {\n  URL = \"taiga_url\",\n  PID = \"taiga_pid\",\n  MID = \"taiga_mid\",\n  CUSTOM_EID = \"taiga_custom_eid\",\n  CUSTOM_RID = \"taiga_custom_rid\",\n  BIZ_DAYS = \"taiga_biz_days\",\n  REJECT_TASK_STATUS_IDS = \"reject_task_status_ids\",\n  USERNAME = \"taiga_username\",\n  PASSWORD = \"taiga_password\"\n}\n\nexport const getFromStorage = (key: string) => localStorage.getItem(key) || \"\";\n\nexport const getFromStorageWithSubkey = (key: StorageKey, subkey: string) =>\n  subkey ? getFromStorage(`${subkey}/${key}`) : \"\";\n\nexport const setToStorage = (key: string, item: string) => {\n  localStorage.setItem(key, item);\n};\nexport const setToStorageWithSubkey = (\n  key: StorageKey,\n  subkey: string,\n  item: string\n) => (subkey ? setToStorage(`${subkey}/${key}`, item) : null);\nexport const initialStateFn = (): IState => {\n  const url = getFromStorage(StorageKey.URL);\n  const pid = getFromStorage(StorageKey.PID);\n  const mid = getFromStorage(StorageKey.MID);\n  const custom_eid = getFromStorageWithSubkey(StorageKey.CUSTOM_EID, pid);\n  const custom_rid = getFromStorageWithSubkey(StorageKey.CUSTOM_RID, pid);\n  const biz_days_str = getFromStorageWithSubkey(StorageKey.BIZ_DAYS, mid);\n  const biz_days = _.compact(biz_days_str.split(\",\")).sort();\n  const reject_task_status_ids = _.compact(\n    getFromStorageWithSubkey(StorageKey.REJECT_TASK_STATUS_IDS, pid).split(\",\")\n  );\n  const isOpen = !(url && pid && mid && custom_eid && custom_rid);\n  return {\n    url,\n    auth_token: \"\",\n    auth_error: false,\n    username: \"\",\n    password: \"\",\n    user: null,\n    projects: [],\n    pid,\n    project: {} as IProject,\n    mid,\n    custom_eid,\n    custom_rid,\n    custom_attrs: [],\n    biz_days,\n    milestones: [],\n    tasks: [],\n    task_statuses: [],\n    active_task_statuses: [],\n    custom_value_map: new WeakMap(),\n    reject_task_status_ids,\n    updated_time: 0,\n    isOpen\n  };\n};\n","import { Dispatch, useCallback } from \"react\";\n\nexport type SideEffector<S, A> = (\n  action: A,\n  dispatch: Dispatch<A>,\n  state: () => S\n) => void;\nlet ss: any;\nexport const useSideEffector = <S, A>(\n  [state, dispatch]: [S, Dispatch<A>],\n  sideEffector: SideEffector<S, A>\n): [S, Dispatch<A>] => {\n  let dispatchSE: Dispatch<A> | null = null;\n\n  const dispatchSECaller = useCallback(\n    (action: A) => {\n      dispatchSE && dispatchSE(action);\n    },\n    [dispatchSE]\n  );\n  ss = state;\n  const getState = () => ss;\n  dispatchSE = useCallback(\n    dispatchSideEffector<S, A>(\n      getState,\n      dispatch,\n      sideEffector,\n      dispatchSECaller\n    ),\n    []\n  );\n  return [state, dispatchSE];\n};\n\nconst dispatchSideEffector = <S, A>(\n  state: () => S,\n  dispatch: Dispatch<A>,\n  sideEffector: SideEffector<S, A>,\n  dispatchSECaller: Dispatch<A>\n) => (action: A) => {\n  dispatch(action);\n  sideEffector(action, dispatchSECaller, state);\n};\n","import _ from \"lodash\";\nimport axios from \"axios\";\nimport {\n  initialStateFn,\n  StorageKey,\n  IProject,\n  ICustomValueMap,\n  setToStorage,\n  setToStorageWithSubkey,\n  getFromStorageWithSubkey\n} from \"./store\";\nimport { ActionTypes, Actions } from \"./actions\";\nexport const reducer = (state = initialStateFn(), action: Actions) => {\n  switch (action.type) {\n    case ActionTypes.SET_URL: {\n      const { url } = action.payload;\n      setToStorage(StorageKey.URL, url);\n      return { ...state, url };\n    }\n    case ActionTypes.SET_PROJECTS: {\n      const { projects } = action.payload;\n      return {\n        ...state,\n        projects\n      };\n    }\n    case ActionTypes.SET_PID: {\n      const { pid } = action.payload;\n      setToStorage(StorageKey.PID, pid);\n      return {\n        ...state,\n        pid,\n        project: {} as IProject,\n        mid: \"\",\n        custom_eid: getFromStorageWithSubkey(StorageKey.CUSTOM_EID, pid),\n        custom_rid: getFromStorageWithSubkey(StorageKey.CUSTOM_RID, pid),\n        custom_attrs: [],\n        milestones: [],\n        custom_value_map: new WeakMap() as ICustomValueMap\n      };\n    }\n    case ActionTypes.SET_PROJECT: {\n      const { project } = action.payload;\n      return {\n        ...state,\n        project\n      };\n    }\n    case ActionTypes.SET_MID: {\n      const { mid } = action.payload;\n      setToStorage(StorageKey.MID, mid);\n      return {\n        ...state,\n        mid,\n        tasks: [],\n        biz_days: _.compact(\n          getFromStorageWithSubkey(StorageKey.BIZ_DAYS, mid).split(\",\")\n        ).sort()\n      };\n    }\n    case ActionTypes.SET_MILESTONES: {\n      const { milestones } = action.payload;\n      return { ...state, milestones };\n    }\n    case ActionTypes.SET_CUSTOM_EID: {\n      const { custom_eid } = action.payload;\n      setToStorageWithSubkey(StorageKey.CUSTOM_EID, state.pid, custom_eid);\n      return { ...state, custom_eid };\n    }\n    case ActionTypes.SET_CUSTOM_ATTRS: {\n      const { custom_attrs } = action.payload;\n      return { ...state, custom_attrs };\n    }\n    case ActionTypes.SET_CUSTOM_RID: {\n      const { custom_rid } = action.payload;\n      setToStorageWithSubkey(StorageKey.CUSTOM_RID, state.pid, custom_rid);\n      return { ...state, custom_rid };\n    }\n    case ActionTypes.SET_BIZ_DAYS: {\n      const { biz_days } = action.payload;\n      setToStorageWithSubkey(\n        StorageKey.BIZ_DAYS,\n        state.mid,\n        biz_days.join(\",\")\n      );\n      return { ...state, biz_days };\n    }\n    case ActionTypes.ADD_BIZ_DAY: {\n      const { biz_day } = action.payload;\n      const biz_days = _.chain([...state.biz_days, biz_day])\n        .uniq()\n        .sort()\n        .value();\n      setToStorageWithSubkey(\n        StorageKey.BIZ_DAYS,\n        state.mid,\n        biz_days.join(\",\")\n      );\n      return { ...state, biz_days };\n    }\n    case ActionTypes.REMOVE_BIZ_DAY: {\n      const { biz_day } = action.payload;\n      const biz_days = _.reject([...state.biz_days], item => item === biz_day);\n      setToStorageWithSubkey(\n        StorageKey.BIZ_DAYS,\n        state.mid,\n        biz_days.join(\",\")\n      );\n      return { ...state, biz_days };\n    }\n    case ActionTypes.SET_TASKS: {\n      const { tasks } = action.payload;\n      return { ...state, tasks };\n    }\n    case ActionTypes.SET_TASK_STATUSES: {\n      const { task_statuses } = action.payload;\n      return { ...state, task_statuses };\n    }\n    case ActionTypes.SET_ACTIVE_TASK_STATUSES: {\n      const { active_task_statuses } = action.payload;\n      return { ...state, active_task_statuses };\n    }\n    case ActionTypes.SET_CUSTOM_VALUE_MAP: {\n      const { custom_value_map } = action.payload;\n      return { ...state, custom_value_map };\n    }\n    case ActionTypes.SET_USER: {\n      const { user } = action.payload;\n      return { ...state, user };\n    }\n    case ActionTypes.RESET_USER: {\n      return { ...state, user: null };\n    }\n    case ActionTypes.ADD_REJECT_TASK_STATUS_ID: {\n      const { reject_task_status_id } = action.payload;\n      const reject_task_status_ids = _.chain([\n        ...state.reject_task_status_ids,\n        reject_task_status_id\n      ])\n        .compact()\n        .uniq()\n        .value();\n      setToStorageWithSubkey(\n        StorageKey.REJECT_TASK_STATUS_IDS,\n        state.pid,\n        reject_task_status_ids.join(\",\")\n      );\n      return { ...state, reject_task_status_ids };\n    }\n    case ActionTypes.REMOVE_REJECT_TASK_STATUS_ID: {\n      const { reject_task_status_id } = action.payload;\n      const reject_task_status_ids = _.reject(\n        [...state.reject_task_status_ids],\n        item => item === reject_task_status_id\n      );\n      setToStorageWithSubkey(\n        StorageKey.REJECT_TASK_STATUS_IDS,\n        state.pid,\n        reject_task_status_ids.join(\",\")\n      );\n      return { ...state, reject_task_status_ids };\n    }\n    case ActionTypes.OPEN_CONTROLLER: {\n      return { ...state, isOpen: true };\n    }\n    case ActionTypes.CLOSE_CONTROLLER: {\n      return { ...state, isOpen: false };\n    }\n    case ActionTypes.UPDATE_DATA: {\n      return { ...state, updated_time: Date.now() };\n    }\n    case ActionTypes.SIGN_IN: {\n      const { username, password } = action.payload;\n      return { ...state, username, password, auth_error: false };\n    }\n    case ActionTypes.SET_AUTH_TOKEN: {\n      const { auth_token } = action.payload;\n      axios.defaults.headers.common[\"Authorization\"] = `Bearer ${auth_token}`;\n      return { ...state, auth_token };\n    }\n    case ActionTypes.SET_AUTH_ERROR: {\n      return { ...state, auth_error: true };\n    }\n    case ActionTypes.SIGN_OUT: {\n      if (axios.defaults.headers.common[\"Authorization\"]) {\n        delete axios.defaults.headers.common[\"Authorization\"];\n      }\n      return { ...state, auth_token: \"\", username: \"\", password: \"\" };\n    }\n    default: {\n      return state;\n    }\n  }\n};\n","import { IProject } from \"../store\";\nimport { ISideEffector, fetchData, ActionTypes } from \".\";\nexport const fetchProjecs: ISideEffector = async (action, dispatch, state) => {\n  try {\n    const { url } = state();\n    if (url) {\n      const { data: projects } = await fetchData<IProject[]>(url, \"projects\");\n      dispatch({ type: ActionTypes.SET_PROJECTS, payload: { projects } });\n    }\n  } catch (e) {\n    console.log(\"err:fetchProjects\", e);\n  }\n};\n","import { IProject } from \"../store\";\nimport { ISideEffector, fetchData, ActionTypes } from \".\";\nexport const fetchProject: ISideEffector = async (action, dispatch, state) => {\n  if (action.type === ActionTypes.FETCH_PROJECT) {\n    try {\n      const { url } = state();\n      const { pid } = action.payload;\n      if (url && pid) {\n        const { data: project } = await fetchData<IProject>(\n          url,\n          `projects/${pid}`\n        );\n        dispatch({\n          type: ActionTypes.SET_PROJECT,\n          payload: { project }\n        });\n      }\n    } catch (e) {\n      console.log(\"err:fetchProject\", e);\n    }\n  }\n};\n","import { IMilestone } from \"../store\";\nimport { ISideEffector, fetchData, ActionTypes } from \".\";\nexport const fetchMilestones: ISideEffector = async (\n  action,\n  dispatch,\n  state\n) => {\n  if (action.type === ActionTypes.FETCH_MILESTONES) {\n    try {\n      const { url } = state();\n      const { project } = action.payload;\n      if (url && project) {\n        const { data: milestones } = await fetchData<IMilestone[]>(\n          url,\n          \"milestones\",\n          { params: { project } }\n        );\n        dispatch({ type: ActionTypes.SET_MILESTONES, payload: { milestones } });\n      }\n    } catch (e) {\n      console.log(\"err:fetchMilestones\", e);\n    }\n  }\n};\n","import { ITask } from \"../store\";\nimport { ISideEffector, fetchData, ActionTypes } from \".\";\nimport _ from \"lodash\";\nexport const fetchTasks: ISideEffector = async (action, dispatch, state) => {\n  if (action.type === ActionTypes.FETCH_TASKS) {\n    try {\n      const { url, reject_task_status_ids } = state();\n      const { milestone } = action.payload;\n      if (url && milestone) {\n        const { data } = await fetchData<ITask[]>(url, \"tasks\", {\n          headers: { \"x-disable-pagination\": true },\n          params: { milestone }\n        });\n        const tasks = data.filter(\n          item => !_.includes(reject_task_status_ids, String(item.status))\n        );\n        dispatch({ type: ActionTypes.SET_TASKS, payload: { tasks } });\n      }\n    } catch (e) {\n      console.log(\"err:fetchTasks\", e);\n    }\n  }\n};\n","import { ITaskStatus } from \"../store\";\nimport { ISideEffector, fetchData, ActionTypes } from \".\";\nexport const fetchTaskStatuses: ISideEffector = async (\n  action,\n  dispatch,\n  state\n) => {\n  if (action.type === ActionTypes.FETCH_TASK_STATUSES) {\n    try {\n      const { url } = state();\n      const { project } = action.payload;\n      if (url && project) {\n        const { data: task_statuses } = await fetchData<ITaskStatus[]>(\n          url,\n          \"task-statuses\",\n          { params: { project } }\n        );\n        dispatch({\n          type: ActionTypes.SET_TASK_STATUSES,\n          payload: { task_statuses }\n        });\n      }\n    } catch (e) {\n      console.log(\"err:fetchTaskStatuses\", e);\n    }\n  }\n};\n","import { ICustomAttr } from \"../store\";\nimport { ISideEffector, fetchData, ActionTypes } from \".\";\nexport const fetchCustomAttrs: ISideEffector = async (\n  action,\n  dispatch,\n  state\n) => {\n  if (action.type === ActionTypes.FETCH_CUSTOM_ATTRS) {\n    try {\n      const { url } = state();\n      const { project } = action.payload;\n      if (url && project) {\n        const { data: custom_attrs } = await fetchData<ICustomAttr[]>(\n          url,\n          \"task-custom-attributes\",\n          { params: { project } }\n        );\n        dispatch({\n          type: ActionTypes.SET_CUSTOM_ATTRS,\n          payload: { custom_attrs }\n        });\n      }\n    } catch (e) {\n      console.log(\"err:fetchCustomAttrs\", e);\n    }\n  }\n};\n","import { ITask, ICustomValue } from \"../store\";\nimport { ISideEffector, fetchData, ActionTypes } from \".\";\nexport const fetchCustomValueMap: ISideEffector = async (\n  action,\n  dispatch,\n  state\n) => {\n  if (action.type === ActionTypes.FETCH_CUSTOM_VALUE_MAP) {\n    try {\n      const { url, custom_eid, custom_rid } = state();\n      const { tasks } = action.payload;\n      if (url && tasks.length && custom_eid && custom_rid) {\n        const custom_value_map = new WeakMap(\n          await Promise.all(\n            tasks.map(async item => {\n              const { data: custom_attr_val } = await fetchData<ICustomValue>(\n                url,\n                `tasks/custom-attributes-values/${item.id}`\n              );\n              return [item, custom_attr_val] as [ITask, ICustomValue];\n            })\n          )\n        );\n        dispatch({\n          type: ActionTypes.SET_CUSTOM_VALUE_MAP,\n          payload: { custom_value_map }\n        });\n      }\n    } catch (e) {\n      console.log(\"err:fetchCustomValueMap\", e);\n    }\n  }\n};\n","import { IUser } from \"../store\";\nimport { ISideEffector, fetchData, ActionTypes } from \".\";\nexport const fetchUser: ISideEffector = async (action, dispatch, state) => {\n  if (action.type === ActionTypes.FETCH_USER) {\n    try {\n      const { url } = state();\n      const { uid } = action.payload;\n      if (url && uid) {\n        const { data: user } = await fetchData<IUser>(url, `users/${uid}`);\n        dispatch({\n          type: ActionTypes.SET_USER,\n          payload: { user }\n        });\n      }\n    } catch (e) {\n      console.log(\"err:fetchUser\", e);\n    }\n  }\n};\n","import { ISideEffector, patchData, ActionTypes } from \".\";\nexport const patchCustomValue: ISideEffector = async (\n  action,\n  dispatch,\n  state\n) => {\n  if (action.type === ActionTypes.PATCH_CUSTOM_VALUE) {\n    try {\n      const { url, custom_value_map, tasks } = state();\n      const { id, key, value, version } = action.payload;\n      const task = tasks.find(task => task.id === id);\n      if (url && id && key && value && task && custom_value_map.has(task)) {\n        const custom_value = custom_value_map.get(task);\n        if (custom_value) {\n          const { attributes_values } = custom_value;\n          await patchData(url, `tasks/custom-attributes-values/${id}`, {\n            attributes_values: {\n              ...attributes_values,\n              [key]: String(value)\n            },\n            version\n          });\n          dispatch({ type: ActionTypes.UPDATE_DATA });\n        }\n      }\n    } catch (e) {\n      console.log(\"err:patchCustomValue\", e);\n    }\n  }\n};\n","import { ActionTypes, ISideEffector, patchData } from \".\";\nexport const patchTask: ISideEffector = async (action, dispatch, state) => {\n  if (action.type === ActionTypes.PATCH_TASK) {\n    try {\n      const { url, tasks } = state();\n      const { id, key, value } = action.payload;\n      const task = tasks.find(task => task.id === id);\n      if (url && id && key && value && task) {\n        await patchData(url, `tasks/${id}`, {\n          [key]: value,\n          version: task.version\n        });\n        dispatch({ type: ActionTypes.UPDATE_DATA });\n      }\n    } catch (e) {\n      console.log(\"err:patchTask\", e);\n    }\n  }\n};\n","import React from \"react\";\nimport { toast } from \"react-toastify\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faInfoCircle,\n  faCheck,\n  faCheckCircle,\n  faExclamationTriangle\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { IconProp } from \"@fortawesome/fontawesome-svg-core\";\ninterface MessageWithIconProps {\n  icon: IconProp;\n  message: string;\n}\nconst MessageWithIcon: React.FC<MessageWithIconProps> = ({ icon, message }) => {\n  return (\n    <div className=\"d-flex\">\n      <h2 className=\"mr-2\">\n        <FontAwesomeIcon icon={icon} />\n      </h2>\n      <div>{message}</div>\n    </div>\n  );\n};\nexport const toastr = {\n  info: (message: string) => {\n    toast.info(<MessageWithIcon icon={faInfoCircle} message={message} />);\n  },\n  success: (message: string) => {\n    toast.success(<MessageWithIcon icon={faCheck} message={message} />);\n  },\n  warn: (message: string) => {\n    toast.warn(\n      <MessageWithIcon icon={faExclamationTriangle} message={message} />\n    );\n  },\n  error: (message: string) => {\n    toast.error(<MessageWithIcon icon={faCheckCircle} message={message} />);\n  }\n};\n","import { IAuthToken, StorageKey, setToStorage } from \"../store\";\nimport { ISideEffector, postData, ActionTypes, errToastr } from \".\";\nimport { toastr } from \"../util/toastr\";\nexport const signIn: ISideEffector = async (action, dispatch, state) => {\n  if (action.type === ActionTypes.SIGN_IN) {\n    try {\n      const { url } = state();\n      const { username, password } = action.payload;\n      if (url && username && password) {\n        const {\n          data: { auth_token }\n        } = await postData<IAuthToken>(url, \"auth\", {\n          username,\n          password,\n          type: \"normal\"\n        });\n        dispatch({ type: ActionTypes.SET_AUTH_TOKEN, payload: { auth_token } });\n        setToStorage(StorageKey.USERNAME, username);\n        setToStorage(StorageKey.PASSWORD, password);\n        toastr.success(`${username} signed in.`);\n      }\n    } catch (e) {\n      dispatch({ type: ActionTypes.SET_AUTH_ERROR });\n      dispatch({ type: ActionTypes.SIGN_OUT });\n      errToastr(e);\n    }\n  }\n};\n","import { Dispatch } from \"react\";\nimport { Actions, ActionTypes } from \"../actions\";\nimport { IState } from \"../store\";\nimport { baseUrl } from \"../Provider\";\nimport { fetchProjecs } from \"./fetchProjects\";\nimport { fetchProject } from \"./fetchProject\";\nimport { fetchMilestones } from \"./fetchMilestones\";\nimport { fetchTasks } from \"./fetchTasks\";\nimport { fetchTaskStatuses } from \"./fetchTaskStatuses\";\nimport { fetchCustomAttrs } from \"./fetchCustomAttrs\";\nimport { fetchCustomValueMap } from \"./fetchCustomValueMap\";\nimport { fetchUser } from \"./fetchUser\";\nimport { patchCustomValue } from \"./patchCustomValue\";\nimport { patchTask } from \"./patchTask\";\nimport { signIn } from \"./signIn\";\nimport { signOut } from \"./signOut\";\nimport axios, { AxiosRequestConfig, AxiosError } from \"axios\";\nimport { toastr } from \"../util/toastr\";\nexport { ActionTypes };\nexport type ISideEffector = (\n  action: Actions,\n  dispatch: Dispatch<Actions>,\n  state: () => IState\n) => void;\nexport const fetchData = <T>(\n  url: string,\n  path: string,\n  config?: AxiosRequestConfig\n) => axios.get<T>(`${baseUrl(url)}/${path}`, config);\nexport const postData = <T>(\n  url: string,\n  path: string,\n  data: object,\n  config?: AxiosRequestConfig\n) => axios.post<T>(`${baseUrl(url)}/${path}`, data, config);\nexport const patchData = (\n  url: string,\n  path: string,\n  data: object,\n  config?: AxiosRequestConfig\n) => axios.patch(`${baseUrl(url)}/${path}`, data, config);\nexport const errToastr = (err: AxiosError) => {\n  const message = err.response ? err.response.data._error_message : \"error\";\n  toastr.error(message);\n};\nexport const rootSideEffector = (\n  action: Actions,\n  dispatch: Dispatch<Actions>,\n  state: () => IState\n) => {\n  switch (action.type) {\n    case ActionTypes.FETCH_PROJECTS: {\n      fetchProjecs(action, dispatch, state);\n      return;\n    }\n    case ActionTypes.FETCH_PROJECT: {\n      fetchProject(action, dispatch, state);\n      return;\n    }\n    case ActionTypes.FETCH_MILESTONES: {\n      fetchMilestones(action, dispatch, state);\n      return;\n    }\n    case ActionTypes.FETCH_TASKS: {\n      fetchTasks(action, dispatch, state);\n      return;\n    }\n    case ActionTypes.FETCH_TASK_STATUSES: {\n      fetchTaskStatuses(action, dispatch, state);\n      return;\n    }\n    case ActionTypes.FETCH_CUSTOM_ATTRS: {\n      fetchCustomAttrs(action, dispatch, state);\n      return;\n    }\n    case ActionTypes.FETCH_CUSTOM_VALUE_MAP: {\n      fetchCustomValueMap(action, dispatch, state);\n      return;\n    }\n    case ActionTypes.FETCH_USER: {\n      fetchUser(action, dispatch, state);\n      return;\n    }\n    case ActionTypes.PATCH_CUSTOM_VALUE: {\n      patchCustomValue(action, dispatch, state);\n      return;\n    }\n    case ActionTypes.SIGN_IN: {\n      signIn(action, dispatch, state);\n      return;\n    }\n    case ActionTypes.PATCH_TASK: {\n      patchTask(action, dispatch, state);\n      return;\n    }\n    case ActionTypes.SIGN_OUT: {\n      signOut(action, dispatch, state);\n      return;\n    }\n\n    default: {\n    }\n  }\n};\n","import { StorageKey } from \"../store\";\nimport { ISideEffector, ActionTypes } from \".\";\nexport const signOut: ISideEffector = (action, dispatch, state) => {\n  if (action.type === ActionTypes.SIGN_OUT) {\n    localStorage.removeItem(StorageKey.USERNAME);\n    localStorage.removeItem(StorageKey.PASSWORD);\n  }\n};\n","import React, { createContext, useReducer, useEffect } from \"react\";\nimport _ from \"lodash\";\nimport { ActionTypes } from \"./actions\";\nimport { initialStateFn } from \"./store\";\nimport { reducer } from \"./reducer\";\nimport { Actions } from \"./actions\";\nimport { useSideEffector } from \"./util/useSideEffector\";\nimport { rootSideEffector } from \"./sideEffectors\";\nimport { init } from \"./init\";\nexport const baseUrl = (url: string) => `${url.replace(/[¥/]$/, \"\")}/api/v1`;\n\nconst initialState = initialStateFn();\nexport const RootContext = createContext({\n  state: initialState,\n  dispatch: (action: Actions) => {}\n});\nexport const Provider = ({ children }: { children: React.ReactNode }) => {\n  const [state, dispatch] = useSideEffector(\n    useReducer(reducer, initialState),\n    rootSideEffector\n  );\n  const value = {\n    state,\n    dispatch\n  };\n\n  useEffect(() => {\n    if (state.url) {\n      dispatch({ type: ActionTypes.FETCH_PROJECTS });\n    }\n  }, [dispatch, state.url]);\n  useEffect(() => {\n    if (state.url && state.pid) {\n      dispatch({\n        type: ActionTypes.FETCH_MILESTONES,\n        payload: { project: state.pid }\n      });\n      dispatch({\n        type: ActionTypes.FETCH_CUSTOM_ATTRS,\n        payload: { project: state.pid }\n      });\n      dispatch({\n        type: ActionTypes.FETCH_TASK_STATUSES,\n        payload: { project: state.pid }\n      });\n      dispatch({\n        type: ActionTypes.FETCH_PROJECT,\n        payload: { pid: state.pid }\n      });\n    }\n  }, [state.url, state.pid, dispatch]);\n  useEffect(() => {\n    if (state.url && state.mid) {\n      dispatch({\n        type: ActionTypes.FETCH_TASKS,\n        payload: {\n          milestone: state.mid,\n          reject_task_status_ids: state.reject_task_status_ids\n        }\n      });\n    }\n  }, [\n    state.url,\n    state.mid,\n    state.updated_time,\n    state.reject_task_status_ids,\n    dispatch\n  ]);\n  useEffect(() => {\n    dispatch({\n      type: ActionTypes.FETCH_CUSTOM_VALUE_MAP,\n      payload: {\n        tasks: state.tasks\n      }\n    });\n  }, [dispatch, state.tasks, state.custom_eid, state.custom_rid]);\n  useEffect(() => {\n    const active_task_statuses = _.chain(state.task_statuses)\n      .reject(item => _.includes(state.reject_task_status_ids, String(item.id)))\n      .orderBy(\"order\")\n      .value();\n    dispatch({\n      type: ActionTypes.SET_ACTIVE_TASK_STATUSES,\n      payload: { active_task_statuses }\n    });\n  }, [state.task_statuses, state.reject_task_status_ids, dispatch]);\n  useEffect(() => {\n    init(dispatch);\n  }, [dispatch]);\n  return <RootContext.Provider value={value}>{children}</RootContext.Provider>;\n};\n","import { Dispatch } from \"react\";\nimport { Actions, ActionTypes } from \"./actions\";\nimport { getFromStorage, StorageKey } from \"./store\";\nexport const init = (dispatch: Dispatch<Actions>) => {\n  const username = getFromStorage(StorageKey.USERNAME);\n  const password = getFromStorage(StorageKey.PASSWORD);\n  dispatch({ type: ActionTypes.SIGN_IN, payload: { username, password } });\n};\n","import React from \"react\";\nexport const preventDefault = (e: React.FormEvent) => {\n  e.preventDefault();\n};\nexport const stopPropagation = (e: React.FormEvent) => {\n  e.stopPropagation();\n};\n","import React, { useCallback, useContext } from \"react\";\nimport { Input, InputGroup, InputGroupAddon } from \"reactstrap\";\nimport { RootContext } from \"../Provider\";\nimport { ActionTypes } from \"../actions\";\nexport const ProjectSelector = () => {\n  const {\n    state: { pid, projects },\n    dispatch\n  } = useContext(RootContext);\n  const handleChange = useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>) => {\n      const id = e.target.value;\n      if (id) {\n        dispatch({ type: ActionTypes.SET_PID, payload: { pid: id } });\n      }\n    },\n    [dispatch]\n  );\n  return (\n    <InputGroup className=\"col\">\n      <InputGroupAddon addonType=\"prepend\">Project</InputGroupAddon>\n      <Input value={pid} type=\"select\" onChange={handleChange}>\n        <option value=\"\"> --- </option>\n        {projects.map(item => (\n          <option key={item.id} value={item.id}>\n            {item.name}\n          </option>\n        ))}\n      </Input>\n    </InputGroup>\n  );\n};\n","import React, { useCallback, useContext } from \"react\";\nimport { Input, InputGroup, InputGroupAddon } from \"reactstrap\";\nimport { RootContext } from \"../Provider\";\nimport { ActionTypes } from \"../actions\";\n\nexport const MilestoneSelector = () => {\n  const {\n    state: { milestones, mid },\n    dispatch\n  } = useContext(RootContext);\n  const handleChange = useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>) => {\n      const id = e.target.value;\n      if (id) {\n        dispatch({ type: ActionTypes.SET_MID, payload: { mid: id } });\n      }\n    },\n    [dispatch]\n  );\n\n  return (\n    <InputGroup className=\"col\">\n      <InputGroupAddon addonType=\"prepend\">Sprint</InputGroupAddon>\n      <Input type=\"select\" value={mid} onChange={handleChange}>\n        <option value=\"\"> --- </option>\n        {milestones.map(item => (\n          <option key={item.id} value={item.id}>\n            {item.name}\n          </option>\n        ))}\n      </Input>\n    </InputGroup>\n  );\n};\n","import React, { useCallback, useContext } from \"react\";\nimport { Input, InputGroup, InputGroupAddon } from \"reactstrap\";\nimport { RootContext } from \"../Provider\";\nimport { ActionTypes } from \"../actions\";\n\nexport const CustomValuesSelector = () => {\n  const {\n    state: { custom_attrs, custom_eid, custom_rid },\n    dispatch\n  } = useContext(RootContext);\n  const handleChange = useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>) => {\n      const id = e.target.value;\n      if (id) {\n        switch (e.target.name) {\n          case \"eid\": {\n            dispatch({\n              type: ActionTypes.SET_CUSTOM_EID,\n              payload: { custom_eid: id }\n            });\n            break;\n          }\n          case \"rid\": {\n            dispatch({\n              type: ActionTypes.SET_CUSTOM_RID,\n              payload: { custom_rid: id }\n            });\n            break;\n          }\n          default:\n            console.log(\"other id\");\n        }\n      }\n    },\n    [dispatch]\n  );\n  return (\n    <div className=\"row\">\n      <InputGroup className=\"col\">\n        <InputGroupAddon addonType=\"prepend\">Estimate</InputGroupAddon>\n        <Input\n          value={custom_eid}\n          name=\"eid\"\n          type=\"select\"\n          onChange={handleChange}\n        >\n          <option value=\"\"> --- </option>\n          {custom_attrs.map(item => (\n            <option key={item.id} value={item.id}>\n              {item.name}\n            </option>\n          ))}\n        </Input>\n      </InputGroup>\n      <InputGroup className=\"col\">\n        <InputGroupAddon addonType=\"prepend\">Result</InputGroupAddon>\n        <Input\n          value={custom_rid}\n          name=\"rid\"\n          type=\"select\"\n          onChange={handleChange}\n        >\n          <option> --- </option>\n          {custom_attrs.map(item => (\n            <option key={item.id} value={item.id}>\n              {item.name}\n            </option>\n          ))}\n        </Input>\n      </InputGroup>\n    </div>\n  );\n};\n","import React, { useEffect, useState, useContext, useCallback } from \"react\";\nimport classNames from \"classnames\";\nimport {\n  UncontrolledTooltip,\n  Table,\n  Card,\n  CardHeader,\n  Input,\n  Label,\n  FormGroup\n} from \"reactstrap\";\nimport { IMilestone } from \"../store\";\nimport { RootContext } from \"../Provider\";\nimport moment, { Moment } from \"moment\";\nimport biz from \"moment-business\";\nimport _ from \"lodash\";\nimport { ActionTypes } from \"../actions\";\nexport const isToday = (date: string) =>\n  moment()\n    .local()\n    .format(\"YYYY-MM-DD\") ===\n  moment(date)\n    .local()\n    .format(\"YYYY-MM-DD\");\n\nexport const dayNameFromIdx = (date: string, idx: number) => {\n  if (idx === -1) {\n    return \"\";\n  }\n  if (idx === 0) {\n    return \"Planning\";\n  }\n  return `Day ${idx}`;\n};\n\nexport const dayName = (date: string, biz_days: string[]) => {\n  const idx = biz_days.indexOf(date);\n  return dayNameFromIdx(date, idx);\n};\nexport const getMilestone = (mid: string, items: IMilestone[]) =>\n  items.find(item => String(item.id) === mid);\nconst getDays = (item: IMilestone) => {\n  const startM = moment(item.estimated_start).local();\n  const finishM = moment(item.estimated_finish).local();\n  const daysInSprint = finishM.diff(startM, \"days\");\n  return _.times(daysInSprint).map(i => startM.clone().add(i, \"days\"));\n};\nconst getDefaultBizDays = (items: Moment[]) =>\n  items\n    .filter(item => biz.isWeekDay(item))\n    .map(item => item.format(\"YYYY-MM-DD\"));\n\nconst weekClassName = (day: number) => ({\n  \"text-danger\": day === 0,\n  \"text-info\": day === 6\n});\n\nconst DayItem = ({\n  item,\n  biz_days,\n  idx\n}: {\n  item: Moment | null;\n  biz_days: string[];\n  idx: number;\n}) => {\n  const { dispatch } = useContext(RootContext);\n  const handleChange = useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>) => {\n      const biz_day = e.target.value;\n      if (e.target.checked) {\n        dispatch({ type: ActionTypes.ADD_BIZ_DAY, payload: { biz_day } });\n      } else {\n        dispatch({ type: ActionTypes.REMOVE_BIZ_DAY, payload: { biz_day } });\n      }\n    },\n    [dispatch]\n  );\n  if (!item) {\n    return (\n      <td>\n        <br />\n      </td>\n    );\n  }\n  const value = item.format(\"YYYY-MM-DD\");\n  const isPlanning = value === biz_days[0];\n  const eleId = `biz-day-${value}`;\n  return (\n    <>\n      <td\n        className={classNames(weekClassName(idx), { \"table-info\": isPlanning })}\n        id={eleId}\n      >\n        {biz.isWeekDay(item) ? (\n          <FormGroup check inline>\n            <Label check>\n              <Input\n                onChange={handleChange}\n                disabled={biz.isWeekendDay(item)}\n                value={value}\n                type=\"checkbox\"\n                checked={_.includes(biz_days, value)}\n                className=\"form-check-input\"\n              />\n              {value}\n            </Label>\n          </FormGroup>\n        ) : (\n          <span>{value}</span>\n        )}\n      </td>\n      {_.includes(biz_days, value) ? (\n        <UncontrolledTooltip target={eleId}>\n          {dayName(value, biz_days)}\n        </UncontrolledTooltip>\n      ) : null}\n    </>\n  );\n};\n\nexport const DaysSelector = () => {\n  const {\n    state: { mid, milestones, biz_days },\n    dispatch\n  } = useContext(RootContext);\n  const [items, setItems] = useState<Moment[]>([]);\n  useEffect(() => {\n    const milestone = getMilestone(mid, milestones);\n    if (milestone) {\n      const items = getDays(milestone);\n      setItems(items);\n      if (biz_days.length <= 1) {\n        dispatch({\n          type: ActionTypes.SET_BIZ_DAYS,\n          payload: { biz_days: getDefaultBizDays(items) }\n        });\n      }\n    }\n  }, [mid, milestones, biz_days, dispatch]);\n  if (items.length === 0) {\n    return null;\n  } else {\n    const weekdays = _.chunk(\n      [..._.times(items[0].day(), () => null), ...items],\n      7\n    );\n    return (\n      <Card>\n        <CardHeader>Business Days</CardHeader>\n        <Table bordered>\n          <thead>\n            <tr>\n              {moment.weekdays().map((item, idx) => (\n                <th\n                  key={idx}\n                  className={classNames(\"text-center\", weekClassName(idx))}\n                >\n                  {item}\n                </th>\n              ))}\n            </tr>\n          </thead>\n          <tbody>\n            {weekdays.map((days, i) => (\n              <tr key={i}>\n                {days.map((item, idx) => (\n                  <DayItem\n                    idx={idx}\n                    key={idx}\n                    item={item}\n                    biz_days={biz_days}\n                  />\n                ))}\n              </tr>\n            ))}\n          </tbody>\n        </Table>\n      </Card>\n    );\n  }\n};\n","import React, { useCallback, useContext } from \"react\";\nimport _ from \"lodash\";\nimport { RootContext } from \"../Provider\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  Input,\n  FormGroup,\n  Label\n} from \"reactstrap\";\nimport { ITaskStatus } from \"../store\";\nimport { ActionTypes } from \"../actions\";\nconst StatusItem = ({ item }: { item: ITaskStatus }) => {\n  const {\n    state: { reject_task_status_ids },\n    dispatch\n  } = useContext(RootContext);\n  const handleChange = useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>) => {\n      const reject_task_status_id = e.target.value;\n      if (e.target.checked) {\n        dispatch({\n          type: ActionTypes.REMOVE_REJECT_TASK_STATUS_ID,\n          payload: { reject_task_status_id }\n        });\n      } else {\n        dispatch({\n          type: ActionTypes.ADD_REJECT_TASK_STATUS_ID,\n          payload: { reject_task_status_id }\n        });\n      }\n    },\n    [dispatch]\n  );\n  return (\n    <FormGroup check inline>\n      <Label check>\n        <Input\n          onChange={handleChange}\n          type=\"checkbox\"\n          value={item.id}\n          defaultChecked={!_.includes(reject_task_status_ids, String(item.id))}\n        />\n        {item.name}\n      </Label>\n    </FormGroup>\n  );\n};\nexport const TaskStatusSelector = () => {\n  const {\n    state: { task_statuses }\n  } = useContext(RootContext);\n  if (task_statuses.length === 0) {\n    return null;\n  }\n  return (\n    <Card>\n      <CardHeader>Task status</CardHeader>\n      <CardBody>\n        {task_statuses.map(item => (\n          <StatusItem key={item.id} item={item} />\n        ))}\n      </CardBody>\n    </Card>\n  );\n};\n","import React, { useContext, useState, useCallback } from \"react\";\nimport _ from \"lodash\";\nimport classNames from \"classnames\";\nimport { RootContext } from \"../Provider\";\nimport {\n  Card,\n  CardHeader,\n  Collapse,\n  Form,\n  Input,\n  InputGroup,\n  InputGroupAddon,\n  Button,\n  Badge\n} from \"reactstrap\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faChevronCircleRight,\n  faExternalLinkAlt\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { stopPropagation } from \"../util/handler\";\nimport { ProjectSelector } from \"./ProjectSelector\";\nimport { MilestoneSelector } from \"./MilestoneSelector\";\nimport { CustomValuesSelector } from \"./CustomValuesSelector\";\nimport { DaysSelector, getMilestone } from \"./DaysSelector\";\nimport { TaskStatusSelector } from \"./TaskStatusSelector\";\nimport { IMilestone } from \"../store\";\nimport styles from \"./Controller.module.css\";\nimport { ActionTypes } from \"../actions\";\nconst getSpName = (mid: string, items: IMilestone[]) =>\n  _.get(getMilestone(mid, items), \"name\", \"\");\nconst getTaskboardUrl = (url: string, mid: string, items: IMilestone[]) => {\n  const milestone = getMilestone(mid, items);\n  if (url && milestone) {\n    return `${url}/project/${milestone.project_extra_info.slug}/taskboard/${\n      milestone.slug\n    }`;\n  } else {\n    return \"\";\n  }\n};\n\nconst getRange = (biz_days: string[]) => {\n  if (biz_days.length > 1) {\n    return `[${_.head(biz_days)} - ${_.last(biz_days)}]`;\n  } else {\n    return \"\";\n  }\n};\nexport const ToggleIcon = ({ isOpen }: { isOpen: boolean }) => {\n  const rotation = isOpen ? 90 : undefined;\n  return (\n    <FontAwesomeIcon\n      className=\"text-muted mr-2\"\n      rotation={rotation}\n      icon={faChevronCircleRight}\n    />\n  );\n};\nexport const Controller = () => {\n  const {\n    state: { url: stateUrl, isOpen, mid, milestones, biz_days },\n    dispatch\n  } = useContext(RootContext);\n  const [url, setUrl] = useState(\"\");\n  const handleUrl = useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>) => {\n      setUrl(e.target.value);\n    },\n    [setUrl]\n  );\n  const handleSubmit = useCallback(\n    (e: React.FormEvent) => {\n      if (url) {\n        dispatch({ type: ActionTypes.SET_URL, payload: { url } });\n      }\n      e.preventDefault();\n    },\n    [url, dispatch]\n  );\n  const toggle = useCallback(() => {\n    if (isOpen) {\n      dispatch({ type: ActionTypes.CLOSE_CONTROLLER });\n    } else {\n      dispatch({ type: ActionTypes.OPEN_CONTROLLER });\n    }\n  }, [dispatch, isOpen]);\n  const taskboardUrl = getTaskboardUrl(stateUrl, mid, milestones);\n  return (\n    <Card>\n      <CardHeader className={classNames(styles.header)} onClick={toggle}>\n        <ToggleIcon isOpen={isOpen} />\n        <Badge color=\"primary\" pill className=\"p-1 m-1\">\n          <span>{getSpName(mid, milestones)}</span>\n        </Badge>\n        <Badge className=\"p-1 m-1\">\n          <span>{getRange(biz_days)}</span>\n        </Badge>\n        {taskboardUrl ? (\n          <a\n            target=\"_blank\"\n            onClick={stopPropagation}\n            className=\"float-right\"\n            href={taskboardUrl}\n            rel=\"noopener noreferrer\"\n          >\n            <FontAwesomeIcon className=\"mr-1\" icon={faExternalLinkAlt} />\n            Taskboard\n          </a>\n        ) : null}\n      </CardHeader>\n      <Collapse isOpen={isOpen}>\n        <Form onSubmit={handleSubmit}>\n          <InputGroup>\n            <InputGroupAddon addonType=\"prepend\">URL</InputGroupAddon>\n            <Input\n              defaultValue={stateUrl}\n              onChange={handleUrl}\n              placeholder=\"http://hostname:port\"\n            />\n            <InputGroupAddon addonType=\"append\">\n              <Button>Set</Button>\n            </InputGroupAddon>\n          </InputGroup>\n        </Form>\n        <div className=\"row\">\n          <ProjectSelector />\n          <MilestoneSelector />\n        </div>\n        <CustomValuesSelector />\n        <DaysSelector />\n        <TaskStatusSelector />\n      </Collapse>\n    </Card>\n  );\n};\n","import React, { useContext, useCallback } from \"react\";\nimport { Button } from \"reactstrap\";\nimport { faSyncAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { RootContext } from \"../Provider\";\nimport { ActionTypes } from \"../actions\";\nexport const UpdateButton: React.FC = () => {\n  const { dispatch } = useContext(RootContext);\n  const updateData = useCallback(() => {\n    dispatch({ type: ActionTypes.UPDATE_DATA });\n  }, [dispatch]);\n  return (\n    <Button onClick={updateData}>\n      <FontAwesomeIcon icon={faSyncAlt} />\n    </Button>\n  );\n};\n","import React, { useCallback, useContext, useEffect, useState } from \"react\";\nimport { ICustomValueMap, IUser, ITask, ICustomAttr } from \"../store\";\nimport { RootContext } from \"../Provider\";\nimport classNames from \"classnames\";\nimport {\n  Table,\n  Navbar,\n  Form,\n  Input,\n  InputGroup,\n  InputGroupAddon,\n  InputGroupText,\n  Progress\n} from \"reactstrap\";\nimport _ from \"lodash\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faMedal,\n  faTimes,\n  faEquals,\n  faGrinBeam,\n  faGrinBeamSweat,\n  faDizzy\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { UpdateButton } from \"./UpdateButton\";\nimport styles from \"./UserTasks.module.css\";\nimport moment from \"moment\";\nimport { Link } from \"react-router-dom\";\nimport { preventDefault } from \"../util/handler\";\n\nconst barStyles = [\"success\", \"warning\", \"info\", \"danger\"];\nconst getTasksByUser = (items: ITask[]) => _.groupBy(items, \"assigned_to\");\nconst getClosedTasks = (items: ITask[]) => items.filter(item => item.is_closed);\nexport const parseCustomVal = (val: string) =>\n  _.chain(val)\n    .replace(/[^0-9.+,]/g, \"\")\n    .replace(/[+]/g, \",\")\n    .split(\",\")\n    .compact()\n    .map(Number)\n    .sum()\n    .value();\n\nexport const getCustomVal = (\n  custom_value_map: ICustomValueMap,\n  task: ITask,\n  id: number\n) => {\n  if (custom_value_map.has(task)) {\n    return parseCustomVal(\n      _.get(custom_value_map.get(task), `attributes_values.${id}`, \"0\")\n    );\n  } else {\n    return 0;\n  }\n};\nexport const getSumCustomVal = (\n  custom_value_map: ICustomValueMap,\n  tasks: ITask[],\n  id: number\n) =>\n  _.chain(tasks)\n    .map(task => getCustomVal(custom_value_map, task, id))\n    .sum()\n    .value();\n\nexport const getCustomValVersion = (\n  custon_value_map: ICustomValueMap,\n  task: ITask\n) => {\n  if (custon_value_map.has(task)) {\n    return _.get(custon_value_map.get(task), \"version\");\n  } else {\n    return undefined;\n  }\n};\nexport const isCustomValValid = (e: number, r: number, is_closed: boolean) =>\n  is_closed && r === e;\nexport const isCustomValInvalid = (e: number, r: number) => r > e;\nconst getGrade = (e: number, r: number): [string | null, number] => {\n  if (_.isNumber(e) && _.isNumber(r) && e > 0) {\n    const diff = Math.abs(e - r) / e;\n    if (diff <= 0.05) {\n      return [\"gold\", 3];\n    }\n    if (diff <= 0.1) {\n      return [\"silver\", 2];\n    }\n    if (diff < 0.2) {\n      return [\"bronze\", 1];\n    }\n  }\n  return [null, 0];\n};\nconst NameAndWorkLoad = ({\n  username,\n  val,\n  total,\n  imgSrc\n}: {\n  username: string;\n  val: number;\n  total: number;\n  imgSrc: string;\n}) => {\n  if (!val) {\n    return (\n      <>\n        <td>\n          <img className={styles.avator} src={imgSrc} alt={username} />{\" \"}\n          {username}\n        </td>\n        <td />\n      </>\n    );\n  }\n  const diff = (val - total) / total;\n  let icon;\n  let tblCls;\n  if (diff < -0.1) {\n    icon = faGrinBeam;\n    tblCls = \"\";\n  } else if (diff <= 0.1) {\n    tblCls = \"table-success\";\n    icon = faGrinBeam;\n  } else if (diff <= 0.2) {\n    tblCls = \"table-warning\";\n    icon = faGrinBeamSweat;\n  } else {\n    tblCls = \"table-danger\";\n    icon = faDizzy;\n  }\n  return (\n    <>\n      <td className={tblCls}>\n        <img className={styles.avator} src={imgSrc} alt={username} /> {username}\n        <FontAwesomeIcon className=\"mx-1\" icon={icon} />\n      </td>\n      <td className={classNames(tblCls, \"text-right\")}>{val}</td>\n    </>\n  );\n};\n\nexport const Medal = ({ e, r }: { e: number; r: number }) => {\n  const [grade, num] = getGrade(e, r);\n  if (grade) {\n    return (\n      <>\n        {_.times(num).map(i => (\n          <FontAwesomeIcon key={i} className={styles[grade]} icon={faMedal} />\n        ))}\n      </>\n    );\n  } else {\n    return null;\n  }\n};\ninterface IProgressTotal {\n  status: number;\n  total: number;\n  style?: string;\n  label: string;\n}\ninterface TaskProgressProps {\n  tasks: ITask[];\n}\n\nexport const TaskProgress: React.FC<TaskProgressProps> = ({ tasks }) => {\n  const {\n    state: { active_task_statuses, custom_eid, custom_value_map }\n  } = useContext(RootContext);\n  const [items, setItems] = useState<IProgressTotal[]>([]);\n  const [allSum, setAllSum] = useState<number>(0);\n  const eid = Number(custom_eid);\n  useEffect(() => {\n    const val = _.chain(active_task_statuses)\n      .filter({ is_closed: true })\n      .reverse()\n      .map((item, idx) => ({\n        status: item.id,\n        total: getSumCustomVal(\n          custom_value_map,\n          _.filter(tasks, { status: item.id }),\n          eid\n        ),\n        style: barStyles[idx],\n        label: item.name\n      }))\n      .value();\n    setItems(val);\n  }, [active_task_statuses, eid, custom_value_map, setItems, tasks]);\n  useEffect(() => {\n    const val = getSumCustomVal(custom_value_map, tasks, eid);\n    setAllSum(val);\n  }, [eid, custom_value_map, setAllSum, tasks]);\n  return (\n    <Progress multi>\n      {items.map(item => (\n        <Progress\n          key={item.label}\n          bar\n          max={allSum}\n          value={item.total}\n          color={item.style}\n        >\n          {item.label}\n        </Progress>\n      ))}\n    </Progress>\n  );\n};\nconst UserRow = ({\n  item,\n  sums,\n  isPast,\n  total,\n  hpd,\n  tasks\n}: {\n  item: IUser;\n  sums: { [key: string]: { e: number; r: number } };\n  isPast: boolean;\n  total: number;\n  hpd: number;\n  tasks: ITask[];\n}) => {\n  const [customTotal, setTotal] = useState<number>(0);\n  const handleChange = useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>) => {\n      setTotal(Number(e.target.value) || 0);\n    },\n    [setTotal]\n  );\n  const sumItem = _.get(sums, item.id);\n  const e = _.get(sumItem, \"e\");\n  const r = _.get(sumItem, \"r\");\n  const margedTotal = customTotal || total;\n  const totalStr = String(margedTotal);\n  const imgSrc = item.photo || `http://i.pravatar.cc/80?u=${Math.random()}`;\n  return (\n    <tr key={item.id}>\n      {total > 0 ? (\n        <>\n          <NameAndWorkLoad\n            username={item.username}\n            val={e}\n            total={margedTotal}\n            imgSrc={imgSrc}\n          />\n          <td className=\"text-right\">{total}</td>\n          <td className={styles.custom_input_td}>\n            <Input\n              bsSize=\"sm\"\n              type=\"number\"\n              className=\"text-right\"\n              value={totalStr}\n              step={hpd}\n              onChange={handleChange}\n            />\n          </td>\n        </>\n      ) : (\n        <>\n          <td>\n            <img className={styles.avator} src={imgSrc} alt={item.username} />{\" \"}\n            <Link to={`/${item.id}`}>{item.username}</Link>\n          </td>\n          <td className=\"text-right\">{e}</td>\n          <td className=\"text-right\">{r}</td>\n          <td>{_.isNumber(e) && <TaskProgress tasks={tasks} />}</td>\n        </>\n      )}\n\n      {isPast ? (\n        <td>\n          <Medal e={e} r={r} />\n        </td>\n      ) : null}\n    </tr>\n  );\n};\nconst getTaskSumByUser = (\n  items: ITask[],\n  custom_value_map: ICustomValueMap,\n  custom_eid: string,\n  custom_rid: string\n) => {\n  const eid = Number(custom_eid);\n  const rid = Number(custom_rid);\n  const tasksByUser = _.mapValues(getTasksByUser(items), tasks =>\n    _.chain(tasks)\n      .map(task => ({\n        e: getCustomVal(custom_value_map, task, eid),\n        r: getCustomVal(custom_value_map, task, rid)\n      }))\n      .reduce((result, val) => ({ e: result.e + val.e, r: result.r + val.r }), {\n        e: 0,\n        r: 0\n      })\n      .value()\n  );\n  return tasksByUser;\n};\nexport const getCustomAttr = (items: ICustomAttr[], id: number) =>\n  items.find(item => item.id === id);\nexport const UserTasks = () => {\n  const {\n    state: {\n      tasks,\n      custom_value_map,\n      custom_attrs,\n      custom_eid,\n      custom_rid,\n      biz_days,\n      project: { members }\n    }\n  } = useContext(RootContext);\n  const [hpd, setHpd] = useState<number>(0);\n  const [total, setTotal] = useState<number>(0);\n  const activeLen = biz_days.length - 1;\n  const handleChange = useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>) => {\n      setHpd(Number(e.target.value) || 0);\n    },\n    [setHpd]\n  );\n  useEffect(() => {\n    setTotal(hpd * activeLen);\n  }, [hpd, activeLen, setTotal]);\n  const taskSumByUser = getTaskSumByUser(\n    tasks,\n    custom_value_map,\n    custom_eid,\n    custom_rid\n  );\n  const customAttrE = getCustomAttr(custom_attrs, Number(custom_eid));\n  const customAttrR = getCustomAttr(custom_attrs, Number(custom_rid));\n  if (!customAttrE || !customAttrR || biz_days.length <= 1) {\n    return null;\n  }\n  const unassignedSum = _.get(taskSumByUser, \"null.e\", 0);\n  const isPlanning = total > 0;\n  const isPast =\n    !isPlanning &&\n    moment().diff(\n      moment(_.last(biz_days))\n        .local()\n        .endOf(\"days\")\n    ) > 0;\n  const tasksByUser = getTasksByUser(getClosedTasks(tasks));\n  return (\n    <>\n      <Navbar color=\"light\" light>\n        <Form inline={true} className=\"mr-auto\" onSubmit={preventDefault}>\n          <InputGroup>\n            <Input\n              type=\"number\"\n              step=\"0.5\"\n              placeholder=\"hours / day\"\n              className=\"text-right\"\n              onChange={handleChange}\n            />\n            <InputGroupAddon addonType=\"append\">\n              <InputGroupText>\n                <FontAwesomeIcon className=\"mx-2\" icon={faTimes} />\n                {activeLen} [days]\n                <FontAwesomeIcon className=\"mx-2\" icon={faEquals} />\n              </InputGroupText>\n              {total > 0 ? (\n                <>\n                  <InputGroupText className=\"bg-white\">\n                    <strong>{total}</strong>\n                  </InputGroupText>\n                  <InputGroupText>hours / sprint</InputGroupText>\n                </>\n              ) : null}\n            </InputGroupAddon>\n          </InputGroup>\n        </Form>\n        <UpdateButton />\n      </Navbar>\n      <Table bordered>\n        <thead>\n          <tr>\n            <th>Name</th>\n            <th>{customAttrE.name}</th>\n            {isPlanning ? (\n              <>\n                <th>Total</th> <th>Custom</th>\n              </>\n            ) : (\n              <>\n                <th>{customAttrR.name}</th>\n                <th>Progress</th>\n              </>\n            )}\n            {isPast ? <th>Grade</th> : null}\n          </tr>\n        </thead>\n        <tbody>\n          {(members || []).map(item => (\n            <UserRow\n              key={item.id}\n              isPast={isPast}\n              item={item}\n              sums={taskSumByUser}\n              total={total}\n              hpd={hpd}\n              tasks={tasksByUser[item.id] || []}\n            />\n          ))}\n          <tr key=\"null\">\n            <td>unassigned</td>\n            <td className=\"text-right text-danger\">{unassignedSum}</td>\n            <td />\n            <td />\n            {isPast ? <td /> : null}\n          </tr>\n        </tbody>\n      </Table>\n    </>\n  );\n};\n","import React, { useContext, useState, useEffect } from \"react\";\nimport { RootContext } from \"../Provider\";\nimport { ITask } from \"../store\";\nimport { ListGroup, ListGroupItem, Card, CardHeader } from \"reactstrap\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faExternalLinkAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport { getCustomVal } from \"./UserTasks\";\nconst TaskItem = ({ url, item }: { item: ITask; url: string }) => {\n  const {\n    project_extra_info: { slug }\n  } = item;\n  const href = `${url}/project/${slug}/task/${item.ref}`;\n  return (\n    <ListGroupItem tag=\"a\" target=\"_blank\" href={href}>\n      <FontAwesomeIcon icon={faExternalLinkAlt} /> {item.subject}\n    </ListGroupItem>\n  );\n};\nexport const UnEstimatedTasks = () => {\n  const {\n    state: { url, tasks, custom_value_map, custom_eid }\n  } = useContext(RootContext);\n  const [items, setItems] = useState<ITask[]>([]);\n  useEffect(() => {\n    if (tasks.length > 0 && custom_eid) {\n      const eid = Number(custom_eid);\n      const items = tasks.filter(\n        task => getCustomVal(custom_value_map, task, eid) === 0\n      );\n      if (tasks.length > items.length) {\n        setItems(items);\n      }\n    }\n  }, [tasks, custom_value_map, custom_eid]);\n  if (items.length === 0) {\n    return null;\n  } else {\n    return (\n      <Card>\n        <CardHeader>Un estimated tasks</CardHeader>\n        <ListGroup>\n          {items.map(item => (\n            <TaskItem url={url} key={item.id} item={item} />\n          ))}\n        </ListGroup>\n      </Card>\n    );\n  }\n};\n","import React, { useContext, useState, useEffect } from \"react\";\nimport { ComposedChart, Tooltip, Line, XAxis, YAxis, Bar } from \"recharts\";\nimport { ITask, ICustomValueMap } from \"../store\";\nimport _ from \"lodash\";\nimport moment from \"moment\";\nimport { RootContext } from \"../Provider\";\nimport { dayNameFromIdx } from \"./DaysSelector\";\nimport { getCustomVal } from \"./UserTasks\";\nimport { Card, CardHeader } from \"reactstrap\";\ninterface IChartItem {\n  label: string;\n  estimate: number;\n  result?: number;\n  add?: number;\n}\n\nconst getTaskFinished = (tasks: ITask[], date: string) =>\n  tasks.filter(task =>\n    task.finished_date\n      ? moment(date)\n          .local()\n          .endOf(\"days\")\n          .diff(moment(task.finished_date)) > 0\n      : false\n  );\n\nconst getTaskCreatedToday = (tasks: ITask[], date: string) =>\n  tasks.filter(\n    task =>\n      moment(date)\n        .local()\n        .format(\"YYYY-MM-DD\") ===\n      moment(task.created_date)\n        .local()\n        .format(\"YYYY-MM-DD\")\n  );\n\nconst getTaskCreated = (tasks: ITask[], date: string) =>\n  tasks.filter(\n    task =>\n      moment(date)\n        .endOf(\"days\")\n        .diff(moment(task.created_date)) > 0\n  );\n\nconst getSumVal = (\n  custom_value_map: ICustomValueMap,\n  tasks: ITask[],\n  custom_eid: string\n) => {\n  return _.chain(tasks)\n    .map(task => getCustomVal(custom_value_map, task, Number(custom_eid)))\n    .sum()\n    .value();\n};\nexport const Chart = ({ tasks }: { tasks: ITask[] }) => {\n  const [data, setData] = useState<IChartItem[]>([]);\n  const {\n    state: { biz_days, custom_value_map, custom_eid }\n  } = useContext(RootContext);\n  useEffect(() => {\n    const days_len = biz_days.length;\n    if (days_len > 0 && tasks.length > 0 && custom_eid) {\n      const allTaskVal = getSumVal(\n        custom_value_map,\n        getTaskCreated(tasks, biz_days[0]),\n        custom_eid\n      );\n      const data = biz_days.map((day, idx) => {\n        const label = dayNameFromIdx(day, idx);\n        const estimate = allTaskVal - (allTaskVal * idx) / (days_len - 1);\n        if (\n          moment()\n            .local()\n            .endOf(\"days\")\n            .diff(moment(day)) > 0\n        ) {\n          const add =\n            idx === 0\n              ? 0\n              : getSumVal(\n                  custom_value_map,\n                  getTaskCreatedToday(tasks, day),\n                  custom_eid\n                );\n          const result =\n            getSumVal(\n              custom_value_map,\n              getTaskCreated(tasks, day),\n              custom_eid\n            ) -\n            add -\n            getSumVal(\n              custom_value_map,\n              getTaskFinished(tasks, day),\n              custom_eid\n            );\n          return { label, estimate, result, add };\n        } else {\n          return { label, estimate };\n        }\n      });\n      setData(data);\n    } else {\n      setData([]);\n    }\n  }, [tasks, biz_days, custom_eid, custom_value_map, setData]);\n  if (data.length === 0) {\n    return null;\n  } else {\n    return (\n      <Card>\n        <CardHeader>Burn down chart</CardHeader>\n        <ComposedChart data={data} width={800} height={400}>\n          <YAxis />\n          <XAxis dataKey=\"label\" />\n          <Tooltip />\n          <Bar dataKey=\"result\" fill=\"#8884d8\" stackId=\"a\" />\n          <Bar dataKey=\"add\" fill=\"#82ca9d\" stackId=\"a\" />\n          <Line dataKey=\"estimate\" />\n        </ComposedChart>\n      </Card>\n    );\n  }\n};\n","import React, { useContext } from \"react\";\nimport { RootContext } from \"../Provider\";\nimport { Chart } from \"./Chart\";\n\nexport const OverviewChart = () => {\n  const {\n    state: { tasks }\n  } = useContext(RootContext);\n  return <Chart tasks={tasks} />;\n};\n","import * as React from \"react\";\nimport { UserTasks } from \"./UserTasks\";\nimport { UnEstimatedTasks } from \"./UnEstimatedTasks\";\nimport { OverviewChart } from \"./OverviewChart\";\n\nexport const OverView = () => (\n  <>\n    <UserTasks />\n    <UnEstimatedTasks />\n    <br />\n    <OverviewChart />\n  </>\n);\n","import React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSpinner } from \"@fortawesome/free-solid-svg-icons\";\nimport { InputGroupAddon, InputGroupText } from \"reactstrap\";\nexport const InputGroupSpinner: React.FC = () => {\n  return (\n    <InputGroupAddon addonType=\"append\">\n      <InputGroupText>\n        <FontAwesomeIcon icon={faSpinner} className=\"fa-pulse\" />\n      </InputGroupText>\n    </InputGroupAddon>\n  );\n};\n","import React, { useContext, useState, useCallback, useEffect } from \"react\";\nimport {\n  Button,\n  Card,\n  CardHeader,\n  Collapse,\n  Row,\n  Col,\n  Input,\n  InputGroup,\n  InputGroupAddon,\n  UncontrolledDropdown,\n  DropdownToggle,\n  DropdownItem,\n  DropdownMenu,\n  Spinner,\n  Form\n} from \"reactstrap\";\nimport classNames from \"classnames\";\nimport { ITasksByUserStory, ITask, ITaskStatus } from \"../store\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faExternalLinkAlt,\n  faCloudUploadAlt,\n  faEdit,\n  faHandPointRight\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { InputGroupSpinner } from \"./InputGroupSpinner\";\nimport { RootContext } from \"../Provider\";\nimport {\n  getCustomAttr,\n  getCustomVal,\n  getCustomValVersion,\n  isCustomValInvalid,\n  isCustomValValid,\n  Medal\n} from \"./UserTasks\";\nimport { ToggleIcon } from \"./Controller\";\nimport ListGroup from \"reactstrap/lib/ListGroup\";\nimport ListGroupItem from \"reactstrap/lib/ListGroupItem\";\nimport styles from \"./UserStory.module.css\";\nimport { Switch } from \"@rmwc/switch\";\nimport InputGroupText from \"reactstrap/lib/InputGroupText\";\nimport { ActionTypes } from \"../actions\";\nconst UserStoryLink = ({ url, item }: { url: string; item: ITask }) => {\n  const {\n    user_story_extra_info,\n    project_extra_info: { slug }\n  } = item;\n  const usName = user_story_extra_info\n    ? `#${user_story_extra_info.ref} ${user_story_extra_info.subject}`\n    : undefined;\n  const href = user_story_extra_info\n    ? `${url}/project/${slug}/us/${user_story_extra_info.ref}`\n    : \"#\";\n\n  if (usName) {\n    return (\n      <a href={href} target=\"_blank\" rel=\"noopener noreferrer\" title={usName}>\n        <FontAwesomeIcon icon={faExternalLinkAlt} /> {usName}\n      </a>\n    );\n  } else {\n    return <>(Unassigned tasks)</>;\n  }\n};\n\nconst TaskLink = ({ url, item }: { url: string; item: ITask }) => {\n  const taskName = `#${item.ref} ${item.subject}`;\n  const href = `${url}/project/${item.project_extra_info.slug}/task/${\n    item.ref\n  }`;\n  return (\n    <a href={href} target=\"_blank\" rel=\"noopener noreferrer\" title={taskName}>\n      <FontAwesomeIcon icon={faExternalLinkAlt} /> {taskName}\n    </a>\n  );\n};\n\ninterface ToggleNumberInputProps {\n  label: string;\n  value: number;\n  onSubmit?: (value: number) => void;\n  valid?: boolean;\n  invalid?: boolean;\n  disabled?: boolean;\n  loading?: boolean;\n}\nconst ToggleNumberInput: React.FC<ToggleNumberInputProps> = ({\n  label,\n  value,\n  onSubmit,\n  valid,\n  invalid,\n  disabled,\n  loading\n}) => {\n  const [checked, setChecked] = useState<boolean>(false);\n  const [val, setVal] = useState(\"\");\n  const onChange = useCallback(\n    (evt: React.FormEvent<any>) => {\n      setChecked(evt.currentTarget.checked);\n    },\n    [setChecked]\n  );\n  const handleVal = useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>) => {\n      setVal(e.target.value);\n    },\n    [setVal]\n  );\n  const handleSubmit = useCallback(\n    (e: React.FormEvent) => {\n      const num = Number(val);\n      if (checked && val !== \"\" && num >= 0 && onSubmit) {\n        onSubmit(num);\n        setChecked(false);\n      }\n      e.preventDefault();\n    },\n    [checked, val, onSubmit, setChecked]\n  );\n  useEffect(() => {\n    if (disabled) {\n      setChecked(false);\n    }\n  }, [setChecked, disabled]);\n  const title = disabled ? \"Need sign in!\" : \"\";\n  return (\n    <Form inline onSubmit={handleSubmit}>\n      <InputGroup className={styles.toggle_input}>\n        <InputGroupAddon addonType=\"prepend\">{label}</InputGroupAddon>\n        {loading ? (\n          <InputGroupSpinner />\n        ) : (\n          <>\n            {checked ? (\n              <>\n                <InputGroupAddon addonType=\"prepend\">\n                  <InputGroupText>{value}</InputGroupText>\n                </InputGroupAddon>\n                <InputGroupAddon addonType=\"prepend\">\n                  <InputGroupText>\n                    <FontAwesomeIcon\n                      className=\"text-info\"\n                      icon={faHandPointRight}\n                    />\n                  </InputGroupText>\n                </InputGroupAddon>\n                <Input\n                  onInput={handleVal}\n                  onChange={handleVal}\n                  defaultValue={String(value)}\n                  type=\"number\"\n                  step=\"0.5\"\n                  min=\"0\"\n                />\n                <InputGroupAddon addonType=\"append\">\n                  <Button color=\"info\">\n                    <FontAwesomeIcon icon={faCloudUploadAlt} />\n                  </Button>\n                </InputGroupAddon>\n              </>\n            ) : (\n              <Input valid={valid} invalid={invalid} readOnly value={value} />\n            )}\n            <InputGroupAddon addonType=\"append\" title={title}>\n              <Switch disabled={disabled} checked={checked} onChange={onChange}>\n                <FontAwesomeIcon className=\"text-info\" icon={faEdit} />\n              </Switch>\n            </InputGroupAddon>\n          </>\n        )}\n      </InputGroup>\n    </Form>\n  );\n};\ninterface GradeProps {\n  e: number;\n  r: number;\n}\nexport const Grade: React.FC<GradeProps> = ({ e, r }) => {\n  return (\n    <InputGroup className={styles.display_medal}>\n      <InputGroupAddon addonType=\"prepend\">Grade</InputGroupAddon>\n      <InputGroupText className={styles.medal}>\n        <Medal e={e} r={r} />\n      </InputGroupText>\n    </InputGroup>\n  );\n};\n\ninterface TaskStatusItemProps {\n  item: ITaskStatus;\n  task: ITask;\n  onSelect?: (id: number) => void;\n}\nconst TaskStatusItem: React.FC<TaskStatusItemProps> = ({\n  item,\n  task,\n  onSelect\n}) => {\n  const { dispatch } = useContext(RootContext);\n  const handleClick = useCallback(() => {\n    dispatch({\n      type: ActionTypes.PATCH_TASK,\n      payload: {\n        key: \"status\",\n        value: item.id,\n        id: task.id\n      }\n    });\n    onSelect && onSelect(item.id);\n  }, [dispatch, item.id, task.id, onSelect]);\n  return <DropdownItem onClick={handleClick}>{item.name}</DropdownItem>;\n};\ninterface TaskStatusSelectorProps {\n  task: ITask;\n  disabled?: boolean;\n}\nconst TaskStatusSelector: React.FC<TaskStatusSelectorProps> = ({\n  task,\n  disabled\n}) => {\n  const [loading, setLoading] = useState<boolean>(false);\n  const {\n    state: { active_task_statuses }\n  } = useContext(RootContext);\n  const handleSelect = useCallback(() => {\n    setLoading(true);\n  }, [setLoading]);\n  useEffect(() => {\n    setLoading(false);\n  }, [task.version, setLoading]);\n  return (\n    <>\n      {loading ? (\n        <Spinner type=\"grow\" color=\"info\" />\n      ) : (\n        <UncontrolledDropdown>\n          <DropdownToggle disabled={disabled} caret={!disabled}>\n            {task.status_extra_info.name}\n          </DropdownToggle>\n          <DropdownMenu>\n            {active_task_statuses.map(item => (\n              <TaskStatusItem\n                item={item}\n                key={item.id}\n                task={task}\n                onSelect={handleSelect}\n              />\n            ))}\n          </DropdownMenu>\n        </UncontrolledDropdown>\n      )}\n    </>\n  );\n};\n\nexport const TaskItem = ({ item }: { item: ITask }) => {\n  const {\n    state: {\n      url,\n      custom_attrs,\n      custom_eid,\n      custom_rid,\n      custom_value_map,\n      auth_token\n    },\n    dispatch\n  } = useContext(RootContext);\n  const version = getCustomValVersion(custom_value_map, item);\n  const onSubmitE = useCallback(\n    (value: number) => {\n      if (version) {\n        dispatch({\n          type: ActionTypes.PATCH_CUSTOM_VALUE,\n          payload: {\n            id: item.id,\n            key: custom_eid,\n            value,\n            version\n          }\n        });\n      }\n    },\n    [dispatch, item.id, custom_eid, version]\n  );\n  const onSubmitR = useCallback(\n    (value: number) => {\n      if (version) {\n        dispatch({\n          type: ActionTypes.PATCH_CUSTOM_VALUE,\n          payload: {\n            id: item.id,\n            key: custom_rid,\n            value,\n            version\n          }\n        });\n      }\n    },\n    [custom_rid, dispatch, item.id, version]\n  );\n  const customAttrE = getCustomAttr(custom_attrs, Number(custom_eid));\n  const customAttrR = getCustomAttr(custom_attrs, Number(custom_rid));\n  if (!customAttrE || !customAttrR) {\n    return null;\n  }\n  const e = getCustomVal(custom_value_map, item, customAttrE.id);\n  const r = getCustomVal(custom_value_map, item, customAttrR.id);\n  const valid = isCustomValValid(e, r, item.is_closed);\n  const invalid = isCustomValInvalid(e, r);\n  const disabled = auth_token === \"\";\n  const loading = !version;\n  return (\n    <ListGroupItem\n      className={classNames({ [styles.is_closed]: item.is_closed })}\n    >\n      <div className=\"d-flex mb-1\">\n        <div className=\"mr-auto text-truncate\">\n          <TaskLink url={url} item={item} />\n        </div>\n        <TaskStatusSelector task={item} disabled={disabled} />\n      </div>\n      <Row>\n        <Col>\n          <ToggleNumberInput\n            onSubmit={onSubmitE}\n            label={customAttrE.name}\n            value={e}\n            disabled={disabled}\n            loading={loading}\n          />\n        </Col>\n        <Col>\n          <ToggleNumberInput\n            onSubmit={onSubmitR}\n            label={customAttrR.name}\n            value={r}\n            valid={valid}\n            invalid={invalid}\n            disabled={disabled}\n            loading={loading}\n          />\n        </Col>\n        <Col>\n          <Grade e={e} r={r} />\n        </Col>\n      </Row>\n    </ListGroupItem>\n  );\n};\nexport const UserStory = ({ item }: { item: ITasksByUserStory }) => {\n  const {\n    state: { url }\n  } = useContext(RootContext);\n  const [isOpen, setIsOpen] = useState<boolean>(false);\n  const toggle = useCallback(() => {\n    setIsOpen(!isOpen);\n  }, [isOpen, setIsOpen]);\n  useEffect(() => {\n    setIsOpen(!item.is_closed);\n  }, [item.is_closed, setIsOpen]);\n  return (\n    <Card>\n      <CardHeader\n        className={classNames(styles.header, \"text-truncate\", {\n          [styles.is_closed]: item.is_closed\n        })}\n        onClick={toggle}\n      >\n        <ToggleIcon isOpen={isOpen} />\n        <UserStoryLink url={url} item={item.tasks[0]} />\n      </CardHeader>\n      <Collapse isOpen={isOpen}>\n        <ListGroup>\n          {item.tasks.map(task => (\n            <TaskItem item={task} key={task.id} />\n          ))}\n        </ListGroup>\n      </Collapse>\n    </Card>\n  );\n};\n","import React, { useContext, useState, useEffect } from \"react\";\nimport { RootContext } from \"../Provider\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  CardFooter,\n  Input,\n  InputGroup,\n  InputGroupAddon,\n  Row,\n  Col\n} from \"reactstrap\";\nimport classNames from \"classnames\";\nimport { ITask, IUser, ITasksByUserStory } from \"../store\";\nimport { InputGroupSpinner } from \"./InputGroupSpinner\";\nimport {\n  getCustomAttr,\n  getCustomVal,\n  getCustomValVersion,\n  isCustomValInvalid,\n  isCustomValValid,\n  TaskProgress\n} from \"./UserTasks\";\nimport _ from \"lodash\";\nimport { UserStory, Grade } from \"./UserStory\";\nexport const PersonalTasks = ({ userInfo }: { userInfo: IUser }) => {\n  const {\n    state: {\n      tasks,\n      custom_attrs,\n      custom_value_map,\n      custom_eid,\n      custom_rid,\n      biz_days\n    }\n  } = useContext(RootContext);\n  const [items, setItems] = useState<ITask[]>([]);\n  const [userStories, setUserStories] = useState<ITasksByUserStory[]>([]);\n  useEffect(() => {\n    const userTasks = tasks\n      .filter(task => task.assigned_to === userInfo.id)\n      .sort((a, b) => a.user_story - b.user_story);\n    setItems(userTasks);\n    const userStories = _.chain(tasks)\n      .filter({ assigned_to: userInfo.id })\n      .groupBy(\"user_story\")\n      .map((items, key) => ({\n        user_story: Number(key),\n        user_story_extra_info: items[0].user_story_extra_info,\n        tasks: items,\n        is_closed: items.every(task => task.is_closed)\n      }))\n      .value();\n    setUserStories(userStories);\n  }, [tasks, userInfo.id]);\n\n  const customAttrE = getCustomAttr(custom_attrs, Number(custom_eid));\n  const customAttrR = getCustomAttr(custom_attrs, Number(custom_rid));\n  if (!customAttrE || !customAttrR || biz_days.length <= 1) {\n    return null;\n  }\n\n  const [e, r] = items.reduce(\n    (result, item) => {\n      return [\n        result[0] + getCustomVal(custom_value_map, item, customAttrE.id),\n        result[1] + getCustomVal(custom_value_map, item, customAttrR.id)\n      ];\n    },\n    [0, 0]\n  );\n  const valid = isCustomValValid(\n    e,\n    r,\n    userStories.every(item => item.is_closed)\n  );\n  const invalid = isCustomValInvalid(e, r);\n  const loading = items.some(\n    item => !getCustomValVersion(custom_value_map, item)\n  );\n\n  return (\n    <>\n      {userStories.map(item => (\n        <UserStory item={item} key={item.user_story} />\n      ))}\n      <Card>\n        <CardHeader className={classNames(\"bg-info\", \"text-light\")}>\n          Total\n        </CardHeader>\n        <CardBody>\n          <Row>\n            <Col>\n              <InputGroup>\n                <InputGroupAddon addonType=\"prepend\">\n                  {customAttrE.name}\n                </InputGroupAddon>\n                {loading ? <InputGroupSpinner /> : <Input readOnly value={e} />}\n              </InputGroup>\n            </Col>\n            <Col>\n              <InputGroup>\n                <InputGroupAddon addonType=\"prepend\">\n                  {customAttrR.name}\n                </InputGroupAddon>\n                {loading ? (\n                  <InputGroupSpinner />\n                ) : (\n                  <Input readOnly value={r} invalid={invalid} valid={valid} />\n                )}\n              </InputGroup>\n            </Col>\n            <Col>\n              <Grade e={e} r={r} />\n            </Col>\n          </Row>\n        </CardBody>\n        <CardFooter>\n          <TaskProgress tasks={items} />\n        </CardFooter>\n      </Card>\n    </>\n  );\n};\n","import React from \"react\";\nimport { Card, CardHeader } from \"reactstrap\";\nimport { IUser } from \"../store\";\n\nimport styles from \"./PersonalInfo.module.css\";\n\nexport const PersonalInfo = ({ userInfo }: { userInfo: IUser }) => {\n  const imgSrc = userInfo.photo || `http://i.pravatar.cc/80?u=${Math.random()}`;\n  return (\n    <Card>\n      <CardHeader>\n        <img className={styles.avator} src={imgSrc} alt={userInfo.username} />\n        {` ${userInfo.username}'s tasks`}\n      </CardHeader>\n    </Card>\n  );\n};\n","import React, { useContext, useState, useEffect } from \"react\";\nimport { ITask, IUser } from \"../store\";\nimport { RootContext } from \"../Provider\";\nimport { Chart } from \"./Chart\";\n\nexport const PersonalChart = ({ userInfo }: { userInfo: IUser }) => {\n  const [userTasks, setUserTasks] = useState<ITask[]>([]);\n  const {\n    state: { tasks }\n  } = useContext(RootContext);\n  useEffect(() => {\n    const userTasks = tasks\n      .filter(task => task.assigned_to === userInfo.id)\n      .sort((a, b) => a.user_story - b.user_story);\n    setUserTasks(userTasks);\n  }, [tasks, userInfo.id]);\n\n  return <Chart tasks={userTasks} />;\n};\n","import React, { useCallback, useContext, useEffect, useState } from \"react\";\nimport {\n  Button,\n  Alert,\n  Navbar,\n  Form,\n  InputGroup,\n  Input,\n  InputGroupAddon,\n  InputGroupText,\n  Spinner\n} from \"reactstrap\";\nimport { PersonalTasks } from \"./PersonalTasks\";\nimport { PersonalInfo } from \"./PersonalInfo\";\nimport { RootContext } from \"../Provider\";\nimport { PersonalChart } from \"./PersonalChart\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faArrowCircleLeft,\n  faUser,\n  faKey,\n  faSignInAlt,\n  faSignOutAlt\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { Link } from \"react-router-dom\";\nimport { ActionTypes } from \"../actions\";\nimport { UpdateButton } from \"./UpdateButton\";\nimport useRouter from \"use-react-router\";\nimport { preventDefault } from \"../util/handler\";\nconst SignInForm: React.FC = () => {\n  const {\n    state: { auth_token, auth_error, username: sign_in_username },\n    dispatch\n  } = useContext(RootContext);\n\n  const [username, setUsername] = useState<string>(\"\");\n  const [password, setPassword] = useState<string>(\"\");\n  const [loading, setLoading] = useState<boolean>(false);\n\n  const handleSubmit = useCallback(\n    (e: React.FormEvent) => {\n      if (username && password) {\n        setLoading(true);\n        dispatch({\n          type: ActionTypes.SIGN_IN,\n          payload: {\n            username,\n            password\n          }\n        });\n      }\n      e.preventDefault();\n    },\n    [password, username, dispatch, setLoading]\n  );\n  const handleUsername = useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>) => {\n      setUsername(e.target.value);\n    },\n    [setUsername]\n  );\n  const handlePassword = useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>) => {\n      setPassword(e.target.value);\n    },\n    [setPassword]\n  );\n  const handleSignOut = useCallback(() => {\n    dispatch({ type: ActionTypes.SIGN_OUT });\n  }, [dispatch]);\n  useEffect(() => {\n    if (auth_error || auth_token) {\n      setLoading(false);\n    }\n  }, [auth_error, auth_token, setLoading]);\n  return (\n    <>\n      {auth_token ? (\n        <Form inline onSubmit={preventDefault}>\n          <InputGroup>\n            <InputGroupAddon addonType=\"prepend\">\n              <InputGroupText>\n                <FontAwesomeIcon icon={faUser} />\n              </InputGroupText>\n            </InputGroupAddon>\n            <Input readOnly valid={true} placeholder={sign_in_username} />\n            <InputGroupAddon addonType=\"append\">\n              <Button onClick={handleSignOut}>\n                <FontAwesomeIcon icon={faSignOutAlt} />\n              </Button>\n            </InputGroupAddon>\n          </InputGroup>\n        </Form>\n      ) : (\n        <Form inline onSubmit={handleSubmit}>\n          <InputGroup>\n            <InputGroupAddon addonType=\"prepend\">\n              <InputGroupText>\n                <FontAwesomeIcon icon={faUser} />\n              </InputGroupText>\n            </InputGroupAddon>\n            <Input\n              disabled={loading}\n              onInput={handleUsername}\n              onChange={handleUsername}\n              name=\"username\"\n              placeholder=\"username\"\n              invalid={auth_error}\n            />\n          </InputGroup>\n          <InputGroup>\n            <InputGroupAddon addonType=\"prepend\">\n              <InputGroupText>\n                <FontAwesomeIcon icon={faKey} />\n              </InputGroupText>\n            </InputGroupAddon>\n            <Input\n              disabled={loading}\n              onInput={handlePassword}\n              onChange={handlePassword}\n              name=\"password\"\n              placeholder=\"password\"\n              type=\"password\"\n              invalid={auth_error}\n            />\n          </InputGroup>\n          <Button color=\"primary\">\n            {loading ? (\n              <Spinner size=\"sm\" type=\"grow\" />\n            ) : (\n              <FontAwesomeIcon icon={faSignInAlt} />\n            )}\n          </Button>\n        </Form>\n      )}\n    </>\n  );\n};\nexport const PersonalPage: React.FC = () => {\n  const {\n    state: { user },\n    dispatch\n  } = useContext(RootContext);\n  const {\n    match: {\n      params: { uid }\n    }\n  } = useRouter();\n  useEffect(() => {\n    if (uid) {\n      dispatch({ type: ActionTypes.FETCH_USER, payload: { uid } });\n    }\n    return () => {\n      dispatch({ type: ActionTypes.RESET_USER });\n    };\n  }, [dispatch, uid]);\n  return (\n    <>\n      <Navbar color=\"light\" light>\n        <Button tag={Link} to=\"/\">\n          <FontAwesomeIcon icon={faArrowCircleLeft} /> Go back\n        </Button>\n        <SignInForm />\n        <UpdateButton />\n      </Navbar>\n      {user ? (\n        <>\n          <PersonalInfo userInfo={user} />\n          <br />\n          <PersonalTasks userInfo={user} />\n          <br />\n          <PersonalChart userInfo={user} />\n        </>\n      ) : (\n        <Alert color=\"danger\">This user does not exist.</Alert>\n      )}\n    </>\n  );\n};\n","import React from \"react\";\nimport { ToastContainer } from \"react-toastify\";\nimport { Controller } from \"./components/Controller\";\nimport { Provider } from \"./Provider\";\nimport { HashRouter, Route } from \"react-router-dom\";\nimport { OverView } from \"./components/OverView\";\nimport { PersonalPage } from \"./components/PersonalPage\";\nexport const App = () => (\n  <div className=\"container\">\n    <ToastContainer />\n    <HashRouter>\n      <Provider>\n        <Controller />\n        <Route exact path=\"/\" component={OverView} />\n        <Route exact path=\"/:uid\" component={PersonalPage} />\n      </Provider>\n    </HashRouter>\n  </div>\n);\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport \"bootstrap-css-only/css/bootstrap.min.css\";\nimport \"@material/switch/dist/mdc.switch.css\";\nimport \"@material/form-field/dist/mdc.form-field.css\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"UserStory_header__1tc8G\",\"toggle_input\":\"UserStory_toggle_input__JHXrr\",\"display_medal\":\"UserStory_display_medal__22hJs\",\"medal\":\"UserStory_medal__ap0c_\",\"is_closed\":\"UserStory_is_closed__3W_SB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"gold\":\"UserTasks_gold__196BT\",\"silver\":\"UserTasks_silver__1ViV4\",\"bronze\":\"UserTasks_bronze__mYN2N\",\"custom_input_td\":\"UserTasks_custom_input_td__y-1Rp\",\"avator\":\"UserTasks_avator__3R6Qm\"};"],"sourceRoot":""}