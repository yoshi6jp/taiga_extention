{"version":3,"sources":["components/Controller.module.css","components/PersonalInfo.module.css","actions.ts","store.ts","util/useSideEffector.ts","reducer.ts","sideEffectors/fetchProjects.ts","sideEffectors/fetchProject.ts","sideEffectors/fetchMilestones.ts","sideEffectors/fetchTasks.ts","sideEffectors/fetchTaskStatuses.ts","sideEffectors/fetchCustomAttrs.ts","sideEffectors/fetchCustomValueMap.ts","sideEffectors/fetchUser.ts","sideEffectors/patchCustomValue.ts","sideEffectors/patchTask.ts","sideEffectors/signIn.ts","sideEffectors/index.ts","Provider.tsx","components/ProjectSelector.tsx","components/MilestoneSelector.tsx","components/CustomValuesSelector.tsx","components/DaysSelector.tsx","components/TaskStatusSelector.tsx","components/Controller.tsx","components/UpdateButton.tsx","components/UserTasks.tsx","components/UnEstimatedTasks.tsx","components/Chart.tsx","components/OverviewChart.tsx","components/OverView.tsx","components/InputGroupSpinner.tsx","components/UserStory.tsx","components/PersonalTasks.tsx","components/PersonalInfo.tsx","components/PersonalChart.tsx","components/PersonalPage.tsx","App.tsx","serviceWorker.ts","index.tsx","components/UserStory.module.css","components/UserTasks.module.css"],"names":["module","exports","header","avator","ActionTypes","StorageKey","ss","getFromStorage","key","localStorage","getItem","getFromStorageWithSubkey","subkey","concat","setToStorage","item","setItem","setToStorageWithSubkey","initialStateFn","url","URL","pid","PID","mid","MID","custom_eid","CUSTOM_EID","custom_rid","CUSTOM_RID","biz_days_str","BIZ_DAYS","biz_days","_","compact","split","sort","reject_task_status_ids","REJECT_TASK_STATUS_IDS","isOpen","auth_token","auth_error","username","password","user","projects","project","custom_attrs","milestones","tasks","task_statuses","custom_value_map","WeakMap","updated_time","reducer","state","arguments","length","undefined","action","type","SET_URL","payload","Object","objectSpread","SET_PROJECTS","SET_PID","SET_PROJECT","SET_MID","SET_MILESTONES","SET_CUSTOM_EID","SET_CUSTOM_ATTRS","SET_CUSTOM_RID","SET_BIZ_DAYS","join","ADD_BIZ_DAY","biz_day","chain","toConsumableArray","uniq","value","REMOVE_BIZ_DAY","reject","SET_TASKS","SET_TASK_STATUSES","SET_CUSTOM_VALUE_MAP","SET_USER","RESET_USER","ADD_REJECT_TASK_STATUS_ID","reject_task_status_id","REMOVE_REJECT_TASK_STATUS_ID","OPEN_CONTROLLER","CLOSE_CONTROLLER","UPDATE_DATA","Date","now","SIGN_IN","_action$payload","SET_AUTH_TOKEN","axios","defaults","headers","common","SET_AUTH_ERROR","SIGN_OUT","dispatchSideEffector","dispatch","sideEffector","dispatchSECaller","fetchProjecs","_ref","asyncToGenerator","regenerator_default","a","mark","_callee","_state","_ref2","wrap","_context","prev","next","fetchData","sent","data","t0","console","log","stop","_x","_x2","_x3","apply","this","fetchProject","FETCH_PROJECT","fetchMilestones","FETCH_MILESTONES","params","fetchTasks","milestone","FETCH_TASKS","x-disable-pagination","filter","includes","String","status","fetchTaskStatuses","FETCH_TASK_STATUSES","fetchCustomAttrs","FETCH_CUSTOM_ATTRS","fetchCustomValueMap","_callee2","_context2","FETCH_CUSTOM_VALUE_MAP","Promise","all","map","_ref3","custom_attr_val","id","abrupt","_x4","t1","t2","fetchUser","uid","FETCH_USER","patchCustomValue","version","task","custom_value","attributes_values","PATCH_CUSTOM_VALUE","find","has","get","patchData","defineProperty","patchTask","_patchData","PATCH_TASK","signIn","postData","path","config","baseUrl","post","patch","rootSideEffector","FETCH_PROJECTS","replace","initialState","RootContext","createContext","Provider","children","_useSideEffector","slicedToArray","dispatchSE","useCallback","useSideEffector","useReducer","_useSideEffector2","useEffect","react_default","createElement","ProjectSelector","_useContext","useContext","_useContext$state","handleChange","e","target","InputGroup","className","InputGroupAddon","addonType","Input","onChange","name","MilestoneSelector","CustomValuesSelector","dayNameFromIdx","date","idx","getMilestone","items","weekClassName","day","text-danger","text-info","DayItem","checked","format","isPlanning","eleId","Fragment","classNames","table-info","biz","isWeekDay","FormGroup","check","inline","Label","disabled","isWeekendDay","UncontrolledTooltip","indexOf","dayName","DaysSelector","_useContext2","_useContext2$state","_useState","useState","_useState2","setItems","startM","moment","estimated_start","local","daysInSprint","estimated_finish","diff","times","i","clone","add","getDays","weekdays","chunk","Card","CardHeader","Table","bordered","days","DaysSelector_DayItem","StatusItem","defaultChecked","TaskStatusSelector","CardBody","TaskStatusSelector_StatusItem","ToggleIcon","rotation","index_es","icon","faChevronCircleRight","Controller","stateUrl","setUrl","handleUrl","handleSubmit","preventDefault","handleHref","stopPropagation","toggle","taskboardUrl","project_extra_info","slug","getTaskboardUrl","styles","onClick","Controller_ToggleIcon","Badge","color","pill","getSpName","head","last","getRange","href","rel","faExternalLinkAlt","Collapse","Form","onSubmit","defaultValue","placeholder","Button","ProjectSelector_ProjectSelector","MilestoneSelector_MilestoneSelector","CustomValuesSelector_CustomValuesSelector","DaysSelector_DaysSelector","TaskStatusSelector_TaskStatusSelector","UpdateButton","updateData","faSyncAlt","barStyles","getTasksByUser","groupBy","getCustomVal","val","Number","sum","getCustomValVersion","custon_value_map","isCustomValValid","r","is_closed","isCustomValInvalid","NameAndWorkLoad","total","imgSrc","src","alt","tblCls","faGrinBeam","faGrinBeamSweat","faDizzy","Medal","_getGrade","isNumber","Math","abs","getGrade","_getGrade2","grade","num","faMedal","UserRow","sums","isPast","hpd","closedTasks","customTotal","setTotal","_useState3","_useState4","progressTotal","setProgressTotal","sumItem","margedTotal","totalStr","photo","random","closed_status","orderBy","reverse","closedTotals","mapValues","ts","reduce","result","t","label","status_extra_info","style","sortedTotals","UserTasks_NameAndWorkLoad","custom_input_td","bsSize","step","react_router_dom","to","Progress","multi","bar","max","UserTasks_Medal","getCustomAttr","UserTasks","members","_useState5","_useState6","setHpd","_useState7","_useState8","activeLen","disableSubmit","taskSumByUser","eid","rid","getTaskSumByUser","customAttrE","customAttrR","unassignedSum","endOf","tasksByUser","Navbar","light","InputGroupText","faTimes","faEquals","UpdateButton_UpdateButton","UserTasks_UserRow","TaskItem","ref","ListGroupItem","tag","subject","UnEstimatedTasks","ListGroup","UnEstimatedTasks_TaskItem","getTaskCreated","created_date","getSumVal","Chart","setData","days_len","allTaskVal","estimate","getTaskCreatedToday","finished_date","getTaskFinished","es6","width","height","dataKey","fill","stackId","OverviewChart","Chart_Chart","OverView","react","UserTasks_UserTasks","UnEstimatedTasks_UnEstimatedTasks","OverviewChart_OverviewChart","InputGroupSpinner","faSpinner","UserStoryLink","user_story_extra_info","usName","title","TaskLink","taskName","ToggleNumberInput","valid","invalid","loading","setChecked","setVal","evt","currentTarget","handleVal","handeSubmit","toggle_input","InputGroupSpinner_InputGroupSpinner","InputGroupText_default","faHandPointRight","onInput","min","faCloudUploadAlt","readOnly","faEdit","Grade","_ref4","display_medal","medal","TaskStatusItem","_ref5","onSelect","handleClick","DropdownItem","_ref6","setLoading","list","handleSelect","Spinner","UncontrolledDropdown","DropdownToggle","caret","DropdownMenu","UserStory_TaskStatusItem","_ref7","_useContext3","_useContext3$state","onSubmitE","onSubmitR","ListGroupItem_default","UserStory_TaskLink","UserStory_TaskStatusSelector","Row","Col","UserStory_ToggleNumberInput","UserStory_Grade","UserStory","_ref8","_useState9","_useState10","setIsOpen","UserStory_UserStoryLink","ListGroup_default","UserStory_TaskItem","PersonalTasks","userInfo","userStories","setUserStories","userTasks","assigned_to","b","user_story","every","_items$reduce","_items$reduce2","some","UserStory_UserStory","PersonalInfo","PersonalChart","setUserTasks","SignInForm","sign_in_username","setUsername","setPassword","handleUsername","handlePassword","handleSignOut","faUser","faSignOutAlt","faKey","size","faSignInAlt","PersonalPage","useRouter","match","Link","faArrowCircleLeft","PersonalPage_SignInForm","PersonalInfo_PersonalInfo","PersonalTasks_PersonalTasks","PersonalChart_PersonalChart","Alert","App","Provider_Provider","Controller_Controller","react_router","exact","component","Boolean","window","location","hostname","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","gold","silver","bronze"],"mappings":"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","file":"static/js/main.fb60d77d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Controller_header__1l3a3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"avator\":\"PersonalInfo_avator__YLWcN\"};","import {\n  IProject,\n  IMilestone,\n  ICustomAttr,\n  ITask,\n  ICustomValueMap,\n  ITaskStatus,\n  IUser\n} from \"./store\";\n\nexport enum ActionTypes {\n  SET_URL = \"SET_URL\",\n  SIGN_IN = \"SIGN_IN\",\n  SET_AUTH_TOKEN = \"SET_AUTH_TOKEN\",\n  SET_AUTH_ERROR = \"SET_AUTH_ERROR\",\n  SIGN_OUT = \"SIGN_OUT\",\n  FETCH_PROJECTS = \"FETCH_PROJECTS\",\n  SET_PROJECTS = \"SET_PROJECTS\",\n  SET_PID = \"SET_PID\",\n  FETCH_PROJECT = \"FETCH_PROJECT\",\n  SET_PROJECT = \"SET_PROJECT\",\n  FETCH_MILESTONES = \"FETCH_MILESTONES\",\n  SET_MID = \"SET_MID\",\n  SET_MILESTONES = \"SET_MILESTONES\",\n  SET_CUSTOM_EID = \"SET_CUSTOM_EID\",\n  SET_CUSTOM_RID = \"SET_CUSTOM_RID\",\n  FETCH_CUSTOM_ATTRS = \"FETCH_CUSTOM_ATTRS\",\n  SET_CUSTOM_ATTRS = \"SET_CUSTOM_ATTRS\",\n  SET_BIZ_DAYS = \"SET_BIZ_DAYS\",\n  ADD_BIZ_DAY = \"ADD_BIZ_DAY\",\n  REMOVE_BIZ_DAY = \"REMOVE_BIZ_DAY\",\n  FETCH_TASKS = \"FETCH_TASKS\",\n  SET_TASKS = \"SET_TASKS\",\n  PATCH_TASK = \"PATCH_TASK\",\n  FETCH_TASK_STATUSES = \"FETCH_TASK_STATUSES\",\n  SET_TASK_STATUSES = \"SET_TASK_STATUSES\",\n  FETCH_CUSTOM_VALUE_MAP = \"FETCH_CUSTOM_VALUE_MAP\",\n  SET_CUSTOM_VALUE_MAP = \"SET_CUSTOM_VALUE_MAP\",\n  PATCH_CUSTOM_VALUE = \"PATCH_CUSTOM_VALUE\",\n  FETCH_USER = \"FETCH_USER\",\n  SET_USER = \"SET_USER\",\n  RESET_USER = \"RESET_USER\",\n  ADD_REJECT_TASK_STATUS_ID = \"ADD_REJECT_TASK_STATUS\",\n  REMOVE_REJECT_TASK_STATUS_ID = \"REMOVE_REJECT_TASK_STATUS\",\n  OPEN_CONTROLLER = \"OPEN_CONTROLLER\",\n  CLOSE_CONTROLLER = \"CLOSE_CONTROLLER\",\n  UPDATE_DATA = \"UPDATE_DATA\"\n}\n\nexport interface IAction {\n  type: ActionTypes;\n  payload?: any;\n  meta?: { [key: string]: any };\n}\n\nexport interface SET_URL extends IAction {\n  type: ActionTypes.SET_URL;\n  payload: { url: string };\n}\nexport interface SIGN_IN extends IAction {\n  type: ActionTypes.SIGN_IN;\n  payload: { username: string; password: string };\n}\nexport interface SET_AUTH_TOKEN extends IAction {\n  type: ActionTypes.SET_AUTH_TOKEN;\n  payload: { auth_token: string };\n}\nexport interface SET_AUTH_ERROR extends IAction {\n  type: ActionTypes.SET_AUTH_ERROR;\n}\nexport interface SIGN_OUT extends IAction {\n  type: ActionTypes.SIGN_OUT;\n}\nexport interface FETCH_PROJECTS extends IAction {\n  type: ActionTypes.FETCH_PROJECTS;\n}\nexport interface SET_PROJECTS extends IAction {\n  type: ActionTypes.SET_PROJECTS;\n  payload: { projects: IProject[] };\n}\n\nexport interface SET_PID extends IAction {\n  type: ActionTypes.SET_PID;\n  payload: { pid: string };\n}\nexport interface FETCH_PROJECT extends IAction {\n  type: ActionTypes.FETCH_PROJECT;\n  payload: { pid: string };\n}\nexport interface SET_PROJECT extends IAction {\n  type: ActionTypes.SET_PROJECT;\n  payload: { project: IProject };\n}\nexport interface FETCH_MILESTONES extends IAction {\n  type: ActionTypes.FETCH_MILESTONES;\n  payload: { project: string };\n}\nexport interface SET_MILESTONES extends IAction {\n  type: ActionTypes.SET_MILESTONES;\n  payload: { milestones: IMilestone[] };\n}\n\nexport interface SET_MID extends IAction {\n  type: ActionTypes.SET_MID;\n  payload: { mid: string };\n}\n\nexport interface SET_CUSTOM_EID extends IAction {\n  type: ActionTypes.SET_CUSTOM_EID;\n  payload: { custom_eid: string };\n}\n\nexport interface SET_CUSTOM_RID extends IAction {\n  type: ActionTypes.SET_CUSTOM_RID;\n  payload: { custom_rid: string };\n}\n\nexport interface FETCH_CUSTOM_ATTRS extends IAction {\n  type: ActionTypes.FETCH_CUSTOM_ATTRS;\n  payload: { project: string };\n}\nexport interface SET_CUSTOM_ATTRS extends IAction {\n  type: ActionTypes.SET_CUSTOM_ATTRS;\n  payload: { custom_attrs: ICustomAttr[] };\n}\n\nexport interface SET_BIZ_DAYS extends IAction {\n  type: ActionTypes.SET_BIZ_DAYS;\n  payload: { biz_days: string[] };\n}\n\nexport interface ADD_BIZ_DAY extends IAction {\n  type: ActionTypes.ADD_BIZ_DAY;\n  payload: { biz_day: string };\n}\n\nexport interface REMOVE_BIZ_DAY extends IAction {\n  type: ActionTypes.REMOVE_BIZ_DAY;\n  payload: { biz_day: string };\n}\n\nexport interface FETCH_TASKS extends IAction {\n  type: ActionTypes.FETCH_TASKS;\n  payload: { milestone: string; reject_task_status_ids: string[] };\n}\nexport interface SET_TASKS extends IAction {\n  type: ActionTypes.SET_TASKS;\n  payload: { tasks: ITask[] };\n}\nexport interface PATCH_TASK extends IAction {\n  type: ActionTypes.PATCH_TASK;\n  payload: { key: string; value: string | number; id: number };\n}\nexport interface FETCH_CUSTOM_VALUE_MAP extends IAction {\n  type: ActionTypes.FETCH_CUSTOM_VALUE_MAP;\n  payload: { tasks: ITask[] };\n}\nexport interface SET_CUSTOM_VALUE_MAP extends IAction {\n  type: ActionTypes.SET_CUSTOM_VALUE_MAP;\n  payload: { custom_value_map: ICustomValueMap };\n}\nexport interface PATCH_CUSTOM_VALUE extends IAction {\n  type: ActionTypes.PATCH_CUSTOM_VALUE;\n  payload: {\n    id: string | number;\n    key: string;\n    value: string | number;\n    version: number;\n  };\n}\nexport interface FETCH_TASK_STATUSES extends IAction {\n  type: ActionTypes.FETCH_TASK_STATUSES;\n  payload: { project: string };\n}\nexport interface SET_TASK_STATUSES extends IAction {\n  type: ActionTypes.SET_TASK_STATUSES;\n  payload: { task_statuses: ITaskStatus[] };\n}\nexport interface FETCH_USER extends IAction {\n  type: ActionTypes.FETCH_USER;\n  payload: { uid: string };\n}\nexport interface SET_USER extends IAction {\n  type: ActionTypes.SET_USER;\n  payload: { user: IUser };\n}\nexport interface RESET_USER extends IAction {\n  type: ActionTypes.RESET_USER;\n}\nexport interface ADD_REJECT_TASK_STATUS_ID extends IAction {\n  type: ActionTypes.ADD_REJECT_TASK_STATUS_ID;\n  payload: { reject_task_status_id: string };\n}\n\nexport interface REMOVE_REJECT_TASK_STATUS_ID extends IAction {\n  type: ActionTypes.REMOVE_REJECT_TASK_STATUS_ID;\n  payload: { reject_task_status_id: string };\n}\n\nexport interface OPEN_CONTROLLER extends IAction {\n  type: ActionTypes.OPEN_CONTROLLER;\n}\n\nexport interface CLOSE_CONTROLLER extends IAction {\n  type: ActionTypes.CLOSE_CONTROLLER;\n}\n\nexport interface UPDATE_DATA extends IAction {\n  type: ActionTypes.UPDATE_DATA;\n}\n\nexport type Actions =\n  | SET_URL\n  | SIGN_IN\n  | SET_AUTH_TOKEN\n  | SET_AUTH_ERROR\n  | SIGN_OUT\n  | FETCH_PROJECTS\n  | SET_PROJECTS\n  | SET_PID\n  | FETCH_PROJECT\n  | SET_PROJECT\n  | FETCH_MILESTONES\n  | SET_MILESTONES\n  | SET_MID\n  | SET_CUSTOM_EID\n  | SET_CUSTOM_RID\n  | FETCH_CUSTOM_ATTRS\n  | SET_CUSTOM_ATTRS\n  | PATCH_CUSTOM_VALUE\n  | SET_BIZ_DAYS\n  | SET_BIZ_DAYS\n  | ADD_BIZ_DAY\n  | REMOVE_BIZ_DAY\n  | FETCH_TASKS\n  | SET_TASKS\n  | PATCH_TASK\n  | FETCH_CUSTOM_VALUE_MAP\n  | SET_CUSTOM_VALUE_MAP\n  | FETCH_TASK_STATUSES\n  | SET_TASK_STATUSES\n  | FETCH_USER\n  | SET_USER\n  | RESET_USER\n  | ADD_REJECT_TASK_STATUS_ID\n  | REMOVE_REJECT_TASK_STATUS_ID\n  | OPEN_CONTROLLER\n  | CLOSE_CONTROLLER\n  | UPDATE_DATA;\n","import _ from \"lodash\";\nexport interface ICustomAttr {\n  id: number;\n  name: string;\n}\nexport interface IAuthToken {\n  auth_token: string;\n}\nexport interface IMilestone {\n  id: number;\n  name: string;\n  estimated_start: string;\n  estimated_finish: string;\n  slug: string;\n  project: number;\n  project_extra_info: IProjectExtraInfo;\n}\ninterface IProjectExtraInfo {\n  id: number;\n  name: string;\n  slug: string;\n}\ninterface IStatusExtraInfo {\n  name: string;\n  is_closed: boolean;\n}\ninterface IUserStoryExtraInfo {\n  id: number;\n  subject: string;\n  epics: any;\n  ref: number;\n}\nexport interface ITask {\n  id: number;\n  assigned_to: number | null;\n  created_date: string;\n  finished_date: string;\n  is_closed: boolean;\n  subject: string;\n  ref: number;\n  project: number;\n  project_extra_info: IProjectExtraInfo;\n  status: number;\n  status_extra_info: IStatusExtraInfo;\n  user_story: number;\n  user_story_extra_info?: IUserStoryExtraInfo;\n  version: number;\n}\nexport interface ITasksByUserStory {\n  user_story: number;\n  user_story_extra_info?: IUserStoryExtraInfo;\n  tasks: ITask[];\n  is_closed: boolean;\n}\nexport interface ITaskStatus {\n  id: number;\n  name: string;\n  order: number;\n  project: number;\n  is_closed: boolean;\n  slug: string;\n}\nexport interface IAttrValue {}\nexport interface ICustomValue {\n  attributes_values: {\n    [key: number]: string;\n  };\n  version: number;\n}\nexport interface IUser {\n  id: number;\n  username: string;\n  full_name: string;\n  full_name_display: string;\n  photo: string;\n}\nexport interface IProject {\n  id: number;\n  name: string;\n  members: IUser[];\n}\nexport type ICustomValueMap = WeakMap<ITask, ICustomValue>;\nexport interface IState {\n  url: string;\n  auth_token: string;\n  auth_error: boolean;\n  username: string;\n  password: string;\n  user: IUser | null;\n  projects: IProject[];\n  pid: string; // url\n  project: IProject;\n  mid: string; // url\n  custom_eid: string; //  pid\n  custom_rid: string; // pid\n  custom_attrs: ICustomAttr[]; // pid\n  biz_days: string[]; //mid\n  milestones: IMilestone[]; // pid\n  tasks: ITask[]; //mid\n  task_statuses: ITaskStatus[];\n  custom_value_map: ICustomValueMap; // pid\n  reject_task_status_ids: string[]; // pid\n  updated_time: number;\n  isOpen: boolean;\n}\n\nexport enum StorageKey {\n  URL = \"taiga_url\",\n  PID = \"taiga_pid\",\n  MID = \"taiga_mid\",\n  CUSTOM_EID = \"taiga_custom_eid\",\n  CUSTOM_RID = \"taiga_custom_rid\",\n  BIZ_DAYS = \"taiga_biz_days\",\n  REJECT_TASK_STATUS_IDS = \"reject_task_status_ids\"\n}\n\nexport const getFromStorage = (key: string) => localStorage.getItem(key) || \"\";\n\nexport const getFromStorageWithSubkey = (key: StorageKey, subkey: string) =>\n  subkey ? getFromStorage(`${subkey}/${key}`) : \"\";\n\nexport const setToStorage = (key: string, item: string) => {\n  localStorage.setItem(key, item);\n};\nexport const setToStorageWithSubkey = (\n  key: StorageKey,\n  subkey: string,\n  item: string\n) => (subkey ? setToStorage(`${subkey}/${key}`, item) : null);\nexport const initialStateFn = (): IState => {\n  const url = getFromStorage(StorageKey.URL);\n  const pid = getFromStorage(StorageKey.PID);\n  const mid = getFromStorage(StorageKey.MID);\n  const custom_eid = getFromStorageWithSubkey(StorageKey.CUSTOM_EID, pid);\n  const custom_rid = getFromStorageWithSubkey(StorageKey.CUSTOM_RID, pid);\n  const biz_days_str = getFromStorageWithSubkey(StorageKey.BIZ_DAYS, mid);\n  const biz_days = _.compact(biz_days_str.split(\",\")).sort();\n  const reject_task_status_ids = _.compact(\n    getFromStorageWithSubkey(StorageKey.REJECT_TASK_STATUS_IDS, pid).split(\",\")\n  );\n  const isOpen = !(url && pid && mid && custom_eid && custom_rid);\n  return {\n    url,\n    auth_token: \"\",\n    auth_error: false,\n    username: \"\",\n    password: \"\",\n    user: null,\n    projects: [],\n    pid,\n    project: {} as IProject,\n    mid,\n    custom_eid,\n    custom_rid,\n    custom_attrs: [],\n    biz_days,\n    milestones: [],\n    tasks: [],\n    task_statuses: [],\n    custom_value_map: new WeakMap(),\n    reject_task_status_ids,\n    updated_time: 0,\n    isOpen\n  };\n};\n","import { Dispatch, useCallback } from \"react\";\n\nexport type SideEffector<S, A> = (\n  action: A,\n  dispatch: Dispatch<A>,\n  state: () => S\n) => void;\nlet ss: any;\nexport const useSideEffector = <S, A>(\n  [state, dispatch]: [S, Dispatch<A>],\n  sideEffector: SideEffector<S, A>\n): [S, Dispatch<A>] => {\n  let dispatchSE: Dispatch<A> | null = null;\n\n  const dispatchSECaller = useCallback(\n    (action: A) => {\n      dispatchSE && dispatchSE(action);\n    },\n    [dispatchSE]\n  );\n  ss = state;\n  const getState = () => ss;\n  dispatchSE = useCallback(\n    dispatchSideEffector<S, A>(\n      getState,\n      dispatch,\n      sideEffector,\n      dispatchSECaller\n    ),\n    []\n  );\n  return [state, dispatchSE];\n};\n\nconst dispatchSideEffector = <S, A>(\n  state: () => S,\n  dispatch: Dispatch<A>,\n  sideEffector: SideEffector<S, A>,\n  dispatchSECaller: Dispatch<A>\n) => (action: A) => {\n  dispatch(action);\n  sideEffector(action, dispatchSECaller, state);\n};\n","import _ from \"lodash\";\nimport axios from \"axios\";\nimport { initialStateFn, StorageKey, IProject, ICustomValueMap } from \"./store\";\nimport { ActionTypes, Actions } from \"./actions\";\nimport {\n  setToStorage,\n  setToStorageWithSubkey,\n  getFromStorageWithSubkey\n} from \"./store\";\nexport const reducer = (state = initialStateFn(), action: Actions) => {\n  switch (action.type) {\n    case ActionTypes.SET_URL: {\n      const { url } = action.payload;\n      setToStorage(StorageKey.URL, url);\n      return { ...state, url };\n    }\n    case ActionTypes.SET_PROJECTS: {\n      const { projects } = action.payload;\n      return {\n        ...state,\n        projects\n      };\n    }\n    case ActionTypes.SET_PID: {\n      const { pid } = action.payload;\n      setToStorage(StorageKey.PID, pid);\n      return {\n        ...state,\n        pid,\n        project: {} as IProject,\n        mid: \"\",\n        custom_eid: getFromStorageWithSubkey(StorageKey.CUSTOM_EID, pid),\n        custom_rid: getFromStorageWithSubkey(StorageKey.CUSTOM_RID, pid),\n        custom_attrs: [],\n        milestones: [],\n        custom_value_map: new WeakMap() as ICustomValueMap\n      };\n    }\n    case ActionTypes.SET_PROJECT: {\n      const { project } = action.payload;\n      return {\n        ...state,\n        project\n      };\n    }\n    case ActionTypes.SET_MID: {\n      const { mid } = action.payload;\n      setToStorage(StorageKey.MID, mid);\n      return {\n        ...state,\n        mid,\n        tasks: [],\n        biz_days: _.compact(\n          getFromStorageWithSubkey(StorageKey.BIZ_DAYS, mid).split(\",\")\n        ).sort()\n      };\n    }\n    case ActionTypes.SET_MILESTONES: {\n      const { milestones } = action.payload;\n      return { ...state, milestones };\n    }\n    case ActionTypes.SET_CUSTOM_EID: {\n      const { custom_eid } = action.payload;\n      setToStorageWithSubkey(StorageKey.CUSTOM_EID, state.pid, custom_eid);\n      return { ...state, custom_eid };\n    }\n    case ActionTypes.SET_CUSTOM_ATTRS: {\n      const { custom_attrs } = action.payload;\n      return { ...state, custom_attrs };\n    }\n    case ActionTypes.SET_CUSTOM_RID: {\n      const { custom_rid } = action.payload;\n      setToStorageWithSubkey(StorageKey.CUSTOM_RID, state.pid, custom_rid);\n      return { ...state, custom_rid };\n    }\n    case ActionTypes.SET_BIZ_DAYS: {\n      const { biz_days } = action.payload;\n      setToStorageWithSubkey(\n        StorageKey.BIZ_DAYS,\n        state.mid,\n        biz_days.join(\",\")\n      );\n      return { ...state, biz_days };\n    }\n    case ActionTypes.ADD_BIZ_DAY: {\n      const { biz_day } = action.payload;\n      const biz_days = _.chain([...state.biz_days, biz_day])\n        .uniq()\n        .sort()\n        .value();\n      setToStorageWithSubkey(\n        StorageKey.BIZ_DAYS,\n        state.mid,\n        biz_days.join(\",\")\n      );\n      return { ...state, biz_days };\n    }\n    case ActionTypes.REMOVE_BIZ_DAY: {\n      const { biz_day } = action.payload;\n      const biz_days = _.reject([...state.biz_days], item => item === biz_day);\n      setToStorageWithSubkey(\n        StorageKey.BIZ_DAYS,\n        state.mid,\n        biz_days.join(\",\")\n      );\n      return { ...state, biz_days };\n    }\n    case ActionTypes.SET_TASKS: {\n      const { tasks } = action.payload;\n      return { ...state, tasks };\n    }\n    case ActionTypes.SET_TASK_STATUSES: {\n      const { task_statuses } = action.payload;\n      return { ...state, task_statuses };\n    }\n    case ActionTypes.SET_CUSTOM_VALUE_MAP: {\n      const { custom_value_map } = action.payload;\n      return { ...state, custom_value_map };\n    }\n    case ActionTypes.SET_USER: {\n      const { user } = action.payload;\n      return { ...state, user };\n    }\n    case ActionTypes.RESET_USER: {\n      return { ...state, user: null };\n    }\n    case ActionTypes.ADD_REJECT_TASK_STATUS_ID: {\n      const { reject_task_status_id } = action.payload;\n      const reject_task_status_ids = _.chain([\n        ...state.reject_task_status_ids,\n        reject_task_status_id\n      ])\n        .compact()\n        .uniq()\n        .value();\n      setToStorageWithSubkey(\n        StorageKey.REJECT_TASK_STATUS_IDS,\n        state.pid,\n        reject_task_status_ids.join(\",\")\n      );\n      return { ...state, reject_task_status_ids };\n    }\n    case ActionTypes.REMOVE_REJECT_TASK_STATUS_ID: {\n      const { reject_task_status_id } = action.payload;\n      const reject_task_status_ids = _.reject(\n        [...state.reject_task_status_ids],\n        item => item === reject_task_status_id\n      );\n      setToStorageWithSubkey(\n        StorageKey.REJECT_TASK_STATUS_IDS,\n        state.pid,\n        reject_task_status_ids.join(\",\")\n      );\n      return { ...state, reject_task_status_ids };\n    }\n    case ActionTypes.OPEN_CONTROLLER: {\n      return { ...state, isOpen: true };\n    }\n    case ActionTypes.CLOSE_CONTROLLER: {\n      return { ...state, isOpen: false };\n    }\n    case ActionTypes.UPDATE_DATA: {\n      return { ...state, updated_time: Date.now() };\n    }\n    case ActionTypes.SIGN_IN: {\n      const { username, password } = action.payload;\n      return { ...state, username, password, auth_error: false };\n    }\n    case ActionTypes.SET_AUTH_TOKEN: {\n      const { auth_token } = action.payload;\n      axios.defaults.headers.common[\"Authorization\"] = `Bearer ${auth_token}`;\n      return { ...state, auth_token };\n    }\n    case ActionTypes.SET_AUTH_ERROR: {\n      return { ...state, auth_error: true };\n    }\n    case ActionTypes.SIGN_OUT: {\n      if (axios.defaults.headers.common[\"Authorization\"]) {\n        delete axios.defaults.headers.common[\"Authorization\"];\n      }\n      return { ...state, auth_token: \"\", username: \"\", password: \"\" };\n    }\n    default: {\n      return state;\n    }\n  }\n};\n","import { IProject } from \"../store\";\nimport { ISideEffector, fetchData, ActionTypes } from \".\";\nexport const fetchProjecs: ISideEffector = async (action, dispatch, state) => {\n  try {\n    const { url } = state();\n    if (url) {\n      const { data: projects } = await fetchData<IProject[]>(url, \"projects\");\n      dispatch({ type: ActionTypes.SET_PROJECTS, payload: { projects } });\n    }\n  } catch (e) {\n    console.log(\"err:fetchProjects\", e);\n  }\n};\n","import { IProject } from \"../store\";\nimport { ISideEffector, fetchData, ActionTypes } from \".\";\nexport const fetchProject: ISideEffector = async (action, dispatch, state) => {\n  if (action.type === ActionTypes.FETCH_PROJECT) {\n    try {\n      const { url } = state();\n      const { pid } = action.payload;\n      if (url && pid) {\n        const { data: project } = await fetchData<IProject>(\n          url,\n          `projects/${pid}`\n        );\n        dispatch({\n          type: ActionTypes.SET_PROJECT,\n          payload: { project }\n        });\n      }\n    } catch (e) {\n      console.log(\"err:fetchProject\", e);\n    }\n  }\n};\n","import { IMilestone } from \"../store\";\nimport { ISideEffector, fetchData, ActionTypes } from \".\";\nexport const fetchMilestones: ISideEffector = async (\n  action,\n  dispatch,\n  state\n) => {\n  if (action.type === ActionTypes.FETCH_MILESTONES) {\n    try {\n      const { url } = state();\n      const { project } = action.payload;\n      if (url && project) {\n        const { data: milestones } = await fetchData<IMilestone[]>(\n          url,\n          \"milestones\",\n          { params: { project } }\n        );\n        dispatch({ type: ActionTypes.SET_MILESTONES, payload: { milestones } });\n      }\n    } catch (e) {\n      console.log(\"err:fetchMilestones\", e);\n    }\n  }\n};\n","import { ITask } from \"../store\";\nimport { ISideEffector, fetchData, ActionTypes } from \".\";\nimport _ from \"lodash\";\nexport const fetchTasks: ISideEffector = async (action, dispatch, state) => {\n  if (action.type === ActionTypes.FETCH_TASKS) {\n    try {\n      const { url, reject_task_status_ids } = state();\n      const { milestone } = action.payload;\n      if (url && milestone) {\n        const { data } = await fetchData<ITask[]>(url, \"tasks\", {\n          headers: { \"x-disable-pagination\": true },\n          params: { milestone }\n        });\n        const tasks = data.filter(\n          item => !_.includes(reject_task_status_ids, String(item.status))\n        );\n        dispatch({ type: ActionTypes.SET_TASKS, payload: { tasks } });\n      }\n    } catch (e) {\n      console.log(\"err:fetchTasks\", e);\n    }\n  }\n};\n","import { ITaskStatus } from \"../store\";\nimport { ISideEffector, fetchData, ActionTypes } from \".\";\nexport const fetchTaskStatuses: ISideEffector = async (\n  action,\n  dispatch,\n  state\n) => {\n  if (action.type === ActionTypes.FETCH_TASK_STATUSES) {\n    try {\n      const { url } = state();\n      const { project } = action.payload;\n      if (url && project) {\n        const { data: task_statuses } = await fetchData<ITaskStatus[]>(\n          url,\n          \"task-statuses\",\n          { params: { project } }\n        );\n        dispatch({\n          type: ActionTypes.SET_TASK_STATUSES,\n          payload: { task_statuses }\n        });\n      }\n    } catch (e) {\n      console.log(\"err:fetchTaskStatuses\", e);\n    }\n  }\n};\n","import { ICustomAttr } from \"../store\";\nimport { ISideEffector, fetchData, ActionTypes } from \".\";\nexport const fetchCustomAttrs: ISideEffector = async (\n  action,\n  dispatch,\n  state\n) => {\n  if (action.type === ActionTypes.FETCH_CUSTOM_ATTRS) {\n    try {\n      const { url } = state();\n      const { project } = action.payload;\n      if (url && project) {\n        const { data: custom_attrs } = await fetchData<ICustomAttr[]>(\n          url,\n          \"task-custom-attributes\",\n          { params: { project } }\n        );\n        dispatch({\n          type: ActionTypes.SET_CUSTOM_ATTRS,\n          payload: { custom_attrs }\n        });\n      }\n    } catch (e) {\n      console.log(\"err:fetchCustomAttrs\", e);\n    }\n  }\n};\n","import { ITask, ICustomValue } from \"../store\";\nimport { ISideEffector, fetchData, ActionTypes } from \".\";\nexport const fetchCustomValueMap: ISideEffector = async (\n  action,\n  dispatch,\n  state\n) => {\n  if (action.type === ActionTypes.FETCH_CUSTOM_VALUE_MAP) {\n    try {\n      const { url, custom_eid, custom_rid } = state();\n      const { tasks } = action.payload;\n      if (url && tasks.length && custom_eid && custom_rid) {\n        const custom_value_map = new WeakMap(\n          await Promise.all(\n            tasks.map(async item => {\n              const { data: custom_attr_val } = await fetchData<ICustomValue>(\n                url,\n                `tasks/custom-attributes-values/${item.id}`\n              );\n              return [item, custom_attr_val] as [ITask, ICustomValue];\n            })\n          )\n        );\n        dispatch({\n          type: ActionTypes.SET_CUSTOM_VALUE_MAP,\n          payload: { custom_value_map }\n        });\n      }\n    } catch (e) {\n      console.log(\"err:fetchCustomValueMap\", e);\n    }\n  }\n};\n","import { IUser } from \"../store\";\nimport { ISideEffector, fetchData, ActionTypes } from \".\";\nexport const fetchUser: ISideEffector = async (action, dispatch, state) => {\n  if (action.type === ActionTypes.FETCH_USER) {\n    try {\n      const { url } = state();\n      const { uid } = action.payload;\n      if (url && uid) {\n        const { data: user } = await fetchData<IUser>(url, `users/${uid}`);\n        dispatch({\n          type: ActionTypes.SET_USER,\n          payload: { user }\n        });\n      }\n    } catch (e) {\n      console.log(\"err:fetchUser\", e);\n    }\n  }\n};\n","import { ISideEffector, patchData, ActionTypes } from \".\";\nexport const patchCustomValue: ISideEffector = async (\n  action,\n  dispatch,\n  state\n) => {\n  if (action.type === ActionTypes.PATCH_CUSTOM_VALUE) {\n    try {\n      const { url, custom_value_map, tasks } = state();\n      const { id, key, value, version } = action.payload;\n      const task = tasks.find(task => task.id === id);\n      if (url && id && key && value && task && custom_value_map.has(task)) {\n        const custom_value = custom_value_map.get(task);\n        if (custom_value) {\n          const { attributes_values } = custom_value;\n          await patchData(url, `tasks/custom-attributes-values/${id}`, {\n            attributes_values: {\n              ...attributes_values,\n              [key]: String(value)\n            },\n            version\n          });\n          dispatch({ type: ActionTypes.UPDATE_DATA });\n        }\n      }\n    } catch (e) {\n      console.log(\"err:patchCustomValue\", e);\n    }\n  }\n};\n","import { ActionTypes, ISideEffector, patchData } from \".\";\nexport const patchTask: ISideEffector = async (action, dispatch, state) => {\n  if (action.type === ActionTypes.PATCH_TASK) {\n    try {\n      const { url, tasks } = state();\n      const { id, key, value } = action.payload;\n      const task = tasks.find(task => task.id === id);\n      if (url && id && key && value && task) {\n        await patchData(url, `tasks/${id}`, {\n          [key]: value,\n          version: task.version\n        });\n        dispatch({ type: ActionTypes.UPDATE_DATA });\n      }\n    } catch (e) {\n      console.log(\"err:patchTask\", e);\n    }\n  }\n};\n","import { IAuthToken } from \"../store\";\nimport { ISideEffector, postData, ActionTypes } from \".\";\nexport const signIn: ISideEffector = async (action, dispatch, state) => {\n  if (action.type === ActionTypes.SIGN_IN) {\n    try {\n      const { url } = state();\n      const { username, password } = action.payload;\n      if (url && username && password) {\n        const {\n          data: { auth_token }\n        } = await postData<IAuthToken>(url, \"auth\", {\n          username,\n          password,\n          type: \"normal\"\n        });\n        dispatch({ type: ActionTypes.SET_AUTH_TOKEN, payload: { auth_token } });\n      }\n    } catch (e) {\n      dispatch({ type: ActionTypes.SET_AUTH_ERROR });\n      console.log(\"err:signIn\", e);\n    }\n  }\n};\n","import { Dispatch } from \"react\";\nimport { Actions, ActionTypes } from \"../actions\";\nimport { IState } from \"../store\";\nimport { baseUrl } from \"../Provider\";\nimport { fetchProjecs } from \"./fetchProjects\";\nimport { fetchProject } from \"./fetchProject\";\nimport { fetchMilestones } from \"./fetchMilestones\";\nimport { fetchTasks } from \"./fetchTasks\";\nimport { fetchTaskStatuses } from \"./fetchTaskStatuses\";\nimport { fetchCustomAttrs } from \"./fetchCustomAttrs\";\nimport { fetchCustomValueMap } from \"./fetchCustomValueMap\";\nimport { fetchUser } from \"./fetchUser\";\nimport { patchCustomValue } from \"./patchCustomValue\";\nimport { patchTask } from \"./patchTask\";\nimport { signIn } from \"./signIn\";\nimport axios, { AxiosRequestConfig } from \"axios\";\nexport { ActionTypes };\nexport type ISideEffector = (\n  action: Actions,\n  dispatch: Dispatch<Actions>,\n  state: () => IState\n) => void;\nexport const fetchData = <T>(\n  url: string,\n  path: string,\n  config?: AxiosRequestConfig\n) => axios.get<T>(`${baseUrl(url)}/${path}`, config);\nexport const postData = <T>(\n  url: string,\n  path: string,\n  data: object,\n  config?: AxiosRequestConfig\n) => axios.post<T>(`${baseUrl(url)}/${path}`, data, config);\nexport const patchData = (\n  url: string,\n  path: string,\n  data: object,\n  config?: AxiosRequestConfig\n) => axios.patch(`${baseUrl(url)}/${path}`, data, config);\nexport const rootSideEffector = (\n  action: Actions,\n  dispatch: Dispatch<Actions>,\n  state: () => IState\n) => {\n  switch (action.type) {\n    case ActionTypes.FETCH_PROJECTS: {\n      fetchProjecs(action, dispatch, state);\n      return;\n    }\n    case ActionTypes.FETCH_PROJECT: {\n      fetchProject(action, dispatch, state);\n      return;\n    }\n    case ActionTypes.FETCH_MILESTONES: {\n      fetchMilestones(action, dispatch, state);\n      return;\n    }\n    case ActionTypes.FETCH_TASKS: {\n      fetchTasks(action, dispatch, state);\n      return;\n    }\n    case ActionTypes.FETCH_TASK_STATUSES: {\n      fetchTaskStatuses(action, dispatch, state);\n      return;\n    }\n    case ActionTypes.FETCH_CUSTOM_ATTRS: {\n      fetchCustomAttrs(action, dispatch, state);\n      return;\n    }\n    case ActionTypes.FETCH_CUSTOM_VALUE_MAP: {\n      fetchCustomValueMap(action, dispatch, state);\n      return;\n    }\n    case ActionTypes.FETCH_USER: {\n      fetchUser(action, dispatch, state);\n      return;\n    }\n    case ActionTypes.PATCH_CUSTOM_VALUE: {\n      patchCustomValue(action, dispatch, state);\n      return;\n    }\n    case ActionTypes.SIGN_IN: {\n      signIn(action, dispatch, state);\n      return;\n    }\n    case ActionTypes.PATCH_TASK: {\n      patchTask(action, dispatch, state);\n      return;\n    }\n    default: {\n    }\n  }\n};\n","import React, { createContext, useReducer, useEffect } from \"react\";\nimport { ActionTypes } from \"./actions\";\nimport { initialStateFn } from \"./store\";\nimport { reducer } from \"./reducer\";\nimport { Actions } from \"./actions\";\nimport { useSideEffector } from \"./util/useSideEffector\";\nimport { rootSideEffector } from \"./sideEffectors\";\nexport const baseUrl = (url: string) => `${url.replace(/[¥/]$/, \"\")}/api/v1`;\n\nconst initialState = initialStateFn();\nexport const RootContext = createContext({\n  state: initialState,\n  dispatch: (action: Actions) => {}\n});\nexport const Provider = ({ children }: { children: React.ReactNode }) => {\n  const [state, dispatch] = useSideEffector(\n    useReducer(reducer, initialState),\n    rootSideEffector\n  );\n  const value = {\n    state,\n    dispatch\n  };\n\n  useEffect(() => {\n    if (state.url) {\n      dispatch({ type: ActionTypes.FETCH_PROJECTS });\n    }\n  }, [dispatch, state.url]);\n  useEffect(() => {\n    if (state.url && state.pid) {\n      dispatch({\n        type: ActionTypes.FETCH_MILESTONES,\n        payload: { project: state.pid }\n      });\n      dispatch({\n        type: ActionTypes.FETCH_CUSTOM_ATTRS,\n        payload: { project: state.pid }\n      });\n      dispatch({\n        type: ActionTypes.FETCH_TASK_STATUSES,\n        payload: { project: state.pid }\n      });\n      dispatch({\n        type: ActionTypes.FETCH_PROJECT,\n        payload: { pid: state.pid }\n      });\n    }\n  }, [state.url, state.pid, dispatch]);\n  useEffect(() => {\n    if (state.url && state.mid) {\n      dispatch({\n        type: ActionTypes.FETCH_TASKS,\n        payload: {\n          milestone: state.mid,\n          reject_task_status_ids: state.reject_task_status_ids\n        }\n      });\n    }\n  }, [\n    state.url,\n    state.mid,\n    state.updated_time,\n    state.reject_task_status_ids,\n    dispatch\n  ]);\n  useEffect(() => {\n    dispatch({\n      type: ActionTypes.FETCH_CUSTOM_VALUE_MAP,\n      payload: {\n        tasks: state.tasks\n      }\n    });\n  }, [dispatch, state.tasks, state.custom_eid, state.custom_rid]);\n  return <RootContext.Provider value={value}>{children}</RootContext.Provider>;\n};\n","import React, { useCallback, useContext } from \"react\";\nimport { Input, InputGroup, InputGroupAddon } from \"reactstrap\";\nimport { RootContext } from \"../Provider\";\nimport { ActionTypes } from \"../actions\";\nexport const ProjectSelector = () => {\n  const {\n    state: { pid, projects },\n    dispatch\n  } = useContext(RootContext);\n  const handleChange = useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>) => {\n      const id = e.target.value;\n      if (id) {\n        dispatch({ type: ActionTypes.SET_PID, payload: { pid: id } });\n      }\n    },\n    [dispatch]\n  );\n  return (\n    <InputGroup className=\"col\">\n      <InputGroupAddon addonType=\"prepend\">Project</InputGroupAddon>\n      <Input value={pid} type=\"select\" onChange={handleChange}>\n        <option value=\"\"> --- </option>\n        {projects.map(item => (\n          <option key={item.id} value={item.id}>\n            {item.name}\n          </option>\n        ))}\n      </Input>\n    </InputGroup>\n  );\n};\n","import React, { useCallback, useContext } from \"react\";\nimport { Input, InputGroup, InputGroupAddon } from \"reactstrap\";\nimport { RootContext } from \"../Provider\";\nimport { ActionTypes } from \"../actions\";\n\nexport const MilestoneSelector = () => {\n  const {\n    state: { milestones, mid },\n    dispatch\n  } = useContext(RootContext);\n  const handleChange = useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>) => {\n      const id = e.target.value;\n      if (id) {\n        dispatch({ type: ActionTypes.SET_MID, payload: { mid: id } });\n      }\n    },\n    [dispatch]\n  );\n\n  return (\n    <InputGroup className=\"col\">\n      <InputGroupAddon addonType=\"prepend\">Sprint</InputGroupAddon>\n      <Input type=\"select\" value={mid} onChange={handleChange}>\n        <option value=\"\"> --- </option>\n        {milestones.map(item => (\n          <option key={item.id} value={item.id}>\n            {item.name}\n          </option>\n        ))}\n      </Input>\n    </InputGroup>\n  );\n};\n","import React, { useCallback, useContext } from \"react\";\nimport { Input, InputGroup, InputGroupAddon } from \"reactstrap\";\nimport { RootContext } from \"../Provider\";\nimport { ActionTypes } from \"../actions\";\n\nexport const CustomValuesSelector = () => {\n  const {\n    state: { custom_attrs, custom_eid, custom_rid },\n    dispatch\n  } = useContext(RootContext);\n  const handleChange = useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>) => {\n      const id = e.target.value;\n      if (id) {\n        switch (e.target.name) {\n          case \"eid\": {\n            dispatch({\n              type: ActionTypes.SET_CUSTOM_EID,\n              payload: { custom_eid: id }\n            });\n            break;\n          }\n          case \"rid\": {\n            dispatch({\n              type: ActionTypes.SET_CUSTOM_RID,\n              payload: { custom_rid: id }\n            });\n            break;\n          }\n          default:\n            console.log(\"other id\");\n        }\n      }\n    },\n    [dispatch]\n  );\n  return (\n    <div className=\"row\">\n      <InputGroup className=\"col\">\n        <InputGroupAddon addonType=\"prepend\">Estimate</InputGroupAddon>\n        <Input\n          value={custom_eid}\n          name=\"eid\"\n          type=\"select\"\n          onChange={handleChange}\n        >\n          <option value=\"\"> --- </option>\n          {custom_attrs.map(item => (\n            <option key={item.id} value={item.id}>\n              {item.name}\n            </option>\n          ))}\n        </Input>\n      </InputGroup>\n      <InputGroup className=\"col\">\n        <InputGroupAddon addonType=\"prepend\">Result</InputGroupAddon>\n        <Input\n          value={custom_rid}\n          name=\"rid\"\n          type=\"select\"\n          onChange={handleChange}\n        >\n          <option> --- </option>\n          {custom_attrs.map(item => (\n            <option key={item.id} value={item.id}>\n              {item.name}\n            </option>\n          ))}\n        </Input>\n      </InputGroup>\n    </div>\n  );\n};\n","import React, { useEffect, useState, useContext, useCallback } from \"react\";\nimport classNames from \"classnames\";\nimport {\n  UncontrolledTooltip,\n  Table,\n  Card,\n  CardHeader,\n  Input,\n  Label,\n  FormGroup\n} from \"reactstrap\";\nimport { IMilestone } from \"../store\";\nimport { RootContext } from \"../Provider\";\nimport moment, { Moment } from \"moment\";\nimport biz from \"moment-business\";\nimport _ from \"lodash\";\nimport { ActionTypes } from \"../actions\";\nexport const isToday = (date: string) =>\n  moment()\n    .local()\n    .format(\"YYYY-MM-DD\") ===\n  moment(date)\n    .local()\n    .format(\"YYYY-MM-DD\");\n\nexport const dayNameFromIdx = (date: string, idx: number) => {\n  if (idx === -1) {\n    return \"\";\n  }\n  if (idx === 0) {\n    return \"Planning\";\n  }\n  return `Day ${idx}`;\n};\n\nexport const dayName = (date: string, biz_days: string[]) => {\n  const idx = biz_days.indexOf(date);\n  return dayNameFromIdx(date, idx);\n};\nexport const getMilestone = (mid: string, items: IMilestone[]) =>\n  items.find(item => String(item.id) === mid);\nconst getDays = (item: IMilestone) => {\n  const startM = moment(item.estimated_start).local();\n  const finishM = moment(item.estimated_finish).local();\n  const daysInSprint = finishM.diff(startM, \"days\");\n  return _.times(daysInSprint).map(i => startM.clone().add(i, \"days\"));\n};\nconst getDefaultBizDays = (items: Moment[]) =>\n  items\n    .filter(item => biz.isWeekDay(item))\n    .map(item => item.format(\"YYYY-MM-DD\"));\n\nconst weekClassName = (day: number) => ({\n  \"text-danger\": day === 0,\n  \"text-info\": day === 6\n});\n\nconst DayItem = ({\n  item,\n  biz_days,\n  idx\n}: {\n  item: Moment | null;\n  biz_days: string[];\n  idx: number;\n}) => {\n  const { dispatch } = useContext(RootContext);\n  const handleChange = useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>) => {\n      const biz_day = e.target.value;\n      if (e.target.checked) {\n        dispatch({ type: ActionTypes.ADD_BIZ_DAY, payload: { biz_day } });\n      } else {\n        dispatch({ type: ActionTypes.REMOVE_BIZ_DAY, payload: { biz_day } });\n      }\n    },\n    [dispatch]\n  );\n  if (!item) {\n    return (\n      <td>\n        <br />\n      </td>\n    );\n  }\n  const value = item.format(\"YYYY-MM-DD\");\n  const isPlanning = value === biz_days[0];\n  const eleId = `biz-day-${value}`;\n  return (\n    <>\n      <td\n        className={classNames(weekClassName(idx), { \"table-info\": isPlanning })}\n        id={eleId}\n      >\n        {biz.isWeekDay(item) ? (\n          <FormGroup check inline>\n            <Label check>\n              <Input\n                onChange={handleChange}\n                disabled={biz.isWeekendDay(item)}\n                value={value}\n                type=\"checkbox\"\n                checked={_.includes(biz_days, value)}\n                className=\"form-check-input\"\n              />\n              {value}\n            </Label>\n          </FormGroup>\n        ) : (\n          <span>{value}</span>\n        )}\n      </td>\n      {_.includes(biz_days, value) ? (\n        <UncontrolledTooltip target={eleId}>\n          {dayName(value, biz_days)}\n        </UncontrolledTooltip>\n      ) : null}\n    </>\n  );\n};\n\nexport const DaysSelector = () => {\n  const {\n    state: { mid, milestones, biz_days },\n    dispatch\n  } = useContext(RootContext);\n  const [items, setItems] = useState<Moment[]>([]);\n  useEffect(() => {\n    const milestone = getMilestone(mid, milestones);\n    if (milestone) {\n      const items = getDays(milestone);\n      setItems(items);\n      if (biz_days.length <= 1) {\n        dispatch({\n          type: ActionTypes.SET_BIZ_DAYS,\n          payload: { biz_days: getDefaultBizDays(items) }\n        });\n      }\n    }\n  }, [mid, milestones, biz_days, dispatch]);\n  if (items.length === 0) {\n    return null;\n  } else {\n    const weekdays = _.chunk(\n      [..._.times(items[0].day(), () => null), ...items],\n      7\n    );\n    return (\n      <Card>\n        <CardHeader>Business Days</CardHeader>\n        <Table bordered>\n          <thead>\n            <tr>\n              {moment.weekdays().map((item, idx) => (\n                <th\n                  key={idx}\n                  className={classNames(\"text-center\", weekClassName(idx))}\n                >\n                  {item}\n                </th>\n              ))}\n            </tr>\n          </thead>\n          <tbody>\n            {weekdays.map((days, i) => (\n              <tr key={i}>\n                {days.map((item, idx) => (\n                  <DayItem\n                    idx={idx}\n                    key={idx}\n                    item={item}\n                    biz_days={biz_days}\n                  />\n                ))}\n              </tr>\n            ))}\n          </tbody>\n        </Table>\n      </Card>\n    );\n  }\n};\n","import React, { useCallback, useContext } from \"react\";\nimport _ from \"lodash\";\nimport { RootContext } from \"../Provider\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  Input,\n  FormGroup,\n  Label\n} from \"reactstrap\";\nimport { ITaskStatus } from \"../store\";\nimport { ActionTypes } from \"../actions\";\nconst StatusItem = ({ item }: { item: ITaskStatus }) => {\n  const {\n    state: { reject_task_status_ids },\n    dispatch\n  } = useContext(RootContext);\n  const handleChange = useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>) => {\n      const reject_task_status_id = e.target.value;\n      if (e.target.checked) {\n        dispatch({\n          type: ActionTypes.REMOVE_REJECT_TASK_STATUS_ID,\n          payload: { reject_task_status_id }\n        });\n      } else {\n        dispatch({\n          type: ActionTypes.ADD_REJECT_TASK_STATUS_ID,\n          payload: { reject_task_status_id }\n        });\n      }\n    },\n    [dispatch]\n  );\n  return (\n    <FormGroup check inline>\n      <Label check>\n        <Input\n          onChange={handleChange}\n          type=\"checkbox\"\n          value={item.id}\n          defaultChecked={!_.includes(reject_task_status_ids, String(item.id))}\n        />\n        {item.name}\n      </Label>\n    </FormGroup>\n  );\n};\nexport const TaskStatusSelector = () => {\n  const {\n    state: { task_statuses }\n  } = useContext(RootContext);\n  if (task_statuses.length === 0) {\n    return null;\n  }\n  return (\n    <Card>\n      <CardHeader>Task status</CardHeader>\n      <CardBody>\n        {task_statuses.map(item => (\n          <StatusItem key={item.id} item={item} />\n        ))}\n      </CardBody>\n    </Card>\n  );\n};\n","import React, { useContext, useState, useCallback } from \"react\";\nimport _ from \"lodash\";\nimport classNames from \"classnames\";\nimport { RootContext } from \"../Provider\";\nimport {\n  Card,\n  CardHeader,\n  Collapse,\n  Form,\n  Input,\n  InputGroup,\n  InputGroupAddon,\n  Button,\n  Badge\n} from \"reactstrap\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faChevronCircleRight,\n  faExternalLinkAlt\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { ProjectSelector } from \"./ProjectSelector\";\nimport { MilestoneSelector } from \"./MilestoneSelector\";\nimport { CustomValuesSelector } from \"./CustomValuesSelector\";\nimport { DaysSelector, getMilestone } from \"./DaysSelector\";\nimport { TaskStatusSelector } from \"./TaskStatusSelector\";\nimport { IMilestone } from \"../store\";\nimport styles from \"./Controller.module.css\";\nimport { ActionTypes } from \"../actions\";\nconst getSpName = (mid: string, items: IMilestone[]) =>\n  _.get(getMilestone(mid, items), \"name\", \"\");\nconst getTaskboardUrl = (url: string, mid: string, items: IMilestone[]) => {\n  const milestone = getMilestone(mid, items);\n  if (url && milestone) {\n    return `${url}/project/${milestone.project_extra_info.slug}/taskboard/${\n      milestone.slug\n    }`;\n  } else {\n    return \"\";\n  }\n};\n\nconst getRange = (biz_days: string[]) => {\n  if (biz_days.length > 1) {\n    return `[${_.head(biz_days)} - ${_.last(biz_days)}]`;\n  } else {\n    return \"\";\n  }\n};\nexport const ToggleIcon = ({ isOpen }: { isOpen: boolean }) => {\n  const rotation = isOpen ? 90 : undefined;\n  return (\n    <FontAwesomeIcon\n      className=\"text-muted mr-2\"\n      rotation={rotation}\n      icon={faChevronCircleRight}\n    />\n  );\n};\nexport const Controller = () => {\n  const {\n    state: { url: stateUrl, isOpen, mid, milestones, biz_days },\n    dispatch\n  } = useContext(RootContext);\n  const [url, setUrl] = useState(\"\");\n  const handleUrl = useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>) => {\n      setUrl(e.target.value);\n    },\n    [setUrl]\n  );\n  const handleSubmit = useCallback(\n    (e: React.FormEvent) => {\n      if (url) {\n        dispatch({ type: ActionTypes.SET_URL, payload: { url } });\n      }\n      e.preventDefault();\n    },\n    [url, dispatch]\n  );\n  const handleHref = useCallback((e: React.FormEvent) => {\n    e.stopPropagation();\n  }, []);\n  const toggle = useCallback(() => {\n    if (isOpen) {\n      dispatch({ type: ActionTypes.CLOSE_CONTROLLER });\n    } else {\n      dispatch({ type: ActionTypes.OPEN_CONTROLLER });\n    }\n  }, [dispatch, isOpen]);\n  const taskboardUrl = getTaskboardUrl(stateUrl, mid, milestones);\n  return (\n    <Card>\n      <CardHeader className={classNames(styles.header)} onClick={toggle}>\n        <ToggleIcon isOpen={isOpen} />\n        <Badge color=\"primary\" pill className=\"p-1 m-1\">\n          <span>{getSpName(mid, milestones)}</span>\n        </Badge>\n        <Badge className=\"p-1 m-1\">\n          <span>{getRange(biz_days)}</span>\n        </Badge>\n        {taskboardUrl ? (\n          <a\n            target=\"_blank\"\n            onClick={handleHref}\n            className=\"float-right\"\n            href={taskboardUrl}\n            rel=\"noopener noreferrer\"\n          >\n            <FontAwesomeIcon className=\"mr-1\" icon={faExternalLinkAlt} />\n            Taskboard\n          </a>\n        ) : null}\n      </CardHeader>\n      <Collapse isOpen={isOpen}>\n        <Form onSubmit={handleSubmit}>\n          <InputGroup>\n            <InputGroupAddon addonType=\"prepend\">URL</InputGroupAddon>\n            <Input\n              defaultValue={stateUrl}\n              onChange={handleUrl}\n              placeholder=\"http://hostname:port\"\n            />\n            <InputGroupAddon addonType=\"append\">\n              <Button>Set</Button>\n            </InputGroupAddon>\n          </InputGroup>\n        </Form>\n        <div className=\"row\">\n          <ProjectSelector />\n          <MilestoneSelector />\n        </div>\n        <CustomValuesSelector />\n        <DaysSelector />\n        <TaskStatusSelector />\n      </Collapse>\n    </Card>\n  );\n};\n","import React, { useContext, useCallback } from \"react\";\nimport { Button } from \"reactstrap\";\nimport { faSyncAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { RootContext } from \"../Provider\";\nimport { ActionTypes } from \"../actions\";\nexport const UpdateButton: React.FC = () => {\n  const { dispatch } = useContext(RootContext);\n  const updateData = useCallback(() => {\n    dispatch({ type: ActionTypes.UPDATE_DATA });\n  }, [dispatch]);\n  return (\n    <Button onClick={updateData}>\n      <FontAwesomeIcon icon={faSyncAlt} />\n    </Button>\n  );\n};\n","import React, { useCallback, useContext, useEffect, useState } from \"react\";\nimport { ICustomValueMap, IUser, ITask, ICustomAttr } from \"../store\";\nimport { RootContext } from \"../Provider\";\nimport classNames from \"classnames\";\nimport {\n  Table,\n  Navbar,\n  Form,\n  Input,\n  InputGroup,\n  InputGroupAddon,\n  InputGroupText,\n  Progress\n} from \"reactstrap\";\nimport _ from \"lodash\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faMedal,\n  faTimes,\n  faEquals,\n  faGrinBeam,\n  faGrinBeamSweat,\n  faDizzy\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { UpdateButton } from \"./UpdateButton\";\nimport styles from \"./UserTasks.module.css\";\nimport moment from \"moment\";\nimport { Link } from \"react-router-dom\";\n\nconst barStyles = [\"success\", \"warning\", \"info\", \"danger\"];\nconst getTasksByUser = (items: ITask[]) => _.groupBy(items, \"assigned_to\");\nconst getClosedTasks = (items: ITask[]) => items.filter(item => item.is_closed);\nexport const parseCustomVal = (val: string) =>\n  _.chain(val)\n    .replace(/[^0-9.+,]/g, \"\")\n    .replace(/[+]/g, \",\")\n    .split(\",\")\n    .compact()\n    .map(Number)\n    .sum()\n    .value();\n\nexport const getCustomVal = (\n  custom_value_map: ICustomValueMap,\n  task: ITask,\n  id: number\n) => {\n  if (custom_value_map.has(task)) {\n    return parseCustomVal(\n      _.get(custom_value_map.get(task), `attributes_values.${id}`, \"0\")\n    );\n  } else {\n    return 0;\n  }\n};\nexport const getCustomValVersion = (\n  custon_value_map: ICustomValueMap,\n  task: ITask\n) => {\n  if (custon_value_map.has(task)) {\n    return _.get(custon_value_map.get(task), \"version\");\n  } else {\n    return undefined;\n  }\n};\nexport const isCustomValValid = (e: number, r: number, is_closed: boolean) =>\n  is_closed && r === e;\nexport const isCustomValInvalid = (e: number, r: number) => r > e;\nconst getGrade = (e: number, r: number): [string | null, number] => {\n  if (_.isNumber(e) && _.isNumber(r) && e > 0) {\n    const diff = Math.abs(e - r) / e;\n    if (diff <= 0.05) {\n      return [\"gold\", 3];\n    }\n    if (diff <= 0.1) {\n      return [\"silver\", 2];\n    }\n    if (diff < 0.2) {\n      return [\"bronze\", 1];\n    }\n  }\n  return [null, 0];\n};\nconst NameAndWorkLoad = ({\n  username,\n  val,\n  total,\n  imgSrc\n}: {\n  username: string;\n  val: number;\n  total: number;\n  imgSrc: string;\n}) => {\n  if (!val) {\n    return (\n      <>\n        <td>\n          <img className={styles.avator} src={imgSrc} alt={username} />{\" \"}\n          {username}\n        </td>\n        <td />\n      </>\n    );\n  }\n  const diff = (val - total) / total;\n  let icon;\n  let tblCls;\n  if (diff < -0.1) {\n    icon = faGrinBeam;\n    tblCls = \"\";\n  } else if (diff <= 0.1) {\n    tblCls = \"table-success\";\n    icon = faGrinBeam;\n  } else if (diff <= 0.2) {\n    tblCls = \"table-warning\";\n    icon = faGrinBeamSweat;\n  } else {\n    tblCls = \"table-danger\";\n    icon = faDizzy;\n  }\n  return (\n    <>\n      <td className={tblCls}>\n        <img className={styles.avator} src={imgSrc} alt={username} /> {username}\n        <FontAwesomeIcon className=\"mx-1\" icon={icon} />\n      </td>\n      <td className={classNames(tblCls, \"text-right\")}>{val}</td>\n    </>\n  );\n};\n\nexport const Medal = ({ e, r }: { e: number; r: number }) => {\n  const [grade, num] = getGrade(e, r);\n  if (grade) {\n    return (\n      <>\n        {_.times(num).map(i => (\n          <FontAwesomeIcon key={i} className={styles[grade]} icon={faMedal} />\n        ))}\n      </>\n    );\n  } else {\n    return null;\n  }\n};\ninterface IProgressTotal {\n  status: number;\n  total: number;\n  style?: string;\n  label: string;\n}\nconst UserRow = ({\n  item,\n  sums,\n  isPast,\n  total,\n  hpd,\n  closedTasks\n}: {\n  item: IUser;\n  sums: { [key: string]: { e: number; r: number } };\n  isPast: boolean;\n  total: number;\n  hpd: number;\n  closedTasks: ITask[];\n}) => {\n  const {\n    state: {\n      custom_value_map,\n      custom_eid,\n      reject_task_status_ids,\n      task_statuses\n    }\n  } = useContext(RootContext);\n  const [customTotal, setTotal] = useState<number>(0);\n  const [progressTotal, setProgressTotal] = useState<IProgressTotal[]>([]);\n  const handleChange = useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>) => {\n      setTotal(Number(e.target.value) || 0);\n    },\n    [setTotal]\n  );\n  const sumItem = _.get(sums, item.id);\n  const e = _.get(sumItem, \"e\");\n  const r = _.get(sumItem, \"r\");\n  const margedTotal = customTotal || total;\n  const totalStr = String(margedTotal);\n  const imgSrc = item.photo || `http://i.pravatar.cc/80?u=${Math.random()}`;\n  useEffect(() => {\n    const closed_status = _.chain(task_statuses)\n      .filter(item => item.is_closed)\n      .reject(item => _.includes(reject_task_status_ids, String(item.id)))\n      .orderBy(\"id\")\n      .reverse()\n      .map(item => item.id)\n      .value();\n    const closedTotals = _.chain(closedTasks)\n      .groupBy(\"status\")\n      .mapValues(ts =>\n        _.reduce(\n          ts,\n          (result, t) => {\n            result.status = t.status;\n            result.total += getCustomVal(\n              custom_value_map,\n              t,\n              Number(custom_eid)\n            );\n            result.label = t.status_extra_info.name;\n            return result;\n          },\n          { status: 0, total: 0, label: \"\", style: \"\" }\n        )\n      )\n      .value();\n    const sortedTotals = _.orderBy(closedTotals, \"status\")\n      .reverse()\n      .map(item => ({\n        ...item,\n        style: barStyles[closed_status.indexOf(item.status)]\n      }));\n    setProgressTotal(sortedTotals);\n  }, [\n    setProgressTotal,\n    custom_eid,\n    custom_value_map,\n    closedTasks,\n    task_statuses,\n    reject_task_status_ids\n  ]);\n  return (\n    <tr key={item.id}>\n      {total > 0 ? (\n        <>\n          <NameAndWorkLoad\n            username={item.username}\n            val={e}\n            total={margedTotal}\n            imgSrc={imgSrc}\n          />\n          <td className=\"text-right\">{total}</td>\n          <td className={styles.custom_input_td}>\n            <Input\n              bsSize=\"sm\"\n              type=\"number\"\n              className=\"text-right\"\n              value={totalStr}\n              step={hpd}\n              onChange={handleChange}\n            />\n          </td>\n        </>\n      ) : (\n        <>\n          <td>\n            <img className={styles.avator} src={imgSrc} alt={item.username} />{\" \"}\n            <Link to={`/${item.id}`}>{item.username}</Link>\n          </td>\n          <td className=\"text-right\">{e}</td>\n          <td className=\"text-right\">{r}</td>\n          <td>\n            {_.isNumber(e) && (\n              <Progress multi>\n                {progressTotal.map((item, idx) => (\n                  <Progress\n                    bar\n                    key={idx}\n                    value={item.total}\n                    color={item.style}\n                    max={e}\n                  >\n                    {item.label}\n                  </Progress>\n                ))}\n              </Progress>\n            )}\n          </td>\n        </>\n      )}\n\n      {isPast ? (\n        <td>\n          <Medal e={e} r={r} />\n        </td>\n      ) : null}\n    </tr>\n  );\n};\nconst getTaskSumByUser = (\n  items: ITask[],\n  custom_value_map: ICustomValueMap,\n  custom_eid: string,\n  custom_rid: string\n) => {\n  const eid = Number(custom_eid);\n  const rid = Number(custom_rid);\n  const tasksByUser = _.mapValues(getTasksByUser(items), tasks =>\n    _.chain(tasks)\n      .map(task => ({\n        e: getCustomVal(custom_value_map, task, eid),\n        r: getCustomVal(custom_value_map, task, rid)\n      }))\n      .reduce((result, val) => ({ e: result.e + val.e, r: result.r + val.r }), {\n        e: 0,\n        r: 0\n      })\n      .value()\n  );\n  return tasksByUser;\n};\nexport const getCustomAttr = (items: ICustomAttr[], id: number) =>\n  items.find(item => item.id === id);\nexport const UserTasks = () => {\n  const {\n    state: {\n      tasks,\n      custom_value_map,\n      custom_attrs,\n      custom_eid,\n      custom_rid,\n      biz_days,\n      project: { members }\n    }\n  } = useContext(RootContext);\n  const [hpd, setHpd] = useState<number>(0);\n  const [total, setTotal] = useState<number>(0);\n  const activeLen = biz_days.length - 1;\n  const handleChange = useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>) => {\n      setHpd(Number(e.target.value) || 0);\n    },\n    [setHpd]\n  );\n  const disableSubmit = useCallback((e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    e.stopPropagation();\n  }, []);\n  useEffect(() => {\n    setTotal(hpd * activeLen);\n  }, [hpd, activeLen, setTotal]);\n  const taskSumByUser = getTaskSumByUser(\n    tasks,\n    custom_value_map,\n    custom_eid,\n    custom_rid\n  );\n  const customAttrE = getCustomAttr(custom_attrs, Number(custom_eid));\n  const customAttrR = getCustomAttr(custom_attrs, Number(custom_rid));\n  if (!customAttrE || !customAttrR || biz_days.length <= 1) {\n    return null;\n  }\n  const unassignedSum = _.get(taskSumByUser, \"null.e\", 0);\n  const isPlanning = total > 0;\n  const isPast =\n    !isPlanning &&\n    moment().diff(\n      moment(_.last(biz_days))\n        .local()\n        .endOf(\"days\")\n    ) > 0;\n  const tasksByUser = getTasksByUser(getClosedTasks(tasks));\n  return (\n    <>\n      <Navbar color=\"light\" light>\n        <Form inline={true} className=\"mr-auto\" onSubmit={disableSubmit}>\n          <InputGroup>\n            <Input\n              type=\"number\"\n              step=\"0.5\"\n              placeholder=\"hours / day\"\n              className=\"text-right\"\n              onChange={handleChange}\n            />\n            <InputGroupAddon addonType=\"append\">\n              <InputGroupText>\n                <FontAwesomeIcon className=\"mx-2\" icon={faTimes} />\n                {activeLen} [days]\n                <FontAwesomeIcon className=\"mx-2\" icon={faEquals} />\n              </InputGroupText>\n              {total > 0 ? (\n                <>\n                  <InputGroupText className=\"bg-white\">\n                    <strong>{total}</strong>\n                  </InputGroupText>\n                  <InputGroupText>hours / sprint</InputGroupText>\n                </>\n              ) : null}\n            </InputGroupAddon>\n          </InputGroup>\n        </Form>\n        <UpdateButton />\n      </Navbar>\n      <Table bordered>\n        <thead>\n          <tr>\n            <th>Name</th>\n            <th>{customAttrE.name}</th>\n            {isPlanning ? (\n              <>\n                <th>Total</th> <th>Custom</th>\n              </>\n            ) : (\n              <>\n                <th>{customAttrR.name}</th>\n                <th>Progress</th>\n              </>\n            )}\n            {isPast ? <th>Grade</th> : null}\n          </tr>\n        </thead>\n        <tbody>\n          {(members || []).map(item => (\n            <UserRow\n              key={item.id}\n              isPast={isPast}\n              item={item}\n              sums={taskSumByUser}\n              total={total}\n              hpd={hpd}\n              closedTasks={tasksByUser[item.id] || []}\n            />\n          ))}\n          <tr key=\"null\">\n            <td>unassigned</td>\n            <td className=\"text-right text-danger\">{unassignedSum}</td>\n            <td />\n            <td />\n            {isPast ? <td /> : null}\n          </tr>\n        </tbody>\n      </Table>\n    </>\n  );\n};\n","import React, { useContext, useState, useEffect } from \"react\";\nimport { RootContext } from \"../Provider\";\nimport { ITask } from \"../store\";\nimport { ListGroup, ListGroupItem, Card, CardHeader } from \"reactstrap\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faExternalLinkAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport { getCustomVal } from \"./UserTasks\";\nconst TaskItem = ({ url, item }: { item: ITask; url: string }) => {\n  const {\n    project_extra_info: { slug }\n  } = item;\n  const href = `${url}/project/${slug}/task/${item.ref}`;\n  return (\n    <ListGroupItem tag=\"a\" target=\"_blank\" href={href}>\n      <FontAwesomeIcon icon={faExternalLinkAlt} /> {item.subject}\n    </ListGroupItem>\n  );\n};\nexport const UnEstimatedTasks = () => {\n  const {\n    state: { url, tasks, custom_value_map, custom_eid }\n  } = useContext(RootContext);\n  const [items, setItems] = useState<ITask[]>([]);\n  useEffect(() => {\n    if (tasks.length > 0 && custom_eid) {\n      const eid = Number(custom_eid);\n      const items = tasks.filter(\n        task => getCustomVal(custom_value_map, task, eid) === 0\n      );\n      if (tasks.length > items.length) {\n        setItems(items);\n      }\n    }\n  }, [tasks, custom_value_map, custom_eid]);\n  if (items.length === 0) {\n    return null;\n  } else {\n    return (\n      <Card>\n        <CardHeader>Un estimated tasks</CardHeader>\n        <ListGroup>\n          {items.map(item => (\n            <TaskItem url={url} key={item.id} item={item} />\n          ))}\n        </ListGroup>\n      </Card>\n    );\n  }\n};\n","import React, { useContext, useState, useEffect } from \"react\";\nimport { ComposedChart, Tooltip, Line, XAxis, YAxis, Bar } from \"recharts\";\nimport { ITask, ICustomValueMap } from \"../store\";\nimport _ from \"lodash\";\nimport moment from \"moment\";\nimport { RootContext } from \"../Provider\";\nimport { dayNameFromIdx } from \"./DaysSelector\";\nimport { getCustomVal } from \"./UserTasks\";\nimport { Card, CardHeader } from \"reactstrap\";\ninterface IChartItem {\n  label: string;\n  estimate: number;\n  result?: number;\n  add?: number;\n}\n\nconst getTaskFinished = (tasks: ITask[], date: string) =>\n  tasks.filter(task =>\n    task.finished_date\n      ? moment(date)\n          .local()\n          .endOf(\"days\")\n          .diff(moment(task.finished_date)) > 0\n      : false\n  );\n\nconst getTaskCreatedToday = (tasks: ITask[], date: string) =>\n  tasks.filter(\n    task =>\n      moment(date)\n        .local()\n        .format(\"YYYY-MM-DD\") ===\n      moment(task.created_date)\n        .local()\n        .format(\"YYYY-MM-DD\")\n  );\n\nconst getTaskCreated = (tasks: ITask[], date: string) =>\n  tasks.filter(\n    task =>\n      moment(date)\n        .endOf(\"days\")\n        .diff(moment(task.created_date)) > 0\n  );\n\nconst getSumVal = (\n  custom_value_map: ICustomValueMap,\n  tasks: ITask[],\n  custom_eid: string\n) => {\n  return _.chain(tasks)\n    .map(task => getCustomVal(custom_value_map, task, Number(custom_eid)))\n    .sum()\n    .value();\n};\nexport const Chart = ({ tasks }: { tasks: ITask[] }) => {\n  const [data, setData] = useState<IChartItem[]>([]);\n  const {\n    state: { biz_days, custom_value_map, custom_eid }\n  } = useContext(RootContext);\n  useEffect(() => {\n    const days_len = biz_days.length;\n    if (days_len > 0 && tasks.length > 0 && custom_eid) {\n      const allTaskVal = getSumVal(\n        custom_value_map,\n        getTaskCreated(tasks, biz_days[0]),\n        custom_eid\n      );\n      const data = biz_days.map((day, idx) => {\n        const label = dayNameFromIdx(day, idx);\n        const estimate = allTaskVal - (allTaskVal * idx) / (days_len - 1);\n        if (\n          moment()\n            .local()\n            .endOf(\"days\")\n            .diff(moment(day)) > 0\n        ) {\n          const add =\n            idx === 0\n              ? 0\n              : getSumVal(\n                  custom_value_map,\n                  getTaskCreatedToday(tasks, day),\n                  custom_eid\n                );\n          const result =\n            getSumVal(\n              custom_value_map,\n              getTaskCreated(tasks, day),\n              custom_eid\n            ) -\n            add -\n            getSumVal(\n              custom_value_map,\n              getTaskFinished(tasks, day),\n              custom_eid\n            );\n          return { label, estimate, result, add };\n        } else {\n          return { label, estimate };\n        }\n      });\n      setData(data);\n    } else {\n      setData([]);\n    }\n  }, [tasks, biz_days, custom_eid, custom_value_map, setData]);\n  if (data.length === 0) {\n    return null;\n  } else {\n    return (\n      <Card>\n        <CardHeader>Burn down chart</CardHeader>\n        <ComposedChart data={data} width={800} height={400}>\n          <YAxis />\n          <XAxis dataKey=\"label\" />\n          <Tooltip />\n          <Bar dataKey=\"result\" fill=\"#8884d8\" stackId=\"a\" />\n          <Bar dataKey=\"add\" fill=\"#82ca9d\" stackId=\"a\" />\n          <Line dataKey=\"estimate\" />\n        </ComposedChart>\n      </Card>\n    );\n  }\n};\n","import React, { useContext } from \"react\";\nimport { RootContext } from \"../Provider\";\nimport { Chart } from \"./Chart\";\n\nexport const OverviewChart = () => {\n  const {\n    state: { tasks }\n  } = useContext(RootContext);\n  return <Chart tasks={tasks} />;\n};\n","import * as React from \"react\";\nimport { UserTasks } from \"./UserTasks\";\nimport { UnEstimatedTasks } from \"./UnEstimatedTasks\";\nimport { OverviewChart } from \"./OverviewChart\";\n\nexport const OverView = () => (\n  <>\n    <UserTasks />\n    <UnEstimatedTasks />\n    <OverviewChart />\n  </>\n);\n","import React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSpinner } from \"@fortawesome/free-solid-svg-icons\";\nimport { InputGroupAddon, InputGroupText } from \"reactstrap\";\nexport const InputGroupSpinner: React.FC = () => {\n  return (\n    <InputGroupAddon addonType=\"append\">\n      <InputGroupText>\n        <FontAwesomeIcon icon={faSpinner} className=\"fa-pulse\" />\n      </InputGroupText>\n    </InputGroupAddon>\n  );\n};\n","import React, { useContext, useState, useCallback, useEffect } from \"react\";\nimport {\n  Button,\n  Card,\n  CardHeader,\n  Collapse,\n  Row,\n  Col,\n  Input,\n  InputGroup,\n  InputGroupAddon,\n  UncontrolledDropdown,\n  DropdownToggle,\n  DropdownItem,\n  DropdownMenu,\n  Spinner\n} from \"reactstrap\";\nimport classNames from \"classnames\";\nimport _ from \"lodash\";\nimport { ITasksByUserStory, ITask, ITaskStatus } from \"../store\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faExternalLinkAlt,\n  faCloudUploadAlt,\n  faEdit,\n  faHandPointRight\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { InputGroupSpinner } from \"./InputGroupSpinner\";\nimport { RootContext } from \"../Provider\";\nimport {\n  getCustomAttr,\n  getCustomVal,\n  getCustomValVersion,\n  isCustomValInvalid,\n  isCustomValValid,\n  Medal\n} from \"./UserTasks\";\nimport { ToggleIcon } from \"./Controller\";\nimport ListGroup from \"reactstrap/lib/ListGroup\";\nimport ListGroupItem from \"reactstrap/lib/ListGroupItem\";\nimport styles from \"./UserStory.module.css\";\nimport { Switch } from \"@rmwc/switch\";\nimport InputGroupText from \"reactstrap/lib/InputGroupText\";\nimport { ActionTypes } from \"../actions\";\nconst UserStoryLink = ({ url, item }: { url: string; item: ITask }) => {\n  const {\n    user_story_extra_info,\n    project_extra_info: { slug }\n  } = item;\n  const usName = user_story_extra_info\n    ? `#${user_story_extra_info.ref} ${user_story_extra_info.subject}`\n    : undefined;\n  const href = user_story_extra_info\n    ? `${url}/project/${slug}/us/${user_story_extra_info.ref}`\n    : \"#\";\n\n  if (usName) {\n    return (\n      <a href={href} target=\"_blank\" rel=\"noopener noreferrer\" title={usName}>\n        <FontAwesomeIcon icon={faExternalLinkAlt} /> {usName}\n      </a>\n    );\n  } else {\n    return <>(Unassigned tasks)</>;\n  }\n};\n\nconst TaskLink = ({ url, item }: { url: string; item: ITask }) => {\n  const taskName = `#${item.ref} ${item.subject}`;\n  const href = `${url}/project/${item.project_extra_info.slug}/task/${\n    item.ref\n  }`;\n  return (\n    <a href={href} target=\"_blank\" rel=\"noopener noreferrer\" title={taskName}>\n      <FontAwesomeIcon icon={faExternalLinkAlt} /> {taskName}\n    </a>\n  );\n};\n\ninterface ToggleNumberInputProps {\n  label: string;\n  value: number;\n  onSubmit?: (value: number) => void;\n  valid?: boolean;\n  invalid?: boolean;\n  disabled?: boolean;\n  loading?: boolean;\n}\nconst ToggleNumberInput: React.FC<ToggleNumberInputProps> = ({\n  label,\n  value,\n  onSubmit,\n  valid,\n  invalid,\n  disabled,\n  loading\n}) => {\n  const [checked, setChecked] = useState<boolean>(false);\n  const [val, setVal] = useState(\"\");\n  const onChange = useCallback(\n    (evt: React.FormEvent<any>) => {\n      setChecked(evt.currentTarget.checked);\n    },\n    [setChecked]\n  );\n  const handleVal = useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>) => {\n      setVal(e.target.value);\n    },\n    [setVal]\n  );\n  const handeSubmit = useCallback(() => {\n    const num = Number(val);\n    if (val !== \"\" && num >= 0 && onSubmit) {\n      onSubmit(num);\n      setChecked(false);\n    }\n  }, [val, onSubmit, setChecked]);\n  useEffect(() => {\n    if (disabled) {\n      setChecked(false);\n    }\n  }, [setChecked, disabled]);\n  const title = disabled ? \"Need sign in!\" : \"\";\n  return (\n    <InputGroup className={styles.toggle_input}>\n      <InputGroupAddon addonType=\"prepend\">{label}</InputGroupAddon>\n      {loading ? (\n        <InputGroupSpinner />\n      ) : (\n        <>\n          {checked ? (\n            <>\n              <InputGroupAddon addonType=\"prepend\">\n                <InputGroupText>{value}</InputGroupText>\n              </InputGroupAddon>\n              <InputGroupAddon addonType=\"prepend\">\n                <InputGroupText>\n                  <FontAwesomeIcon\n                    className=\"text-info\"\n                    icon={faHandPointRight}\n                  />\n                </InputGroupText>\n              </InputGroupAddon>\n              <Input\n                onInput={handleVal}\n                onChange={handleVal}\n                defaultValue={String(value)}\n                type=\"number\"\n                step=\"0.5\"\n                min=\"0\"\n              />\n              <InputGroupAddon addonType=\"append\">\n                <Button color=\"info\" onClick={handeSubmit}>\n                  <FontAwesomeIcon icon={faCloudUploadAlt} />\n                </Button>\n              </InputGroupAddon>\n            </>\n          ) : (\n            <Input valid={valid} invalid={invalid} readOnly value={value} />\n          )}\n          <InputGroupAddon addonType=\"append\" title={title}>\n            <Switch disabled={disabled} checked={checked} onChange={onChange}>\n              <FontAwesomeIcon className=\"text-info\" icon={faEdit} />\n            </Switch>\n          </InputGroupAddon>\n        </>\n      )}\n    </InputGroup>\n  );\n};\ninterface GradeProps {\n  e: number;\n  r: number;\n}\nexport const Grade: React.FC<GradeProps> = ({ e, r }) => {\n  return (\n    <InputGroup className={styles.display_medal}>\n      <InputGroupAddon addonType=\"prepend\">Grade</InputGroupAddon>\n      <InputGroupText className={styles.medal}>\n        <Medal e={e} r={r} />\n      </InputGroupText>\n    </InputGroup>\n  );\n};\n\ninterface TaskStatusItemProps {\n  item: ITaskStatus;\n  task: ITask;\n  onSelect?: (id: number) => void;\n}\nconst TaskStatusItem: React.FC<TaskStatusItemProps> = ({\n  item,\n  task,\n  onSelect\n}) => {\n  const { dispatch } = useContext(RootContext);\n  const handleClick = useCallback(() => {\n    dispatch({\n      type: ActionTypes.PATCH_TASK,\n      payload: {\n        key: \"status\",\n        value: item.id,\n        id: task.id\n      }\n    });\n    onSelect && onSelect(item.id);\n  }, [dispatch, item.id, task.id, onSelect]);\n  return <DropdownItem onClick={handleClick}>{item.name}</DropdownItem>;\n};\ninterface TaskStatusSelectorProps {\n  task: ITask;\n  disabled?: boolean;\n}\nconst TaskStatusSelector: React.FC<TaskStatusSelectorProps> = ({\n  task,\n  disabled\n}) => {\n  const [items, setItems] = useState<ITaskStatus[]>([]);\n  const [loading, setLoading] = useState<boolean>(false);\n  const {\n    state: { task_statuses, reject_task_status_ids }\n  } = useContext(RootContext);\n  useEffect(() => {\n    const list = task_statuses.filter(\n      item => !_.includes(reject_task_status_ids, String(item.id))\n    );\n    setItems(list);\n  }, [setItems, task_statuses, reject_task_status_ids]);\n  const handleSelect = useCallback(() => {\n    setLoading(true);\n  }, [setLoading]);\n  useEffect(() => {\n    setLoading(false);\n  }, [task.version, setLoading]);\n  return (\n    <>\n      {loading ? (\n        <Spinner type=\"grow\" color=\"info\" />\n      ) : (\n        <UncontrolledDropdown>\n          <DropdownToggle disabled={disabled} caret={!disabled}>\n            {task.status_extra_info.name}\n          </DropdownToggle>\n          <DropdownMenu>\n            {items.map(item => (\n              <TaskStatusItem\n                item={item}\n                key={item.id}\n                task={task}\n                onSelect={handleSelect}\n              />\n            ))}\n          </DropdownMenu>\n        </UncontrolledDropdown>\n      )}\n    </>\n  );\n};\n\nexport const TaskItem = ({ item }: { item: ITask }) => {\n  const {\n    state: {\n      url,\n      custom_attrs,\n      custom_eid,\n      custom_rid,\n      custom_value_map,\n      auth_token\n    },\n    dispatch\n  } = useContext(RootContext);\n  const version = getCustomValVersion(custom_value_map, item);\n  const onSubmitE = useCallback(\n    (value: number) => {\n      if (version) {\n        dispatch({\n          type: ActionTypes.PATCH_CUSTOM_VALUE,\n          payload: {\n            id: item.id,\n            key: custom_eid,\n            value,\n            version\n          }\n        });\n      }\n    },\n    [dispatch, item.id, custom_eid, version]\n  );\n  const onSubmitR = useCallback(\n    (value: number) => {\n      if (version) {\n        dispatch({\n          type: ActionTypes.PATCH_CUSTOM_VALUE,\n          payload: {\n            id: item.id,\n            key: custom_rid,\n            value,\n            version\n          }\n        });\n      }\n    },\n    [custom_rid, dispatch, item.id, version]\n  );\n  const customAttrE = getCustomAttr(custom_attrs, Number(custom_eid));\n  const customAttrR = getCustomAttr(custom_attrs, Number(custom_rid));\n  if (!customAttrE || !customAttrR) {\n    return null;\n  }\n  const e = getCustomVal(custom_value_map, item, customAttrE.id);\n  const r = getCustomVal(custom_value_map, item, customAttrR.id);\n  const valid = isCustomValValid(e, r, item.is_closed);\n  const invalid = isCustomValInvalid(e, r);\n  const disabled = auth_token === \"\";\n  const loading = !version;\n  return (\n    <ListGroupItem\n      className={classNames({ [styles.is_closed]: item.is_closed })}\n    >\n      <div className=\"d-flex mb-1\">\n        <div className=\"mr-auto text-truncate\">\n          <TaskLink url={url} item={item} />\n        </div>\n        <TaskStatusSelector task={item} disabled={disabled} />\n      </div>\n      <Row>\n        <Col>\n          <ToggleNumberInput\n            onSubmit={onSubmitE}\n            label={customAttrE.name}\n            value={e}\n            disabled={disabled}\n            loading={loading}\n          />\n        </Col>\n        <Col>\n          <ToggleNumberInput\n            onSubmit={onSubmitR}\n            label={customAttrR.name}\n            value={r}\n            valid={valid}\n            invalid={invalid}\n            disabled={disabled}\n            loading={loading}\n          />\n        </Col>\n        <Col>\n          <Grade e={e} r={r} />\n        </Col>\n      </Row>\n    </ListGroupItem>\n  );\n};\nexport const UserStory = ({ item }: { item: ITasksByUserStory }) => {\n  const {\n    state: { url }\n  } = useContext(RootContext);\n  const [isOpen, setIsOpen] = useState<boolean>(false);\n  const toggle = useCallback(() => {\n    setIsOpen(!isOpen);\n  }, [isOpen, setIsOpen]);\n  useEffect(() => {\n    setIsOpen(!item.is_closed);\n  }, [item.is_closed, setIsOpen]);\n  return (\n    <Card>\n      <CardHeader\n        className={classNames(styles.header, \"text-truncate\", {\n          [styles.is_closed]: item.is_closed\n        })}\n        onClick={toggle}\n      >\n        <ToggleIcon isOpen={isOpen} />\n        <UserStoryLink url={url} item={item.tasks[0]} />\n      </CardHeader>\n      <Collapse isOpen={isOpen}>\n        <ListGroup>\n          {item.tasks.map(task => (\n            <TaskItem item={task} key={task.id} />\n          ))}\n        </ListGroup>\n      </Collapse>\n    </Card>\n  );\n};\n","import React, { useContext, useState, useEffect } from \"react\";\nimport { RootContext } from \"../Provider\";\nimport {\n  Card,\n  CardHeader,\n  CardBody,\n  Input,\n  InputGroup,\n  InputGroupAddon,\n  Row,\n  Col\n} from \"reactstrap\";\nimport classNames from \"classnames\";\nimport { ITask, IUser, ITasksByUserStory } from \"../store\";\nimport { InputGroupSpinner } from \"./InputGroupSpinner\";\nimport {\n  getCustomAttr,\n  getCustomVal,\n  getCustomValVersion,\n  isCustomValInvalid,\n  isCustomValValid\n} from \"./UserTasks\";\nimport _ from \"lodash\";\nimport { UserStory, Grade } from \"./UserStory\";\nexport const PersonalTasks = ({ userInfo }: { userInfo: IUser }) => {\n  const {\n    state: {\n      tasks,\n      custom_attrs,\n      custom_value_map,\n      custom_eid,\n      custom_rid,\n      biz_days\n    }\n  } = useContext(RootContext);\n  const [items, setItems] = useState<ITask[]>([]);\n  const [userStories, setUserStories] = useState<ITasksByUserStory[]>([]);\n  useEffect(() => {\n    const userTasks = tasks\n      .filter(task => task.assigned_to === userInfo.id)\n      .sort((a, b) => a.user_story - b.user_story);\n    setItems(userTasks);\n    const userStories = _.chain(tasks)\n      .filter({ assigned_to: userInfo.id })\n      .groupBy(\"user_story\")\n      .map((items, key) => ({\n        user_story: Number(key),\n        user_story_extra_info: items[0].user_story_extra_info,\n        tasks: items,\n        is_closed: items.every(task => task.is_closed)\n      }))\n      .value();\n    setUserStories(userStories);\n  }, [tasks, userInfo.id]);\n\n  const customAttrE = getCustomAttr(custom_attrs, Number(custom_eid));\n  const customAttrR = getCustomAttr(custom_attrs, Number(custom_rid));\n  if (!customAttrE || !customAttrR || biz_days.length <= 1) {\n    return null;\n  }\n\n  const [e, r] = items.reduce(\n    (result, item) => {\n      return [\n        result[0] + getCustomVal(custom_value_map, item, customAttrE.id),\n        result[1] + getCustomVal(custom_value_map, item, customAttrR.id)\n      ];\n    },\n    [0, 0]\n  );\n  const valid = isCustomValValid(\n    e,\n    r,\n    userStories.every(item => item.is_closed)\n  );\n  const invalid = isCustomValInvalid(e, r);\n  const loading = items.some(\n    item => !getCustomValVersion(custom_value_map, item)\n  );\n\n  return (\n    <>\n      {userStories.map(item => (\n        <UserStory item={item} key={item.user_story} />\n      ))}\n      <Card>\n        <CardHeader className={classNames(\"bg-info\", \"text-light\")}>\n          Total\n        </CardHeader>\n        <CardBody>\n          <Row>\n            <Col>\n              <InputGroup>\n                <InputGroupAddon addonType=\"prepend\">\n                  {customAttrE.name}\n                </InputGroupAddon>\n                {loading ? <InputGroupSpinner /> : <Input readOnly value={e} />}\n              </InputGroup>\n            </Col>\n            <Col>\n              <InputGroup>\n                <InputGroupAddon addonType=\"prepend\">\n                  {customAttrR.name}\n                </InputGroupAddon>\n                {loading ? (\n                  <InputGroupSpinner />\n                ) : (\n                  <Input readOnly value={r} invalid={invalid} valid={valid} />\n                )}\n              </InputGroup>\n            </Col>\n            <Col>\n              <Grade e={e} r={r} />\n            </Col>\n          </Row>\n        </CardBody>\n      </Card>\n    </>\n  );\n};\n","import React from \"react\";\nimport { Card, CardHeader } from \"reactstrap\";\nimport { IUser } from \"../store\";\n\nimport styles from \"./PersonalInfo.module.css\";\n\nexport const PersonalInfo = ({ userInfo }: { userInfo: IUser }) => {\n  const imgSrc = userInfo.photo || `http://i.pravatar.cc/80?u=${Math.random()}`;\n  return (\n    <Card>\n      <CardHeader>\n        <img className={styles.avator} src={imgSrc} alt={userInfo.username} />\n        {` ${userInfo.username}'s tasks`}\n      </CardHeader>\n    </Card>\n  );\n};\n","import React, { useContext, useState, useEffect } from \"react\";\nimport { ITask, IUser } from \"../store\";\nimport { RootContext } from \"../Provider\";\nimport { Chart } from \"./Chart\";\n\nexport const PersonalChart = ({ userInfo }: { userInfo: IUser }) => {\n  const [userTasks, setUserTasks] = useState<ITask[]>([]);\n  const {\n    state: { tasks }\n  } = useContext(RootContext);\n  useEffect(() => {\n    const userTasks = tasks\n      .filter(task => task.assigned_to === userInfo.id)\n      .sort((a, b) => a.user_story - b.user_story);\n    setUserTasks(userTasks);\n  }, [tasks, userInfo.id]);\n\n  return <Chart tasks={userTasks} />;\n};\n","import React, { useCallback, useContext, useEffect, useState } from \"react\";\nimport {\n  Button,\n  Alert,\n  Navbar,\n  Form,\n  InputGroup,\n  Input,\n  InputGroupAddon,\n  InputGroupText,\n  Spinner\n} from \"reactstrap\";\nimport { PersonalTasks } from \"./PersonalTasks\";\nimport { PersonalInfo } from \"./PersonalInfo\";\nimport { RootContext } from \"../Provider\";\nimport { PersonalChart } from \"./PersonalChart\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faArrowCircleLeft,\n  faUser,\n  faKey,\n  faSignInAlt,\n  faSignOutAlt\n} from \"@fortawesome/free-solid-svg-icons\";\nimport { Link } from \"react-router-dom\";\nimport { ActionTypes } from \"../actions\";\nimport { UpdateButton } from \"./UpdateButton\";\nimport useRouter from \"use-react-router\";\nconst SignInForm: React.FC = () => {\n  const {\n    state: { auth_token, auth_error, username: sign_in_username },\n    dispatch\n  } = useContext(RootContext);\n\n  const [username, setUsername] = useState<string>(\"\");\n  const [password, setPassword] = useState<string>(\"\");\n  const [loading, setLoading] = useState<boolean>(false);\n\n  const handleSubmit = useCallback(\n    (e: React.FormEvent) => {\n      if (username && password) {\n        setLoading(true);\n        dispatch({\n          type: ActionTypes.SIGN_IN,\n          payload: {\n            username,\n            password\n          }\n        });\n      }\n      e.preventDefault();\n    },\n    [password, username, dispatch, setLoading]\n  );\n  const handleUsername = useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>) => {\n      setUsername(e.target.value);\n    },\n    [setUsername]\n  );\n  const handlePassword = useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>) => {\n      setPassword(e.target.value);\n    },\n    [setPassword]\n  );\n  const disableSubmit = useCallback((e: React.FormEvent) => {\n    e.preventDefault();\n  }, []);\n  const handleSignOut = useCallback(() => {\n    dispatch({ type: ActionTypes.SIGN_OUT });\n  }, [dispatch]);\n  useEffect(() => {\n    if (auth_error || auth_token) {\n      setLoading(false);\n    }\n  }, [auth_error, auth_token, setLoading]);\n  return (\n    <>\n      {auth_token ? (\n        <Form inline onSubmit={disableSubmit}>\n          <InputGroup>\n            <InputGroupAddon addonType=\"prepend\">\n              <InputGroupText>\n                <FontAwesomeIcon icon={faUser} />\n              </InputGroupText>\n            </InputGroupAddon>\n            <Input readOnly valid={true} placeholder={sign_in_username} />\n            <InputGroupAddon addonType=\"append\">\n              <Button onClick={handleSignOut}>\n                <FontAwesomeIcon icon={faSignOutAlt} />\n              </Button>\n            </InputGroupAddon>\n          </InputGroup>\n        </Form>\n      ) : (\n        <Form inline onSubmit={handleSubmit}>\n          <InputGroup>\n            <InputGroupAddon addonType=\"prepend\">\n              <InputGroupText>\n                <FontAwesomeIcon icon={faUser} />\n              </InputGroupText>\n            </InputGroupAddon>\n            <Input\n              disabled={loading}\n              onInput={handleUsername}\n              onChange={handleUsername}\n              name=\"username\"\n              placeholder=\"username\"\n              invalid={auth_error}\n            />\n          </InputGroup>\n          <InputGroup>\n            <InputGroupAddon addonType=\"prepend\">\n              <InputGroupText>\n                <FontAwesomeIcon icon={faKey} />\n              </InputGroupText>\n            </InputGroupAddon>\n            <Input\n              disabled={loading}\n              onInput={handlePassword}\n              onChange={handlePassword}\n              name=\"password\"\n              placeholder=\"password\"\n              type=\"password\"\n              invalid={auth_error}\n            />\n          </InputGroup>\n          <Button color=\"primary\">\n            {loading ? (\n              <Spinner size=\"sm\" type=\"grow\" />\n            ) : (\n              <FontAwesomeIcon icon={faSignInAlt} />\n            )}\n          </Button>\n        </Form>\n      )}\n    </>\n  );\n};\nexport const PersonalPage: React.FC = () => {\n  const {\n    state: { user },\n    dispatch\n  } = useContext(RootContext);\n  const {\n    match: {\n      params: { uid }\n    }\n  } = useRouter();\n  useEffect(() => {\n    if (uid) {\n      dispatch({ type: ActionTypes.FETCH_USER, payload: { uid } });\n    }\n    return () => {\n      dispatch({ type: ActionTypes.RESET_USER });\n    };\n  }, [dispatch, uid]);\n  return (\n    <>\n      <Navbar color=\"light\" light>\n        <Button tag={Link} to=\"/\">\n          <FontAwesomeIcon icon={faArrowCircleLeft} /> Go back\n        </Button>\n        <SignInForm />\n        <UpdateButton />\n      </Navbar>\n      {user ? (\n        <>\n          <PersonalInfo userInfo={user} />\n          <br />\n          <PersonalTasks userInfo={user} />\n          <br />\n          <PersonalChart userInfo={user} />\n        </>\n      ) : (\n        <Alert color=\"danger\">This user does not exist.</Alert>\n      )}\n    </>\n  );\n};\n","import React from \"react\";\nimport { Controller } from \"./components/Controller\";\nimport { Provider } from \"./Provider\";\nimport { HashRouter, Route } from \"react-router-dom\";\nimport { OverView } from \"./components/OverView\";\nimport { PersonalPage } from \"./components/PersonalPage\";\nexport const App = () => (\n  <div className=\"container\">\n    <HashRouter>\n      <Provider>\n        <Controller />\n        <Route exact path=\"/\" component={OverView} />\n        <Route exact path=\"/:uid\" component={PersonalPage} />\n      </Provider>\n    </HashRouter>\n  </div>\n);\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"@material/switch/dist/mdc.switch.css\";\nimport \"@material/form-field/dist/mdc.form-field.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"UserStory_header__1tc8G\",\"toggle_input\":\"UserStory_toggle_input__JHXrr\",\"display_medal\":\"UserStory_display_medal__22hJs\",\"medal\":\"UserStory_medal__ap0c_\",\"is_closed\":\"UserStory_is_closed__3W_SB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"gold\":\"UserTasks_gold__196BT\",\"silver\":\"UserTasks_silver__1ViV4\",\"bronze\":\"UserTasks_bronze__mYN2N\",\"custom_input_td\":\"UserTasks_custom_input_td__y-1Rp\",\"avator\":\"UserTasks_avator__3R6Qm\"};"],"sourceRoot":""}